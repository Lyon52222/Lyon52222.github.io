<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LYON&#39;S BLOG</title>
  
  <subtitle>In me the tiger sniffs the rose.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-07-21T09:16:23.315Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Lyon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ImageCaptioning</title>
    <link href="http://example.com/2021/07/20/ImageCaptioning/"/>
    <id>http://example.com/2021/07/20/ImageCaptioning/</id>
    <published>2021-07-20T13:48:16.000Z</published>
    <updated>2021-07-21T09:16:23.315Z</updated>
    
    <content type="html"><![CDATA[<p>这里汇总下最近看的Image Captioning相关的论文的特点和不足。</p><h1 id="Knowing-When-to-Look-Adaptive-Attention-via-A-Visual-Sentinel-for-Image-Captioning"><a href="#Knowing-When-to-Look-Adaptive-Attention-via-A-Visual-Sentinel-for-Image-Captioning" class="headerlink" title="[Knowing When to Look: Adaptive Attention via A Visual Sentinel for Image Captioning"></a>[Knowing When to Look: Adaptive Attention via A Visual Sentinel for Image Captioning</h1><p>](<a href="https://openaccess.thecvf.com/content_cvpr_2017/papers/Lu_Knowing_When_to_CVPR_2017_paper.pdf">https://openaccess.thecvf.com/content_cvpr_2017/papers/Lu_Knowing_When_to_CVPR_2017_paper.pdf</a>)<br>这篇论文主要是提出了，Image Captioning生成一句caption的过程中，不是每个单词都需要使用图片信息，有的反而是利用文本信息比较多。 比如生成a herd of sheep grazing on a lush green hillside。这句话中的a,herd,of,a,lush都无法从图片中得到任何有用的信息，只能依靠语言模型来生成，这其中的sheep,hillside可以通过scene graph中的node得到有用信息，其中的graze,on这类词汇可以通过scene graph中的relation信息来补充，其中的green可以通过scene graph中的attributes信息来补充。</p><p>所以通过这篇论文可以确立我论文的几个基本点：</p><ol><li><p>首先使用使用经典的scene graph网络将图片转换为一个scene graph其中包含，node, relation, attributes这三种信息。  这时，scene graph包含的node, ralation和attributes的数量都是很大的。所以后面还需要考虑如何有效的选择这三类属性。</p></li><li><p>第二个点就是需要像这篇网络中一样，设计一个可以判读何时更多的利用scene graph的信息和何时更多的利用以及生成的文本信息。 这篇论文是基于LSTM来做的， 因为最近Transformer很火，所以这里就考虑基于transformer 来设计这样一个网络。</p></li></ol><p>然后最近Transformer在各个领域都有很多的尝试。 </p><p>下面对使用Transformer做Image Captioning任务的论文做一个整理</p><h1 id="CPTR-FULL-TRANSFORMER-NETWORK-FOR-IMAGE-CAPTIONING"><a href="#CPTR-FULL-TRANSFORMER-NETWORK-FOR-IMAGE-CAPTIONING" class="headerlink" title="CPTR: FULL TRANSFORMER NETWORK FOR IMAGE CAPTIONING"></a><a href="https://arxiv.org/pdf/2101.10804.pdf">CPTR: FULL TRANSFORMER NETWORK FOR IMAGE CAPTIONING</a></h1><p>这篇论文就是存粹的将 transformer  用到了 image captioning中， 而且是直接 seq2seq 直接生成整个句子，而不是一个词一个词生成的。</p><h1 id="X-Linear-Attention-Networks-for-Image-Captioning"><a href="#X-Linear-Attention-Networks-for-Image-Captioning" class="headerlink" title="[X-Linear Attention Networks for Image Captioning"></a>[X-Linear Attention Networks for Image Captioning</h1><p>](<a href="https://openaccess.thecvf.com/content_CVPR_2020/papers/Pan_X-Linear_Attention_Networks_for_Image_Captioning_CVPR_2020_paper.pdf">https://openaccess.thecvf.com/content_CVPR_2020/papers/Pan_X-Linear_Attention_Networks_for_Image_Captioning_CVPR_2020_paper.pdf</a>)<br>这篇论文算是在transformer的基础上做了一个增强，也是使用了object的信息。</p><p>下面对使用Cene graph做Image Captioning任务的论文做一个整理</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里汇总下最近看的Image Captioning相关的论文的特点和不足。&lt;/p&gt;
&lt;h1 id=&quot;Knowing-When-to-Look-Adaptive-Attention-via-A-Visual-Sentinel-for-Image-Captioning&quot;&gt;&lt;a </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>终端软件</title>
    <link href="http://example.com/2021/06/29/%E7%BB%88%E7%AB%AF%E8%BD%AF%E4%BB%B6/"/>
    <id>http://example.com/2021/06/29/%E7%BB%88%E7%AB%AF%E8%BD%AF%E4%BB%B6/</id>
    <published>2021-06-29T02:34:09.000Z</published>
    <updated>2021-06-29T02:53:11.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这里汇总一些我常用的终端软件"><a href="#这里汇总一些我常用的终端软件" class="headerlink" title="这里汇总一些我常用的终端软件"></a>这里汇总一些我常用的终端软件</h1><h3 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h3><p>终端重用神器</p><h3 id="ranger"><a href="#ranger" class="headerlink" title="ranger"></a>ranger</h3><p>终端文件浏览器</p><h3 id="lazygit"><a href="#lazygit" class="headerlink" title="lazygit"></a>lazygit</h3><p>终端git工具</p><h3 id="neofetch"><a href="#neofetch" class="headerlink" title="neofetch"></a>neofetch</h3><p>查看系统信息</p><h3 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h3><p>快速跳转</p><h3 id="neovim"><a href="#neovim" class="headerlink" title="neovim"></a>neovim</h3><p>最强编辑器</p><h3 id="bat"><a href="#bat" class="headerlink" title="bat"></a>bat</h3><p>cat增强版，高亮现实文件</p><h3 id="fzf"><a href="#fzf" class="headerlink" title="fzf"></a>fzf</h3><p>快速搜索文件</p><h3 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h3><p>top命令增强版，查看系统占用</p><h3 id="imgcat"><a href="#imgcat" class="headerlink" title="imgcat"></a>imgcat</h3><p>在终端查看图片</p><h3 id="thefuck"><a href="#thefuck" class="headerlink" title="thefuck"></a>thefuck</h3><p>快速修正命令</p><h3 id="tree"><a href="#tree" class="headerlink" title="tree"></a>tree</h3><p>输出文件树</p><h3 id="youtube-dl"><a href="#youtube-dl" class="headerlink" title="youtube-dl"></a>youtube-dl</h3><p>下载视频</p><h3 id="zathura"><a href="#zathura" class="headerlink" title="zathura"></a>zathura</h3><p>pdf浏览器</p><h3 id="git-open"><a href="#git-open" class="headerlink" title="git open"></a>git open</h3><p>快速用浏览器打开当前仓库界面</p><h3 id="cht-sh"><a href="#cht-sh" class="headerlink" title="cht.sh"></a>cht.sh</h3><p>查看命令的使用方法</p><h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><p>局域网扫描</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这里汇总一些我常用的终端软件&quot;&gt;&lt;a href=&quot;#这里汇总一些我常用的终端软件&quot; class=&quot;headerlink&quot; title=&quot;这里汇总一些我常用的终端软件&quot;&gt;&lt;/a&gt;这里汇总一些我常用的终端软件&lt;/h1&gt;&lt;h3 id=&quot;tmux&quot;&gt;&lt;a href=&quot;#t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>中国剩余定理</title>
    <link href="http://example.com/2021/05/20/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    <id>http://example.com/2021/05/20/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/</id>
    <published>2021-05-20T04:14:24.000Z</published>
    <updated>2021-05-20T06:47:21.135Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h1><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>人自出生起就有体力，情感和智力三个生理周期，分别为23，28和33天。一个周期内有一天为峰值，在这一天，人在对应的方面（体力，情感或智力）表现最好。通常这三个周期的峰值不会是同一天。现在给出三个日期，分别对应于体力，情感，智力出现峰值的日期。然后再给出一个起始日期，要求从这一天开始，算出最少再过多少天后三个峰值同时出现。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>首先我们要知道，任意两个峰值之间一定相距整数倍的周期。假设一年的第$N$天达到峰值，则下次达到峰值的时间为是$N+Tk$($T$是周期，$k$是任意正整数)。所以，三个峰值同时出现的那一天($S$)应满足</p><script type="math/tex; mode=display">S = N_1 + T_1 * k_1 = N_2 + T_2 * k_2 = N_3 + T_3 * k_3</script><p>$N_1,N_2,N_3$分别为为体力，情感，智力出现峰值的日期，$T_1,T_2,T_3$分别为体力，情感，智力周期。 我们需要求出$k_1,k_2,k_3$三个非负整数使上面的等式成立。</p><p>　　想直接求出$k_1,k_2,k_3$貌似很难，但是我们的目的是求出$S$， 可以考虑从结果逆推。根据上面的等式，$S$满足三个要求：除以$T_1$余数为$N_1$，除以$T_2$余数为$N_2$，除以$T_3$余数为$N_3$。这样我们就把问题转化为求一个最小数，该数除以$T_1$余$N_1$，除以$T_2$余$N_2$，除以$T_3$余$N_3$。这就是著名的中国剩余定理，我们的老祖宗在几千年前已经对这个问题想出了一个精妙的解法。依据此解法的算法，时间复杂度可达到$O(1)$。</p><h2 id="中国剩余定理-1"><a href="#中国剩余定理-1" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h2><p>在《孙子算经》中有这样一个问题：“今有物不知其数，三三数之剩二（除以3余2），五五数之剩三（除以5余3），七七数之剩二（除以7余2），问物几何？”这个问题称为“孙子问题”，该问题的一般解法国际上称为“中国剩余定理”。具体解法分三步：</p><ol><li>找出三个数：从3和5的公倍数中找出被7除余1的最小数15，从3和7的公倍数中找出被5除余1 的最小数21，最后从5和7的公倍数中找出除3余1的最小数70。</li><li>用15乘以2（2为最终结果除以7的余数），用21乘以3（3为最终结果除以5的余数），同理，用70乘以2（2为最终结果除以3的余数），然后把三个乘积相加15∗2+21∗3+70∗2得到和233。</li><li>用233除以3，5，7三个数的最小公倍数105，得到余数23，即233%105=23。这个余数23就是符合条件的最小数。　</li></ol><p>就这么简单。我们在感叹神奇的同时不禁想知道古人是如何想到这个方法的，有什么基本的数学依据吗？</p><p>我们将“孙子问题”拆分成几个简单的小问题，从零开始，试图揣测古人是如何推导出这个解法的。</p><p>首先，我们假设$n_1$是满足除以3余2的一个数，比如2，5，8等等，也就是满足$3*k+2(k \ge 0)$ 的一个任意数。 同样，我们假设$n_2$是满足除以5余3的一个数，$n_3$是满足除以7余2的一个数。</p><p>有了前面的假设，我们先从$n_1$这个角度出发，已知$n_1$满足除以3余2，能不能使得$n_1+n_2$的和仍然满足除以3余2？进而使得$n_1+n_2+n_3$的和仍然满足除以3余2？</p><p>这就牵涉到一个最基本数学定理，如果有$a\%b=c$，则有$(a+k*b)\%b=c$($k$为非零整数)，换句话说，如果一个除法运算的余数为$c$，那么被除数与$k$倍的除数相加（或相减）的和（差）再与除数相除，余数不变。这个是很好证明的。</p><p>以此定理为依据，如果$n_2$是3的倍数，$n_1+n_2$就依然满足除以3余2。同理，如果$n_3$也是3的倍数，那么 $n_1+n_2+n_3$的和就满足除以3余2。这是从$n_1$的角度考虑的，再从$n_2$，$n_3$的角度出发，我们可推导出以下三点：</p><ol><li>为使$n_1+n_2+n_3$的和满足除以3余2，$n_2$和$n_3$必须是3的倍数。</li><li>为使$n_1+n_2+n_3$的和满足除以5余3，$n_1$和$n_3$必须是5的倍数。</li><li>为使$n_1+n_2+n_3$的和满足除以7余2，$n_1$和$n_2$必须是7的倍数。</li></ol><p>因此，为使$n_1+n_2+n_3$的和作为“孙子问题”的一个最终解，需满足：</p><ol><li>$n_1$除以3余2，且是5和7的公倍数。</li><li>$n_2$除以5余3，且是3和7的公倍数。</li><li>$n_3$除以7余2，且是3和5的公倍数。</li></ol><p>所以，孙子问题解法的本质是从5和7的公倍数中找一个除以3余2的数$n_1$，从3和7的公倍数中找一个除以5余3的数𝑛2，从3和5的公倍数中找一个除以7余2的数𝑛3，再将三个数相加得到解。在求$n_1,n_2,n_3$时又用了一个小技巧，以$n_1$为例，并非从5和7的公倍数中直接找一个除以3余2的数，而是先找一个除以3余1的数，再乘以2。也就是先求出5和7的公倍数模3下的逆元，再用逆元去乘余数。</p><p>这里又有一个数学公式，如果$a\%b=c$，那么$(a<em>k)\%b = a\%b + a\%b + … + a\%b = c + c + … + c = k </em> c(k&gt;0)$,也就是说，如果一个除法的余数为$c$，那么被除数的$k$倍与除数相除的余数为$k*c$。展开式中已证明。</p><p>最后，我们还要清楚一点，$n_1+n_2+n_3$只是问题的一个解，并不是最小的解。如何得到最小解？我们只需要从中最大限度的减掉掉3，5，7的公倍数105即可。道理就是前面讲过的定理“如果$a\%b=c$，则有$(a-k*b)\%b=c$”。所以$(n_1+n_2+n_3)\%105$就是最终的最小解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中国剩余定理&quot;&gt;&lt;a href=&quot;#中国剩余定理&quot; class=&quot;headerlink&quot; title=&quot;中国剩余定理&quot;&gt;&lt;/a&gt;中国剩余定理&lt;/h1&gt;&lt;h2 id=&quot;例题&quot;&gt;&lt;a href=&quot;#例题&quot; class=&quot;headerlink&quot; title=&quot;例题&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vjudge刷题记录</title>
    <link href="http://example.com/2021/05/17/Vjudge%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/05/17/Vjudge%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2021-05-17T08:50:24.000Z</published>
    <updated>2021-05-23T05:08:57.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vjudge刷题记录"><a href="#Vjudge刷题记录" class="headerlink" title="Vjudge刷题记录"></a>Vjudge刷题记录</h1><p>以后从新开始每天在vjudge上每天刷一题，最开始会做些简单的找找感觉。<br>这里记录做题的思路以及学习到的东西。</p><h2 id="热血格斗场"><a href="#热血格斗场" class="headerlink" title="热血格斗场"></a><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-T1230">热血格斗场</a></h2><p>蒜头君新开了一家热血格斗场。格斗场实行会员制，但是新来的会员不需要交入会费，而只要同一名老会员打一场表演赛，证明自己的实力。</p><p>我们假设格斗的实力可以用一个正整数表示，成为实力值。另外，每个人都有一个唯一的<br>id<br>，也是一个正整数。为了使得比赛更好看，每一个新队员都会选择与他实力最为接近的人比赛，即比赛双方的实力值之差的绝对值越小越好，如果有两个人的实力值与他差别相同，则他会选择比他弱的那个（显然，虐人必被虐好）。</p><p>不幸的是，蒜头君一不小心把比赛记录弄丢了，但是他还保留着会员的注册记录。现在请你帮蒜头君恢复比赛纪录，按照时间顺序依次输出每场比赛双方的<br>id<br>。</p><p>输入格式第一行一个数 n(0&lt;n≤100000)，表示格斗场新来的会员数（不包括蒜头君）。以后 n 行每一行两个数，<br>按照入会的时间给出会员的 id(2≤id≤106) 和实力值(≤109)。一开始，蒜头君就算是会员，id 为 1，<br>实力值 1000000000。输入保证两人的实力值不同。输出格式N 行，每行两个数，为每场比赛双方的 id，新手的 id 写在前面。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>map的使用</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;map&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">int n,a,b,ans;</span><br><span class="line">map&lt;int,int&gt;mp;</span><br><span class="line">map&lt;int,int&gt;::iterator itr;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">mp[1e9]=1;</span><br><span class="line">while(n--)&#123;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">itr = mp.upper_bound(b);</span><br><span class="line">if (itr==mp.end()) &#123;</span><br><span class="line">itr--;</span><br><span class="line">ans = itr-&gt;second;</span><br><span class="line">&#125;else if(itr==mp.begin())&#123;</span><br><span class="line">ans = itr-&gt;second;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">int diff = itr-&gt;first - b;</span><br><span class="line">ans = itr-&gt;second;</span><br><span class="line">itr--;</span><br><span class="line">if((b-itr-&gt;first)&lt;=diff)&#123;</span><br><span class="line">ans = itr-&gt;second;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mp[b]=a;</span><br><span class="line">cout&lt;&lt;a&lt;&lt;&#x27; &#x27;&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>std::map 的底层是红黑树，是按照key有序的</p><p>std::unordered_map 的底层是哈希表，是无序的</p><p>map.lower_bound(key) 返回第一个不小于key的迭代器索引。</p><p>map.upper_bound(key) 返回第一个大于key的迭代器索引。</p><h2 id="Neighbor-House"><a href="#Neighbor-House" class="headerlink" title="Neighbor House"></a><a href="https://vjudge.net/contest/439383#problem/D">Neighbor House</a></h2><p>The people of Mohammadpur have decided to paint each of their houses red, green, or blue. They have also decided that no two neighboring houses will be painted the same color. The neighbors of house i are houses i-1 and i+1. The first and last houses are not neighbors.</p><p>You will be given the information of houses. Each house will contain three integers “R G B” (quotes for clarity only), where R, G and B are the costs of painting the corresponding house red, green, and blue, respectively. Return the minimal total cost required to perform the work.</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">int n,t;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line">int dp[t][3];</span><br><span class="line">int data[t][3];</span><br><span class="line">for(int i=0; i&lt;t ;i++)&#123;</span><br><span class="line">cin&gt;&gt;data[i][0]&gt;&gt;data[i][1]&gt;&gt;data[i][2];</span><br><span class="line">&#125;</span><br><span class="line">dp[0][0]=data[0][0],dp[0][1]=data[0][1],dp[0][2]=data[0][2];</span><br><span class="line">for(int i=1;i&lt;t;i++)&#123;</span><br><span class="line">dp[i][0]=min(dp[i-1][1],dp[i-1][2])+data[i][0];</span><br><span class="line">dp[i][1]=min(dp[i-1][2],dp[i-1][0])+data[i][1];</span><br><span class="line">dp[i][2]=min(dp[i-1][1],dp[i-1][0])+data[i][2];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;&quot;Case &quot;&lt;&lt;j&lt;&lt;&quot;: &quot;&lt;&lt;min(dp[t-1][2],min(dp[t-1][0],dp[t-1][1]))&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Staircases"><a href="#Staircases" class="headerlink" title="Staircases"></a><a href="https://vjudge.net/problem/URAL-1017">Staircases</a></h2><p>One curious child has a set of N little bricks (5 ≤ N ≤ 500). From these bricks he builds different staircases. Staircase consists of steps of different sizes in a strictly descending order. It is not allowed for staircase to have steps equal sizes. Every staircase consists of at least two steps and each step contains at least one brick. </p><p>Your task is to write a program that reads the number N and writes the only number Q — amount of different staircases that can be built from exactly N bricks.</p><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>dp[i][j]表示当前使用第i块砖头时，最后一列的砖块数为j的组合数量。<br>dp[i][j] = sum(dp[i-j][k]) (0&lt;=k&lt;j)</p><p>这里为什么要用i-j而不是直接使用j呢？？<br>因为j是从1到i变化的，而i-j是从i-1到0变化的。 这样可以保证这一轮的dp是完全由上一轮产生的。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#define maxn 510</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">int dp[maxn][maxn],n;</span><br><span class="line">dp[0][0]=1;</span><br><span class="line">for(int i=1; i&lt;maxn; i++)&#123;</span><br><span class="line">for(int j=1; j&lt;=i; j++)&#123;</span><br><span class="line">for(int k=0; k&lt;j; k++)&#123;</span><br><span class="line">dp[i][j]+=dp[i-j][k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while( cin&gt;&gt;n )&#123;</span><br><span class="line">long long ans=0;</span><br><span class="line">for(int i=1; i&lt;n; i++)&#123;</span><br><span class="line">ans+=dp[n][i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="优化版代码"><a href="#优化版代码" class="headerlink" title="优化版代码"></a>优化版代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">int N;</span><br><span class="line">cin&gt;&gt;N;</span><br><span class="line">vector&lt;long long&gt; dp(N+1);</span><br><span class="line">dp[0]=1;</span><br><span class="line">for(int i=1;i&lt;=N;i++)&#123;</span><br><span class="line">for(int j=N;j&gt;=i;j--)&#123;</span><br><span class="line">dp[j]+=dp[j-i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[N]-1&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><p>这里我也没搞懂为什么可以这样写。</p><p>感觉像是通过和背包问题中相似的优化减少了一维。</p><h2 id="Basketball-Exercise"><a href="#Basketball-Exercise" class="headerlink" title="Basketball Exercise"></a><a href="https://vjudge.net/problem/CodeForces-1195C">Basketball Exercise</a></h2><p>Finally, a basketball court has been opened in SIS, so Demid has decided to hold a basketball exercise session. 2⋅n students have come to Demids exercise session, and he lined up them into two rows of the same size (there are exactly n people in each row). Students are numbered from 1 to n in each row in order from left to right.</p><p>Now Demid wants to choose a team to play basketball. He will choose players from left to right, and the index of each chosen player (excluding the first one taken) will be strictly greater than the index of the previously chosen player. To avoid giving preference to one of the rows, Demid chooses students in such a way that no consecutive chosen students belong to the same row. The first student can be chosen among all 2n students (there are no additional constraints), and a team can consist of any number of students.</p><p>Demid thinks, that in order to compose a perfect team, he should choose students in such a way, that the total height of all chosen students is maximum possible. Help Demid to find the maximum possible total height of players in a team he can choose.</p><p>2*n的数组从左往右选不能选择相邻的两个数，求最终能选择的最大和。</p><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp[i][0]表示这一列选择第一个的最大值。</p><p>dp[i][1]表示这一列选择第二个的最大值。</p><p>dp[i][2]表示这一列都不选的最大值。</p><p>有状态转移方程</p><p>dp[i][0]=max(dp[i-1][1],dp[i-1][2])+data[i][0];</p><p>dp[i][1]=max(dp[i-1][0],dp[i-1][2])+data[i][1];</p><p>dp[i][2]=max(dp[i-1][0],max(dp[i-1][1],dp[i-1][2]));</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#define maxn 100008</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">int n;</span><br><span class="line">int data[maxn][2];</span><br><span class="line">long long dp[maxn][3];</span><br><span class="line">while(cin&gt;&gt;n)&#123;</span><br><span class="line">for(int i=0; i&lt;n; i++)&#123;</span><br><span class="line">cin&gt;&gt;data[i][0];</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0; i&lt;n; i++)&#123;</span><br><span class="line">cin&gt;&gt;data[i][1];</span><br><span class="line">&#125;</span><br><span class="line">dp[0][0]=data[0][0];</span><br><span class="line">dp[0][1]=data[0][1];</span><br><span class="line">dp[0][2]=0;</span><br><span class="line"></span><br><span class="line">for(int i=1; i&lt;n; i++)&#123;</span><br><span class="line">dp[i][0]=max(dp[i-1][1],dp[i-1][2])+data[i][0];</span><br><span class="line">dp[i][1]=max(dp[i-1][0],dp[i-1][2])+data[i][1];</span><br><span class="line">dp[i][2]=max(dp[i-1][0],max(dp[i-1][1],dp[i-1][2]));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;max(dp[n-1][0],max(dp[n-1][1],dp[n-1][2]))&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Gargari-and-Permutations"><a href="#Gargari-and-Permutations" class="headerlink" title="Gargari and Permutations"></a><a href="https://vjudge.net/contest/439073#problem/A">Gargari and Permutations</a></h2><p>Gargari got bored to play with the bishops and now, after solving the problem about them, he is trying to do math homework. In a math book he have found k permutations. Each of them consists of numbers 1, 2, …, n in some order. Now he should find the length of the longest common subsequence of these permutations. Can you help Gargari?</p><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>dp[i]表示到data[0][i]为止所能达到的最长公共子序列。</p><p>那么训练j 0-&gt;i 如果data[0][j]在其余序列中的位置都在data[0][i]之前，那是不是说明dp[i]能在dp[j]上扩展一位。</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define maxn 1004</span><br><span class="line">#define maxk 5</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">int n,k;</span><br><span class="line">int data[maxk][maxn];</span><br><span class="line">int pos[maxk][maxn];</span><br><span class="line">int dp[maxn];</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">memset(dp, 0, sizeof(dp));</span><br><span class="line">for(int i=0; i&lt;k; i++)&#123;</span><br><span class="line">for(int j=0; j&lt;n; j++)&#123;</span><br><span class="line">cin&gt;&gt;data[i][j];</span><br><span class="line">pos[i][data[i][j]]=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dp[0]=1;</span><br><span class="line">for(int i=0; i&lt;n; i++)&#123;</span><br><span class="line">for(int j=0; j&lt;i; j++)&#123;</span><br><span class="line">bool Flag=false;</span><br><span class="line">for(int p=1; p&lt;k; p++)&#123;</span><br><span class="line">if (pos[p][data[0][j]]&gt;pos[p][data[0][i]]) &#123;</span><br><span class="line">Flag=true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (!Flag) &#123;</span><br><span class="line">dp[i]=max(dp[i],dp[j]+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(!dp[i]) dp[i]=1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int ans=dp[0];</span><br><span class="line">for(int i=1; i&lt;n; i++)&#123;</span><br><span class="line">ans=max(ans,dp[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Checkout-Assistant"><a href="#Checkout-Assistant" class="headerlink" title="Checkout Assistant"></a><a href="https://vjudge.net/contest/439073#problem/E">Checkout Assistant</a></h2><p>Bob came to a cash &amp; carry store, put n items into his trolley, and went to the checkout counter to pay. Each item is described by its price ci and time ti in seconds that a checkout assistant spends on this item. While the checkout assistant is occupied with some item, Bob can steal some other items from his trolley. To steal one item Bob needs exactly 1 second. What is the minimum amount of money that Bob will have to pay to the checkout assistant? Remember, please, that it is Bob, who determines the order of items for the checkout assistant.</p><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>这里不需要考虑我结了那些，逃了那些，只要保证我结账的物品能够逃掉所有物品就行了。</p><p>转化为01背包问题也就是，我每件物品的花费为pi,然后我能清算掉ti+1件物品</p><p>这里要注意的是这里我们需要的是最终的价值大于等于背包容量，而不是小于等于所以当剩余背包容量不足的时候，也就是j&lt;data[i][0]的时候也需要将话费加入进来。 也就是dp[j]=data[i][1]</p><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#define maxn 2005</span><br><span class="line">using namespace std;</span><br><span class="line">int main() &#123;</span><br><span class="line">  int n;</span><br><span class="line">  int data[maxn][2];</span><br><span class="line">  long long dp[maxn];</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">    cin &gt;&gt; data[i][0] &gt;&gt; data[i][1];</span><br><span class="line">    data[i][0]++;</span><br><span class="line">    dp[i] = 1e18;</span><br><span class="line">  &#125;</span><br><span class="line">  for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">    for (int j = n; j &gt;= 1; j--) &#123;</span><br><span class="line">      dp[j] = min(dp[j], dp[max(j - data[i][0],0)] + data[i][1]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; dp[n] &lt;&lt; endl;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vjudge刷题记录&quot;&gt;&lt;a href=&quot;#Vjudge刷题记录&quot; class=&quot;headerlink&quot; title=&quot;Vjudge刷题记录&quot;&gt;&lt;/a&gt;Vjudge刷题记录&lt;/h1&gt;&lt;p&gt;以后从新开始每天在vjudge上每天刷一题，最开始会做些简单的找找感觉。&lt;b</summary>
      
    
    
    
    <category term="acm" scheme="http://example.com/categories/acm/"/>
    
    
  </entry>
  
  <entry>
    <title>零知识证明</title>
    <link href="http://example.com/2021/05/14/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E/"/>
    <id>http://example.com/2021/05/14/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E/</id>
    <published>2021-05-14T10:16:34.000Z</published>
    <updated>2021-05-14T13:26:35.540Z</updated>
    
    <content type="html"><![CDATA[<h1 id="零知识证明-Zero-Knowledge-Proof"><a href="#零知识证明-Zero-Knowledge-Proof" class="headerlink" title="零知识证明(Zero Knowledge Proof)"></a>零知识证明(Zero Knowledge Proof)</h1><p>零知识证明是指证明者在不向验证者提供任何有用信息的情况下，使得验证证相信某个论断是正确的。</p><h2 id="零知识证明的三个性质"><a href="#零知识证明的三个性质" class="headerlink" title="零知识证明的三个性质"></a>零知识证明的三个性质</h2><p>一种零知识证明的方法需要具备如下三个性质：</p><ol><li><p>完备性(Completeness)：若证明方确实掌握了某论断的答案，则他肯定能找到方法向验证方证明他手中掌握数据的正确性，即真的假不了。</p></li><li><p>可靠性(Soundness)：若证明方根本不掌握某论断的答案，则他无法（或者 <strong>概率极低</strong>）说服验证方他手中数据的正确性，即假的真不了。</p></li><li><p>零知识性(Zero-knowlegeness)：验证方除了能判断出论断的真假外，无法获得其它任何有效信息。</p></li></ol><h2 id="零知识证明构造三段论"><a href="#零知识证明构造三段论" class="headerlink" title="零知识证明构造三段论"></a>零知识证明构造三段论</h2><ol><li>证明方先根据论断内容向验证方发个交底材料，这个样例论断需要是随机的或加密的；</li><li>这个样例论断需要是随机的或加密的验证方随机生成一个试探（学术名词是挑战，challenge），发给证明方；</li><li>证明方根据该试探和交底材料生成证明信息发给验证方。验证方自己将信息和交底材料一合计，判断证明方是否通过了该试探。</li></ol><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><strong>例1：数独问题</strong></p><ul><li>背景：一个骨灰级数独题，数字范围是1-9</li><li>论断：证明方有该数独题的答案</li><li>过程：</li></ul><ol><li>证明方将数独题答案的每个数字（连同题面上的数字）写在一张卡片上，然后将每张卡片放到数独中对应的位置，同时将答案卡片翻面（题面数字对应的卡片依然朝上）；</li><li>验证方首先验证题面数字和朝上的卡片的数字一致，然后随意指定一行（或列）；</li><li>证明方将该行（或列）的卡片收拢并打乱，然后全部展示给验证方。验证方验证是否数字正好为1-9。</li></ol><p>这里第一步的交底材料是非常必要的，它有两个作用：<br>一是可以防止证明方根据试探的内容临时造假；<br>二是可以帮助证明方掩盖敏感信息，保证证明过程的零知识性。<br>第二步的试探也必须是随机的，否则如果证明方能提前知道试探的内容，<br>那即便他不知道原论断背后的答案他也能提前准备好交底材料和返回的信息。<br>最后，这个过程必须重复多次，因为通过一次或少数试探可能是运气，但如果一直能通过，则说明是实力了。</p><p><strong>例2：离散对数问题（参考论文[1]）</strong></p><ul><li>背景：函数 $f(x)=g^{x}$ ，其中 $g$ 为公开大整数。</li><li>论断：给定一个数字 $y$ ，证明方证明他知道离散对数 $\log _{g}y$ ，即 $y=f(x)$ 。</li><li>过程：</li></ul><ol><li>证明方生成一个随机数 $u$ ，并计算 $v=f(u)$ ，然后将 $v$ 发给验证方；</li><li>验证方生成一个随机数 $e$ ，并发给证明方；</li><li>证明方计算 $t=e+u$ ，并将 $t$ 发送给验证方。验证方验证 $f(t)=v \cdot y^{e}$ .</li></ol><h2 id="zkSNARKs"><a href="#zkSNARKs" class="headerlink" title="zkSNARKs"></a>zkSNARKs</h2><p><a href="https://zhuanlan.zhihu.com/p/31780893">https://zhuanlan.zhihu.com/p/31780893</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;零知识证明-Zero-Knowledge-Proof&quot;&gt;&lt;a href=&quot;#零知识证明-Zero-Knowledge-Proof&quot; class=&quot;headerlink&quot; title=&quot;零知识证明(Zero Knowledge Proof)&quot;&gt;&lt;/a&gt;零知识证明(Z</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="http://example.com/2021/04/27/Git/"/>
    <id>http://example.com/2021/04/27/Git/</id>
    <published>2021-04-27T13:41:14.000Z</published>
    <updated>2021-04-28T02:25:17.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h1><h2 id="文档链接"><a href="#文档链接" class="headerlink" title="文档链接"></a>文档链接</h2><p><a href="http://git-scm.com/book/zh/v2/">http://git-scm.com/book/zh/v2/</a></p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ol><li><p>创建git仓库</p><pre><code> git init</code></pre></li><li><p>克隆仓库</p><pre><code> git clone https://github.com/example/example.git</code></pre></li><li><p>追踪文件</p><pre><code> git add a.cpp git add *.cpp git add *</code></pre></li><li><p>查看当前文件状态</p><pre><code> git status -------------------- On branch master Your branch is up-to-date with &#39;origin/master&#39;. Changes to be committed:   (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage) new file:   README</code></pre></li><li><p>以简洁的方式查看当前文件状态</p><pre><code> git status -s --------------------  M README MM Rakefile A  lib/git.rb M  lib/simplegit.rb ?? LICENSE.txt</code></pre></li><li><p>.gitignore</p><pre><code> # 忽略所有的 .a 文件 *.a # 但跟踪所有的 lib.a，即便你在前面忽略了 .a 文件 !lib.a # 只忽略当前目录下的 TODO 文件，而不忽略 subdir/TODO /TODO # 忽略任何目录下名为 build 的文件夹 build/ # 忽略 doc/notes.txt，但不忽略 doc/server/arch.txt doc/*.txt # 忽略 doc/ 目录及其所有子目录下的 .pdf 文件 doc/**/*.pdf</code></pre></li><li><p>查看未暂存的文件有那些修改</p><pre><code> git diff -------------------- diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md index 8ebb991..643e24f 100644 --- a/CONTRIBUTING.md +++ b/CONTRIBUTING.md @@ -65,7 +65,8 @@ branch directly, things can get messy.  Please include a nice description of your changes when you submit your PR;  if we have to read the whole diff to figure out why you&#39;re contributing  in the first place, you&#39;re less likely to get feedback and have your change -merged in. +merged in. Also, split your changes into comprehensive chunks if your patch is +longer than a dozen lines.  If you are starting to work on a particular area, feel free to submit a PR  that highlights your work in progress (and note in the PR title that it&#39;s</code></pre></li><li><p>查看已暂存文件和最后一次提交的差异</p><pre><code> git diff --staged -------------------- diff --git a/README b/README new file mode 100644 index 0000000..03902a1 --- /dev/null +++ b/README @@ -0,0 +1 @@ +My Project</code></pre></li><li><p>提交暂存区的内容到仓库</p><pre><code> git commit -m &quot;message&quot;</code></pre></li><li><p>将所有跟踪过的文件add后提交</p><pre><code>git commit -a -m &quot;message&quot;</code></pre></li><li><p>从git中移除并且删除文件</p><pre><code>git rm -f README.md</code></pre></li><li><p>从git中移除但并不删除文件</p><pre><code>git rm --cached README.md</code></pre></li><li><p>修改文件名并添加到git中</p><pre><code>git mv README.md README--------------------相当于\$ mv README.md README\$ git rm README.md\$ git add README</code></pre></li></ol><h2 id="仓库合并操作"><a href="#仓库合并操作" class="headerlink" title="仓库合并操作"></a>仓库合并操作</h2><ol><li><p>查看提交历史</p><pre><code> git log -------------------- commit ca82a6dff817ec66f44342007202690a93763949 Author: Scott Chacon &lt;schacon@gee-mail.com&gt; Date:   Mon Mar 17 21:52:11 2008 -0700     changed the version number commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 Author: Scott Chacon &lt;schacon@gee-mail.com&gt; Date:   Sat Mar 15 16:40:33 2008 -0700     removed unnecessary test commit a11bef06a3f659402fe7563abf99ad00de2209e6 Author: Scott Chacon &lt;schacon@gee-mail.com&gt; Date:   Sat Mar 15 10:31:28 2008 -0700     first commit</code></pre></li><li><p>查看最近两次提交所引入的差异</p><pre><code> git log -p -2</code></pre></li><li><p>查看提交的简略统计信息</p><pre><code> git log --stat</code></pre></li><li><p>以特有的形式显示提交信息</p><pre><code> git log --pretty=oneline/short/full/fuller</code></pre></li><li><p>以格式化方式显示提交信息</p><pre><code> git log --pretty=format:&quot;%h - %an, %ar : %s&quot; -------------------- %H        提交的完整哈希值 %h        提交的简写哈希值 %T        树的完整哈希值 %t        树的简写哈希值 %P        父提交的完整哈希值 %p        父提交的简写哈希值 %an        作者名字 %ae        作者的电子邮件地址 %ad        作者修订日期（可以用 --date=选项 来定制格式） %ar        作者修订日期，按多久以前的方式显示 %cn        提交者的名字 %ce        提交者的电子邮件地址 %cd        提交日期 %cr        提交日期（距今多长时间） %s        提交说明</code></pre></li><li><p>git log的常用选项</p><pre><code> -p            按补丁格式显示每个提交引入的差异。 --stat            显示每次提交的文件修改统计信息。 --shortstat        只显示 --stat 中最后的行数修改添加移除统计。 --name-only        仅在提交信息后显示已修改的文件清单。 --name-status        显示新增、修改、删除的文件清单。 --abbrev-commit    仅显示 SHA-1 校验和所有 40 个字符中的前几个字符。 --relative-date    使用较短的相对时间而不是完整格式显示日期（比如“2 weeks ago”）。 --graph        在日志旁以 ASCII 图形显示分支与合并历史。 --pretty        使用其他格式显示历史提交信息。可用的选项包括 oneline、short、full、fuller 和 format（用来定义自己的格式）。 --oneline        pretty=oneline --abbrev-commit 合用的简写。</code></pre></li><li><p>git log 过滤内容</p><pre><code> -\&lt;n&gt;            仅显示最近的 n 条提交。 --since, --after    仅显示指定时间之后的提交。 --until, --before    仅显示指定时间之前的提交。 --author        仅显示作者匹配指定字符串的提交。 --committer        仅显示提交者匹配指定字符串的提交。 --grep            仅显示提交说明中包含指定字符串的提交。 -S            仅显示添加或删除内容匹配指定字符串的提交。</code></pre></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git命令&quot;&gt;&lt;a href=&quot;#Git命令&quot; class=&quot;headerlink&quot; title=&quot;Git命令&quot;&gt;&lt;/a&gt;Git命令&lt;/h1&gt;&lt;h2 id=&quot;文档链接&quot;&gt;&lt;a href=&quot;#文档链接&quot; class=&quot;headerlink&quot; title=&quot;文档链接&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自用Vim配置及快捷键速查</title>
    <link href="http://example.com/2021/04/25/%E8%87%AA%E7%94%A8Vim%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E6%9F%A5/"/>
    <id>http://example.com/2021/04/25/%E8%87%AA%E7%94%A8Vim%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9F%E6%9F%A5/</id>
    <published>2021-04-25T13:54:08.000Z</published>
    <updated>2021-05-09T10:12:32.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自用Vim配置及快捷键速查"><a href="#自用Vim配置及快捷键速查" class="headerlink" title="自用Vim配置及快捷键速查"></a>自用Vim配置及快捷键速查</h1><h2 id="配置文件地址"><a href="#配置文件地址" class="headerlink" title="配置文件地址"></a>配置文件地址</h2><p><a href="https://github.com/Lyon52222/neovim">https://github.com/Lyon52222/neovim</a></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>这里我只列举初一些常用的，需要记住的，更多的操作查看上一篇博客：Vim操作大全</p><h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><pre><code>gg -&gt; 跳转到文档第一行G -&gt; 跳转到文档最后一行nG,ngg -&gt; 跳转到第n行% -&gt; 跳转到括号对应位置H -&gt; 光标移动到当前可视区域最上面M -&gt; 光标移动到当前可视区域中间L -&gt; 光标移动到当前可视区域最下面&lt;C-u&gt; -&gt; 向上翻半页&lt;C-d&gt; -&gt; 向下翻半页&lt;C-f&gt; -&gt; 向下翻页&lt;C-b&gt; -&gt; 向上翻页\$ -&gt; 移动到行首^ -&gt; 移动到行尾fa -&gt; 向后查找当前行a出现的位置，并跳转Fa -&gt; 向前查找当前行a出现的位置，并跳转m&#123;a-zA-Z&#125; -&gt; 给当前位置打一个标签，a-z对当前文档有效，A-Z可以跨文档使用&#39;&#123;a-zA-Z&#125; -&gt; 跳转回标记位置&#39;[ -&gt; 跳转到上次编辑的第一个字符&#39;[ -&gt; 跳转到上次编辑的最后一个字符</code></pre><h4 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h4><pre><code>CTRL-M/CTRL-J -&gt; 开始新行CTRL-E -&gt; 插入光标下的内容CTRL-Y -&gt; 插入光标上方的字符CTRL-A -&gt; 插入上次插入的文本CTRL-@ -&gt; 插入上次插入的文本并结束插入模式CTRL-R &#123;0-9a-z%#:.-=&quot;&#125; -&gt; 插入寄存器的内容CTRL-W -&gt; 删除光标前的一个单词CTRL-U -&gt; 删除当前行的所有字符CTRL-T -&gt; 在当前行首插入一个移位宽度的缩进CTRL-D -&gt; 从当前行首删除一个移位宽度的缩进0 CTRL-D -&gt; 删除当前行的所有缩进^ CTRL-D -&gt; 删除当前行的所有缩进，恢复下一行的缩进</code></pre><h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><pre><code>i -&gt; 在当前光标之前插入I -&gt; 在当前行首插入a -&gt; 在当前位置之后插入A -&gt; 在当前行末插入</code></pre><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><pre><code>r -&gt; 替换当前位置字符R -&gt; 从当前位置开始一次替换后面的字符，按ESC退出cc -&gt; 修改光标所在行cw -&gt; 删除从当前位置到该单词的末尾，并进入插入模式caw -&gt; 删除当前光标所在单词，并进入插入模式c\$ -&gt; 从当前位置删除到行尾，并进入插入模式c^ -&gt; 从当前位置删除到行首，并进入插入模式ci&quot; -&gt; 删除两端&quot;中间的内容，并进入插入模式ca&quot; -&gt; 删除两端&quot;以及中间的内容，并进入插入模式</code></pre><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><pre><code>x -&gt; 删除当前位置字符X -&gt; 删除当前位置前一个字符dd,dw,daw,s\$,d^,di&quot;,da&quot; -&gt; 同上</code></pre><h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><pre><code>yy,yw,yaw,y\$,y^,yi(,ya( -&gt; 同上</code></pre><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><pre><code>u -&gt; 撤销上一次操作U -&gt; 撤销当前行的所有操作</code></pre><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><pre><code>fw -&gt; 保存文件fq -&gt; 退出文件fwq -&gt; 保存并退出文件fqq -&gt; 放弃保存直接退出文件</code></pre><h4 id="编辑模式光标移动"><a href="#编辑模式光标移动" class="headerlink" title="编辑模式光标移动"></a>编辑模式光标移动</h4><pre><code>&lt;M-l&gt; -&gt; 光标右移&lt;M-k&gt; -&gt; 光标上移&lt;M-j&gt; -&gt; 光标下移&lt;M-h&gt; -&gt; 光标左移</code></pre><h4 id="快速选择窗口"><a href="#快速选择窗口" class="headerlink" title="快速选择窗口"></a>快速选择窗口</h4><pre><code>&lt;S-l&gt; -&gt; 选择右边窗口&lt;S-k&gt; -&gt; 选择上边窗口&lt;S-j&gt; -&gt; 选择下边窗口&lt;S-h&gt; -&gt; 选择左边窗口</code></pre><h4 id="划分窗口"><a href="#划分窗口" class="headerlink" title="划分窗口"></a>划分窗口</h4><pre><code>&lt;leader&gt;sp -&gt; 纵向划分窗口    &lt;leader&gt;vs -&gt; 横向划分窗口    </code></pre><h4 id="调整窗口大小"><a href="#调整窗口大小" class="headerlink" title="调整窗口大小"></a>调整窗口大小</h4><pre><code>&lt;M-l&gt;&lt;M-k&gt;&lt;M-j&gt;&lt;M-h&gt;</code></pre><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><pre><code>; -&gt; 重复上一次的查找操作. -&gt; 重复上一次的修改操作</code></pre><h3 id="插件快捷键"><a href="#插件快捷键" class="headerlink" title="插件快捷键"></a>插件快捷键</h3><h4 id="vim-startify"><a href="#vim-startify" class="headerlink" title="vim-startify"></a>vim-startify</h4><pre><code>&lt;leader&gt;st -&gt; 回到初始界面</code></pre><h4 id="NERDTree"><a href="#NERDTree" class="headerlink" title="NERDTree"></a>NERDTree</h4><pre><code>&lt;S-n&gt; -&gt; 打开/关闭文件树</code></pre><h4 id="MarkdownPreview"><a href="#MarkdownPreview" class="headerlink" title="MarkdownPreview"></a>MarkdownPreview</h4><pre><code>&lt;C-p&gt; -&gt; 打开/关闭Markdown预览[[ -&gt; 跳转上一个标题]] -&gt; 跳转下一个标题]c -&gt; 跳转到当前标题]u -&gt; 跳转到副标题zr -&gt; 打开下一级折叠zR -&gt; 打开所有折叠zm -&gt; 折叠当前段落zM -&gt; 折叠所有段落</code></pre><h4 id="vim-airline"><a href="#vim-airline" class="headerlink" title="vim-airline"></a>vim-airline</h4><pre><code>&lt;leader&gt;&#123;i&#125; -&gt; 切换到第i个标签&lt;leader&gt;- -&gt; 切换到前一个标签&lt;leader&gt;+ -&gt; 切换到上一个标签</code></pre><h4 id="leetcode"><a href="#leetcode" class="headerlink" title="leetcode"></a>leetcode</h4><pre><code>&lt;leader&gt;li -&gt; 登陆leetcode    &lt;leader&gt;ll -&gt; 列出问题列表&lt;leader&gt;lt -&gt; 测试代码    &lt;leader&gt;ls -&gt; 提交代码</code></pre><h4 id="easymotion"><a href="#easymotion" class="headerlink" title="easymotion"></a>easymotion</h4><pre><code>&lt;leader&gt;&lt;leader&gt;w -&gt; 触发单词级移动，文本会被高亮，输入对应字母进行跳转&lt;leader&gt;&lt;leader&gt;b -&gt; 从光标开始往上在单词之间移动光标&lt;leader&gt;&lt;leader&gt;s -&gt; 从光标开始同时向两侧在单词之间移动光标&lt;leader&gt;&lt;leader&gt;fo -&gt; 字母o对应的地方会被高亮，输入对应字母进行跳转</code></pre><h4 id="vim-surround"><a href="#vim-surround" class="headerlink" title="vim-surround"></a>vim-surround</h4><pre><code>ysiw&quot; -&gt; 单词周围加双引号 ysiw( -&gt; 左括号带空格ysiw) -&gt; 右括号不带空格ysiWb -&gt; 以空格为边界加大括号，B代表不带空格的打括号yss&lt;div&gt; -&gt; 整行前后加&lt;div&gt;S,&quot; -&gt; v模式选中区域前后加&quot;S,&lt;div&gt; -&gt; V模式前后区域加&lt;div&gt;,这里&lt;div&gt;会独占一行cs&quot;&#39; -&gt; 修改选中内容两端的&quot;为&#39;ds&quot; -&gt; 删除选中内容两端的&quot;</code></pre><h4 id="nerdcommenter"><a href="#nerdcommenter" class="headerlink" title="nerdcommenter"></a>nerdcommenter</h4><pre><code>&lt;leader&gt;cc -&gt; 注释当前行&lt;leader&gt;cn -&gt; 同cc，不过强制nesting&lt;leader&gt;c&lt;leader&gt; -&gt; 切换当前行的注释状态&lt;leader&gt;cm -&gt; 多行注释&lt;leader&gt;ci -&gt; 切换选中行的注释状态</code></pre><h4 id="vim-visual-multi"><a href="#vim-visual-multi" class="headerlink" title="vim-visual-multi"></a>vim-visual-multi</h4><pre><code>&lt;C-n&gt; -&gt; 选择单词n/N -&gt; 选择下一个/上一个目标词q -&gt; 跳过当前词Q -&gt; 取消选择当前词</code></pre><h4 id="ultisnips"><a href="#ultisnips" class="headerlink" title="ultisnips"></a>ultisnips</h4><pre><code>&lt;tab&gt; -&gt; 自动扩展</code></pre><h4 id="autopep8"><a href="#autopep8" class="headerlink" title="autopep8"></a>autopep8</h4><pre><code>&lt;F8&gt; -&gt; 自动格式化Python代码</code></pre><h4 id="coc-nvim"><a href="#coc-nvim" class="headerlink" title="coc.nvim"></a>coc.nvim</h4><pre><code>&lt;M-tab&gt; -&gt; 向下选择补全&lt;S-tab&gt; -&gt; 向上选择补全[g -&gt; coc-diagnostic-prev]g -&gt; coc-diagnostic-nextgd -&gt; coc-definitiongy -&gt; coc-type-definitiongi -&gt; coc-inplementationgr -&gt; coc-references&lt;leader&gt;rn -&gt; coc-rename&lt;leader&gt;f -&gt; formatting selected codeK -&gt; show the documentation</code></pre><h4 id="vimtex"><a href="#vimtex" class="headerlink" title="vimtex"></a>vimtex</h4><pre><code>\ll -&gt; 开始编译，后面每次保存都会自动编译同步\lv -&gt; 打开pdf预览\lk or \ll -&gt; 关闭编译\le -&gt; 显示错误和警告\lc -&gt; 清除多余文件</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自用Vim配置及快捷键速查&quot;&gt;&lt;a href=&quot;#自用Vim配置及快捷键速查&quot; class=&quot;headerlink&quot; title=&quot;自用Vim配置及快捷键速查&quot;&gt;&lt;/a&gt;自用Vim配置及快捷键速查&lt;/h1&gt;&lt;h2 id=&quot;配置文件地址&quot;&gt;&lt;a href=&quot;#配置文</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vim操作大全</title>
    <link href="http://example.com/2021/04/20/Vim%E6%93%8D%E4%BD%9C%E5%A4%A7%E5%85%A8/"/>
    <id>http://example.com/2021/04/20/Vim%E6%93%8D%E4%BD%9C%E5%A4%A7%E5%85%A8/</id>
    <published>2021-04-20T13:26:29.000Z</published>
    <updated>2021-05-18T02:10:57.312Z</updated>
    
    <content type="html"><![CDATA[<h6 id><a href="#" class="headerlink" title="#"></a>#</h6><h1 id="VIM-CHEATSHEET-中文速查表-by-skywind-created-on-2017-10-12"><a href="#VIM-CHEATSHEET-中文速查表-by-skywind-created-on-2017-10-12" class="headerlink" title="VIM CHEATSHEET (中文速查表)  -  by skywind (created on 2017/10/12)"></a>VIM CHEATSHEET (中文速查表)  -  by skywind (created on 2017/10/12)</h1><h1 id="Version-47-Last-Modified-2020-10-10-11-02"><a href="#Version-47-Last-Modified-2020-10-10-11-02" class="headerlink" title="Version: 47, Last Modified: 2020/10/10 11:02"></a>Version: 47, Last Modified: 2020/10/10 11:02</h1><h1 id="https-github-com-skywind3000-awesome-cheatsheets"><a href="#https-github-com-skywind3000-awesome-cheatsheets" class="headerlink" title="https://github.com/skywind3000/awesome-cheatsheets"></a><a href="https://github.com/skywind3000/awesome-cheatsheets">https://github.com/skywind3000/awesome-cheatsheets</a></h1><h6 id="-1"><a href="#-1" class="headerlink" title="#"></a>#</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br></pre></td><td class="code"><pre><span class="line">##############################################################################</span><br><span class="line"># VIM CHEATSHEET (中文速查表)  -  by skywind (created on 2017/10/12)</span><br><span class="line"># Version: 47, Last Modified: 2020/10/10 11:02</span><br><span class="line"># https://github.com/skywind3000/awesome-cheatsheets</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 光标移动</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">h                   光标左移，同 &lt;Left&gt; 键</span><br><span class="line">j                   光标下移，同 &lt;Down&gt; 键</span><br><span class="line">k                   光标上移，同 &lt;Up&gt; 键</span><br><span class="line">l                   光标右移，同 &lt;Right&gt; 键</span><br><span class="line">CTRL-F              下一页</span><br><span class="line">CTRL-B              上一页</span><br><span class="line">CTRL-U              上移半屏</span><br><span class="line">CTRL-D              下移半屏</span><br><span class="line">0                   跳到行首（是数字零，不是字母O），效用等同于 &lt;Home&gt; 键</span><br><span class="line">^                   跳到从行首开始第一个非空白字符</span><br><span class="line">$                   跳到行尾，效用等同于 &lt;End&gt; 键</span><br><span class="line">gg                  跳到第一行，效用等同于 CTRL+&lt;Home&gt;</span><br><span class="line">G                   跳到最后一行，效用等同于 CTRL+&lt;End&gt;</span><br><span class="line">nG                  跳到第n行，比如 10G 是移动到第十行</span><br><span class="line">:n                  跳到第n行，比如 :10&lt;回车&gt; 是移动到第十行</span><br><span class="line">10%                 移动到文件 10% 处</span><br><span class="line">15|                 移动到当前行的 15列</span><br><span class="line">w                   跳到下一个单词开头 (word: 标点或空格分隔的单词)</span><br><span class="line">W                   跳到下一个单词开头 (WORD: 空格分隔的单词)</span><br><span class="line">e                   跳到下一个单词尾部 (word: 标点或空格分隔的单词)</span><br><span class="line">E                   跳到下一个单词尾部 (WORD: 空格分隔的单词)</span><br><span class="line">b                   上一个单词头 (word: 标点或空格分隔的单词)</span><br><span class="line">B                   上一个单词头 (WORD: 空格分隔的单词)</span><br><span class="line">ge                  上一个单词尾</span><br><span class="line">)                   向前移动一个句子（句号分隔）</span><br><span class="line">(                   向后移动一个句子（句号分隔）</span><br><span class="line">&#125;                   向前移动一个段落（空行分隔）</span><br><span class="line">&#123;                   向后移动一个段落（空行分隔）</span><br><span class="line">&lt;enter&gt;             移动到下一行首个非空字符</span><br><span class="line">+                   移动到下一行首个非空字符（同回车键）</span><br><span class="line">-                   移动到上一行首个非空字符</span><br><span class="line">H                   移动到屏幕上部</span><br><span class="line">M                   移动到屏幕中部</span><br><span class="line">L                   移动到屏幕下部</span><br><span class="line">fx                  跳转到下一个为 x 的字符，2f/ 可以找到第二个斜杆</span><br><span class="line">Fx                  跳转到上一个为 x 的字符</span><br><span class="line">tx                  跳转到下一个为 x 的字符前</span><br><span class="line">Tx                  跳转到上一个为 x 的字符前</span><br><span class="line">;                   跳到下一个 f/t 搜索的结果</span><br><span class="line">,                   跳到上一个 f/t 搜索的结果</span><br><span class="line">&lt;S-Left&gt;            按住 SHIFT 按左键，向左移动一个单词</span><br><span class="line">&lt;S-Right&gt;           按住 SHIFT 按右键，向右移动一个单词</span><br><span class="line">&lt;S-Up&gt;              按住 SHIFT 按上键，向上翻页</span><br><span class="line">&lt;S-Down&gt;            按住 SHIFT 按下键，向下翻页</span><br><span class="line">gm                  移动到行中</span><br><span class="line">gj                  光标下移一行（忽略自动换行）</span><br><span class="line">gk                  光标上移一行（忽略自动换行）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 插入模式：进入退出</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">i                   在光标处进入插入模式</span><br><span class="line">I                   在行首进入插入模式</span><br><span class="line">a                   在光标后进入插入模式</span><br><span class="line">A                   在行尾进入插入模式</span><br><span class="line">o                   在下一行插入新行并进入插入模式</span><br><span class="line">O                   在上一行插入新行并进入插入模式</span><br><span class="line">gi                  进入到上一次插入模式的位置</span><br><span class="line">&lt;ESC&gt;               退出插入模式</span><br><span class="line">CTRL-[              退出插入模式（同 ESC 等价，但更顺手）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># INSERT MODE - 由 i, I, a, A, o, O 等命令进入插入模式后</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">&lt;Up&gt;                光标向上移动</span><br><span class="line">&lt;Down&gt;              光标向下移动</span><br><span class="line">&lt;Left&gt;              光标向左移动</span><br><span class="line">&lt;Right&gt;             光标向右移动</span><br><span class="line">&lt;S-Left&gt;            按住 SHIFT 按左键，向左移动一个单词</span><br><span class="line">&lt;S-Right&gt;           按住 SHIFT 按右键，向右移动一个单词</span><br><span class="line">&lt;S-Up&gt;              按住 SHIFT 按上键，向上翻页</span><br><span class="line">&lt;S-Down&gt;            按住 SHIFT 按下键，向下翻页</span><br><span class="line">&lt;PageUp&gt;            上翻页</span><br><span class="line">&lt;PageDown&gt;          下翻页</span><br><span class="line">&lt;Delete&gt;            删除光标处字符</span><br><span class="line">&lt;BS&gt;                Backspace 向后删除字符</span><br><span class="line">&lt;Home&gt;              光标跳转行首</span><br><span class="line">&lt;End&gt;               光标跳转行尾</span><br><span class="line">CTRL-W              向后删除单词</span><br><span class="line">CTRL-O              临时退出插入模式，执行单条命令又返回插入模式</span><br><span class="line">CTRL-\ CTRL-O       临时退出插入模式（光标保持），执行单条命令又返回插入模式</span><br><span class="line">CTRL-R 0            插入寄存器（内部 0号剪贴板）内容，CTRL-R 后可跟寄存器名</span><br><span class="line">CTRL-R &quot;            插入匿名寄存器内容，相当于插入模式下 p粘贴</span><br><span class="line">CTRL-R =            插入表达式计算结果，等号后面跟表达式</span><br><span class="line">CTRL-R :            插入上一次命令行命令</span><br><span class="line">CTRL-R /            插入上一次搜索的关键字</span><br><span class="line">CTRL-F              自动缩进</span><br><span class="line">CTRL-U              删除当前行所有字符</span><br><span class="line">CTRL-V &#123;char&#125;       插入非数字的字面量</span><br><span class="line">CTRL-V &#123;number&#125;     插入三个数字代表的 ascii/unicode 字符</span><br><span class="line">CTRL-V 065          插入 10进制 ascii 字符（两数字） 065 即 A字符</span><br><span class="line">CTRL-V x41          插入 16进制 ascii 字符（三数字） x41 即 A字符</span><br><span class="line">CTRL-V o101         插入  8进制 ascii 字符（三数字） o101 即 A字符</span><br><span class="line">CTRL-V u1234        插入 16进制 unicode 字符（四数字）</span><br><span class="line">CTRL-V U12345678    插入 16进制 unicode 字符（八数字）</span><br><span class="line">CTRL-K &#123;ch1&#125; &#123;ch2&#125;  插入 digraph（见 :h digraph），快速输入日文或符号等</span><br><span class="line">CTRL-D              文字向前缩进</span><br><span class="line">CTRL-T              文字向后缩进</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 文本编辑</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">r                   替换当前字符</span><br><span class="line">R                   进入替换模式，直至 ESC 离开</span><br><span class="line">s                   替换字符（删除光标处字符，并进入插入模式，前可接数量）</span><br><span class="line">S                   替换行（删除当前行，并进入插入模式，前可接数量）</span><br><span class="line">cc                  改写当前行（删除当前行并进入插入模式），同 S</span><br><span class="line">cw                  改写光标开始处的当前单词</span><br><span class="line">ciw                 改写光标所处的单词</span><br><span class="line">caw                 改写光标所处的单词，并且包括前后空格（如果有的话）</span><br><span class="line">c0                  改写到行首</span><br><span class="line">c^                  改写到行首（第一个非零字符）</span><br><span class="line">c$                  改写到行末</span><br><span class="line">C                   改写到行尾（同c$）</span><br><span class="line">ci&quot;                 改写双引号中的内容</span><br><span class="line">ci&#x27;                 改写单引号中的内容</span><br><span class="line">cib                 改写小括号中的内容</span><br><span class="line">cab                 改写小括号中的内容（包含小括号本身）</span><br><span class="line">ci)                 改写小括号中的内容</span><br><span class="line">ci]                 改写中括号中内容</span><br><span class="line">ciB                 改写大括号中内容</span><br><span class="line">caB                 改写大括号中的内容（包含大括号本身）</span><br><span class="line">ci&#125;                 改写大括号中内容</span><br><span class="line">cit                 改写 xml tag 中的内容</span><br><span class="line">cis                 改写当前句子</span><br><span class="line">c2w                 改写下两个单词</span><br><span class="line">ct(                 改写到小括号前</span><br><span class="line">c/apple             改写到光标后的第一个apple前</span><br><span class="line">x                   删除当前字符，前面可以接数字，3x代表删除三个字符</span><br><span class="line">X                   向前删除字符</span><br><span class="line">dd                  删除当前行</span><br><span class="line">d0                  删除到行首</span><br><span class="line">d^                  删除到行首（第一个非零字符）</span><br><span class="line">d$                  删除到行末</span><br><span class="line">D                   删除到行末（同 d$）</span><br><span class="line">dw                  删除当前单词</span><br><span class="line">diw                 删除光标所处的单词</span><br><span class="line">daw                 删除光标所处的单词，并包含前后空格（如果有的话）</span><br><span class="line">di&quot;                 删除双引号中的内容</span><br><span class="line">di&#x27;                 删除单引号中的内容</span><br><span class="line">dib                 删除小括号中的内容</span><br><span class="line">di)                 删除小括号中的内容</span><br><span class="line">dab                 删除小括号内的内容（包含小括号本身）</span><br><span class="line">di]                 删除中括号中内容</span><br><span class="line">diB                 删除大括号中内容</span><br><span class="line">di&#125;                 删除大括号中内容</span><br><span class="line">daB                 删除大括号内的内容（包含大括号本身）</span><br><span class="line">dit                 删除 xml tag 中的内容</span><br><span class="line">dis                 删除当前句子</span><br><span class="line">dip                 删除当前段落(前后有空白行的称为一个段落)</span><br><span class="line">dap                 删除当前段落(包括前后空白行)</span><br><span class="line">d2w                 删除下两个单词</span><br><span class="line">dt(                 删除到小括号前</span><br><span class="line">d/apple             删除到光标后的第一个apple前</span><br><span class="line">dgg                 删除到文件头部</span><br><span class="line">dG                  删除到文件尾部</span><br><span class="line">d&#125;                  删除下一段</span><br><span class="line">d&#123;                  删除上一段</span><br><span class="line">u                   撤销</span><br><span class="line">U                   撤销整行操作</span><br><span class="line">CTRL-R              撤销上一次 u 命令</span><br><span class="line">J                   链接多行为一行</span><br><span class="line">.                   重复上一次操作</span><br><span class="line">~                   替换大小写</span><br><span class="line">g~iw                替换当前单词的大小写</span><br><span class="line">gUiw                将单词转成大写</span><br><span class="line">guiw                将当前单词转成小写</span><br><span class="line">guu                 全行转为小写</span><br><span class="line">gUU                 全行转为大写</span><br><span class="line">&lt;&lt;                  减少缩进</span><br><span class="line">&gt;&gt;                  增加缩进</span><br><span class="line">==                  自动缩进</span><br><span class="line">CTRL-A              增加数字</span><br><span class="line">CTRL-X              减少数字</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 复制粘贴</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">p                   粘贴到光标后</span><br><span class="line">P                   粘贴到光标前</span><br><span class="line">v                   开始标记</span><br><span class="line">y                   复制标记内容</span><br><span class="line">V                   开始按行标记</span><br><span class="line">CTRL-V              开始列标记</span><br><span class="line">y$                  复制当前位置到本行结束的内容</span><br><span class="line">yy                  复制当前行</span><br><span class="line">Y                   复制当前行，同 yy</span><br><span class="line">yiw                 复制当前单词</span><br><span class="line">3yy                 复制光标下三行内容</span><br><span class="line">v0                  选中当前位置到行首</span><br><span class="line">v$                  选中当前位置到行末</span><br><span class="line">viw                 选中当前单词</span><br><span class="line">vib                 选中小括号内的东西</span><br><span class="line">vi)                 选中小括号内的东西</span><br><span class="line">vi]                 选中中括号内的东西</span><br><span class="line">viB                 选中大括号内的东西</span><br><span class="line">vi&#125;                 选中大括号内的东西</span><br><span class="line">vis                 选中句子中的东西</span><br><span class="line">vip                 选中当前段落(前后有空白行的称为一个段落)</span><br><span class="line">vap                 选中当前段落(包括前后空白行)</span><br><span class="line">vab                 选中小括号内的东西（包含小括号本身）</span><br><span class="line">va)                 选中小括号内的东西（包含小括号本身）</span><br><span class="line">va]                 选中中括号内的东西（包含中括号本身）</span><br><span class="line">vaB                 选中大括号内的东西（包含大括号本身）</span><br><span class="line">va&#125;                 选中大括号内的东西（包含大括号本身）</span><br><span class="line">gv                  重新选择上一次选中的文字</span><br><span class="line">:set paste          允许粘贴模式（避免粘贴时自动缩进影响格式）</span><br><span class="line">:set nopaste        禁止粘贴模式</span><br><span class="line">&quot;?yy                复制当前行到寄存器 ? ，问号代表 0-9 的寄存器名称</span><br><span class="line">&quot;?d3j               删除光标下三行内容，并放到寄存器 ? ，问号代表 0-9 的寄存器名称</span><br><span class="line">&quot;?p                 将寄存器 ? 的内容粘贴到光标后</span><br><span class="line">&quot;?P                 将寄存器 ? 的内容粘贴到光标前</span><br><span class="line">:registers          显示所有寄存器内容</span><br><span class="line">:[range]y           复制范围，比如 :20,30y 是复制20到30行，:10y 是复制第十行</span><br><span class="line">:[range]d           删除范围，比如 :20,30d 是删除20到30行，:10d 是删除第十行</span><br><span class="line">ddp                 交换两行内容：先删除当前行复制到寄存器，并粘贴</span><br><span class="line">&quot;_[command]         使用[command]删除内容，并且不进行复制（不会污染寄存器）</span><br><span class="line">&quot;*[command]         使用[command]复制内容到系统剪贴板（需要vim版本有clipboard支持）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 文本对象 - c,d,v,y 等命令后接文本对象，一般为：&lt;范围 i/a&gt;&lt;类型&gt;</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">$                   到行末</span><br><span class="line">0                   到行首</span><br><span class="line">^                   到行首非空字符</span><br><span class="line">tx                  光标位置到字符 x 之前</span><br><span class="line">fx                  光标位置到字符 x 之处</span><br><span class="line">iw                  整个单词（不包括分隔符）</span><br><span class="line">aw                  整个单词（包括分隔符）</span><br><span class="line">iW                  整个 WORD（不包括分隔符）</span><br><span class="line">aW                  整个 WORD（包括分隔符）</span><br><span class="line">is                  整个句子（不包括分隔符）</span><br><span class="line">as                  整个句子（包括分隔符）</span><br><span class="line">ip                  整个段落（不包括前后空白行）</span><br><span class="line">ap                  整个段落（包括前后空白行）</span><br><span class="line">ib                  小括号内</span><br><span class="line">ab                  小括号内（包含小括号本身）</span><br><span class="line">iB                  大括号内</span><br><span class="line">aB                  大括号内（包含大括号本身）</span><br><span class="line">i)                  小括号内</span><br><span class="line">a)                  小括号内（包含小括号本身）</span><br><span class="line">i]                  中括号内</span><br><span class="line">a]                  中括号内（包含中括号本身）</span><br><span class="line">i&#125;                  大括号内</span><br><span class="line">a&#125;                  大括号内（包含大括号本身）</span><br><span class="line">i&#x27;                  单引号内</span><br><span class="line">a&#x27;                  单引号内（包含单引号本身）</span><br><span class="line">i&quot;                  双引号内</span><br><span class="line">a&quot;                  双引号内（包含双引号本身）</span><br><span class="line">2i)                 往外两层小括号内</span><br><span class="line">2a)                 往外两层小括号内（包含小括号本身）</span><br><span class="line">2f)                 到第二个小括号处</span><br><span class="line">2t)                 到第二个小括号前</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 查找替换</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">/pattern            从光标处向文件尾搜索 pattern</span><br><span class="line">?pattern            从光标处向文件头搜索 pattern</span><br><span class="line">n                   向同一方向执行上一次搜索</span><br><span class="line">N                   向相反方向执行上一次搜索</span><br><span class="line">*                   向前搜索光标下的单词</span><br><span class="line">#                   向后搜索光标下的单词</span><br><span class="line">:s/p1/p2/g          将当前行中全替换p1为p2</span><br><span class="line">:%s/p1/p2/g         将当前文件中全替换p1为p2</span><br><span class="line">:%s/p1/p2/gc        将当前文件中全替换p1为p2，并且每处询问你是否替换</span><br><span class="line">:10,20s/p1/p2/g     将第10到20行中所有p1替换为p2</span><br><span class="line">:., ns/p1/p2/g      将当前行到n行中所有p1替换为p2</span><br><span class="line">:., +10s/p1/p2/g    将当前行到相对当前行加10行的区间中所有p1替换为p2</span><br><span class="line">:., $s/p1/p2/g      将当前行到最后一行中所有p1替换为p2</span><br><span class="line">:%s/1\\2\/3/123/g   将“1\2/3” 替换为 “123”（特殊字符使用反斜杠标注）</span><br><span class="line">:%s/\r//g           删除 DOS 换行符 ^M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># VISUAL MODE - 由 v, V, CTRL-V 进入的可视模式</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">&gt;                   增加缩进</span><br><span class="line">&lt;                   减少缩进</span><br><span class="line">d                   删除高亮选中的文字</span><br><span class="line">x                   删除高亮选中的文字</span><br><span class="line">c                   改写文字，即删除高亮选中的文字并进入插入模式</span><br><span class="line">s                   改写文字，即删除高亮选中的文字并进入插入模式</span><br><span class="line">y                   拷贝文字</span><br><span class="line">~                   转换大小写</span><br><span class="line">o                   跳转到标记区的另外一端</span><br><span class="line">O                   跳转到标记块的另外一端</span><br><span class="line">u                   标记区转换为小写</span><br><span class="line">U                   标记区转换为大写</span><br><span class="line">g CTRL-G            显示所选择区域的统计信息</span><br><span class="line">&lt;Esc&gt;               退出可视模式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 位置跳转</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">CTRL-O              跳转到上一个位置</span><br><span class="line">CTRL-I              跳转到下一个位置</span><br><span class="line">CTRL-^              跳转到 alternate file (当前窗口的上一个文件）</span><br><span class="line">%                   跳转到 &#123;&#125; () [] 的匹配</span><br><span class="line">gd                  跳转到局部定义（光标下的单词的定义）</span><br><span class="line">gD                  跳转到全局定义（光标下的单词的定义）</span><br><span class="line">gf                  打开名称为光标下文件名的文件</span><br><span class="line">[[                  跳转到上一个顶层函数（比如C语言以大括号分隔）</span><br><span class="line">]]                  跳转到下一个顶层函数（比如C语言以大括号分隔）</span><br><span class="line">[m                  跳转到上一个成员函数</span><br><span class="line">]m                  跳转到下一个成员函数</span><br><span class="line">[&#123;                  跳转到上一处未匹配的 &#123;</span><br><span class="line">]&#125;                  跳转到下一处未匹配的 &#125;</span><br><span class="line">[(                  跳转到上一处未匹配的 (</span><br><span class="line">])                  跳转到下一处未匹配的 )</span><br><span class="line">[c                  上一个不同处（diff时）</span><br><span class="line">]c                  下一个不同处（diff时）</span><br><span class="line">[/                  跳转到 C注释开头</span><br><span class="line">]/                  跳转到 C注释结尾</span><br><span class="line">``                  回到上次跳转的位置</span><br><span class="line">&#x27;&#x27;                  回到上次跳转的位置</span><br><span class="line">`.                  回到上次编辑的位置</span><br><span class="line">&#x27;.                  回到上次编辑的位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 文件操作</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:w                  保存文件</span><br><span class="line">:w &lt;filename&gt;       按名称保存文件</span><br><span class="line">:e &lt;filename&gt;       打开文件并编辑</span><br><span class="line">:saveas &lt;filename&gt;  另存为文件</span><br><span class="line">:r &lt;filename&gt;       读取文件并将内容插入到光标后</span><br><span class="line">:r !dir             将 dir 命令的输出捕获并插入到光标后</span><br><span class="line">:close              关闭文件</span><br><span class="line">:q                  退出</span><br><span class="line">:q!                 强制退出</span><br><span class="line">:wa                 保存所有文件</span><br><span class="line">:cd &lt;path&gt;          切换 Vim 当前路径</span><br><span class="line">:pwd                显示 Vim 当前路径</span><br><span class="line">:new                打开一个新的窗口编辑新文件</span><br><span class="line">:enew               在当前窗口创建新文件</span><br><span class="line">:vnew               在左右切分的新窗口中编辑新文件</span><br><span class="line">:tabnew             在新的标签页中编辑新文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 已打开文件操作</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:ls                 查案缓存列表</span><br><span class="line">:bn                 切换到下一个缓存</span><br><span class="line">:bp                 切换到上一个缓存</span><br><span class="line">:bd                 删除缓存</span><br><span class="line">:b 1                切换到1号缓存</span><br><span class="line">:b abc              切换到文件名为 abc 开头的缓存</span><br><span class="line">:badd &lt;filename&gt;    将文件添加到缓存列表</span><br><span class="line">:set hidden         设置隐藏模式（未保存的缓存可以被切换走，或者关闭）</span><br><span class="line">:set nohidden       关闭隐藏模式（未保存的缓存不能被切换走，或者关闭）</span><br><span class="line">n CTRL-^            切换缓存，先输入数字的缓存编号，再按 CTRL + 6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 窗口操作</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:sp &lt;filename&gt;      上下切分窗口并在新窗口打开文件 filename</span><br><span class="line">:vs &lt;filename&gt;      左右切分窗口并在新窗口打开文件 filename</span><br><span class="line">CTRL-W s            上下切分窗口</span><br><span class="line">CTRL-W v            左右切分窗口</span><br><span class="line">CTRL-W w            循环切换到下一个窗口</span><br><span class="line">CTRL-W W            循环切换到上一个窗口</span><br><span class="line">CTRL-W p            跳到上一个访问过的窗口</span><br><span class="line">CTRL-W c            关闭当前窗口</span><br><span class="line">CTRL-W o            关闭其他窗口</span><br><span class="line">CTRL-W h            跳到左边的窗口</span><br><span class="line">CTRL-W j            跳到下边的窗口</span><br><span class="line">CTRL-W k            跳到上边的窗口</span><br><span class="line">CTRL-W l            跳到右边的窗口</span><br><span class="line">CTRL-W +            增加当前窗口的行高，前面可以加数字</span><br><span class="line">CTRL-W -            减少当前窗口的行高，前面可以加数字</span><br><span class="line">CTRL-W &lt;            减少当前窗口的列宽，前面可以加数字</span><br><span class="line">CTRL-W &gt;            增加当前窗口的列宽，前面可以加数字</span><br><span class="line">CTRL-W =            让所有窗口宽高相同</span><br><span class="line">CTRL-W H            将当前窗口移动到最左边</span><br><span class="line">CTRL-W J            将当前窗口移动到最下边</span><br><span class="line">CTRL-W K            将当前窗口移动到最上边</span><br><span class="line">CTRL-W L            将当前窗口移动到最右边</span><br><span class="line">CTRL-W x            交换窗口</span><br><span class="line">CTRL-W f            在新窗口中打开名为光标下文件名的文件</span><br><span class="line">CTRL-W gf           在新标签页中打开名为光标下文件名的文件</span><br><span class="line">CTRL-W R            旋转窗口</span><br><span class="line">CTRL-W T            将当前窗口移到新的标签页中</span><br><span class="line">CTRL-W P            跳转到预览窗口</span><br><span class="line">CTRL-W z            关闭预览窗口</span><br><span class="line">CTRL-W _            纵向最大化当前窗口</span><br><span class="line">CTRL-W |            横向最大化当前窗口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 标签页</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:tabs               显示所有标签页</span><br><span class="line">:tabe &lt;filename&gt;    在新标签页中打开文件 filename</span><br><span class="line">:tabn               下一个标签页</span><br><span class="line">:tabp               上一个标签页</span><br><span class="line">:tabc               关闭当前标签页</span><br><span class="line">:tabo               关闭其他标签页</span><br><span class="line">:tabn n             切换到第n个标签页，比如 :tabn 3 切换到第三个标签页</span><br><span class="line">:tabm n             标签移动</span><br><span class="line">:tabfirst           切换到第一个标签页</span><br><span class="line">:tablast            切换到最后一个标签页</span><br><span class="line">:tab help           在标签页打开帮助</span><br><span class="line">:tab drop &lt;file&gt;    如果文件已被其他标签页和窗口打开则跳过去，否则新标签打开</span><br><span class="line">:tab split          在新的标签页中打开当前窗口里的文件</span><br><span class="line">:tab ball           将缓存中所有文件用标签页打开</span><br><span class="line">:set showtabline=?  设置为 0 就不显示标签页标签，1会按需显示，2会永久显示</span><br><span class="line">ngt                 切换到第n个标签页，比如 2gt 将会切换到第二个标签页</span><br><span class="line">gt                  下一个标签页</span><br><span class="line">gT                  上一个标签页</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 书签</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:marks              显示所有书签</span><br><span class="line">ma                  保存当前位置到书签 a ，书签名小写字母为文件内，大写全局</span><br><span class="line">&#x27;a                  跳转到书签 a所在的行</span><br><span class="line">`a                  跳转到书签 a所在位置</span><br><span class="line">`.                  跳转到上一次编辑的行</span><br><span class="line">&#x27;A                  跳转到全文书签 A</span><br><span class="line">[&#x27;                  跳转到上一个书签</span><br><span class="line">]&#x27;                  跳转到下一个书签</span><br><span class="line">&#x27;&lt;                  跳到上次可视模式选择区域的开始</span><br><span class="line">&#x27;&gt;                  跳到上次可视模式选择区域的结束</span><br><span class="line">:delm a             删除缓冲区标签a</span><br><span class="line">:delm A             删除文件标签A</span><br><span class="line">:delm!              删除所有缓冲区标签(小写字母), 不能删除文件标签和数字标签</span><br><span class="line">:delm A-Z           删除所有文件标签(大写字母)</span><br><span class="line">:delm 0-9           删除所有数字标签(.viminfo)</span><br><span class="line">:delm A-Z0-9        删除所有文件标签和数字标签</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">##############################################################################</span><br><span class="line"># 常用设置</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:set nocompatible   设置不兼容原始 vi 模式（必须设置在最开头）</span><br><span class="line">:set bs=?           设置BS键模式，现代编辑器为 :set bs=eol,start,indent</span><br><span class="line">:set sw=4           设置缩进宽度为 4</span><br><span class="line">:set ts=4           设置制表符宽度为 4</span><br><span class="line">:set noet           设置不展开 tab 成空格</span><br><span class="line">:set et             设置展开 tab 成空格</span><br><span class="line">:set winaltkeys=no  设置 GVim 下正常捕获 ALT 键</span><br><span class="line">:set nowrap         关闭自动换行</span><br><span class="line">:set ttimeout       允许终端按键检测超时（终端下功能键为一串ESC开头的扫描码）</span><br><span class="line">:set ttm=100        设置终端按键检测超时为100毫秒</span><br><span class="line">:set term=?         设置终端类型，比如常见的 xterm</span><br><span class="line">:set ignorecase     设置搜索忽略大小写(可缩写为 :set ic)</span><br><span class="line">:set noignorecase   设置搜索不忽略大小写(可缩写为 :set noic)</span><br><span class="line">:set smartcase      智能大小写，默认忽略大小写，除非搜索内容里包含大写字母</span><br><span class="line">:set list           设置显示制表符和换行符</span><br><span class="line">:set number         设置显示行号，禁止显示行号可以用 :set nonumber</span><br><span class="line">:set relativenumber 设置显示相对行号（其他行与当前行的距离）</span><br><span class="line">:set paste          进入粘贴模式（粘贴时禁用缩进等影响格式的东西）</span><br><span class="line">:set nopaste        结束粘贴模式</span><br><span class="line">:set spell          允许拼写检查</span><br><span class="line">:set hlsearch       设置高亮查找</span><br><span class="line">:set ruler          总是显示光标位置</span><br><span class="line">:set incsearch      查找输入时动态增量显示查找结果</span><br><span class="line">:set insertmode     Vim 始终处于插入模式下，使用 ctrl-o 临时执行命令</span><br><span class="line">:set all            列出所有选项设置情况</span><br><span class="line">:syntax on          允许语法高亮</span><br><span class="line">:syntax off         禁止语法高亮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 帮助信息</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:h tutor            入门文档</span><br><span class="line">:h quickref         快速帮助</span><br><span class="line">:h index            查询 Vim 所有键盘命令定义</span><br><span class="line">:h summary          帮助你更好的使用内置帮助系统</span><br><span class="line">:h CTRL-H           查询普通模式下 CTRL-H 是干什么的</span><br><span class="line">:h i_CTRL-H         查询插入模式下 CTRL-H 是干什么的</span><br><span class="line">:h i_&lt;Up&gt;           查询插入模式下方向键上是干什么的</span><br><span class="line">:h pattern.txt      正则表达式帮助</span><br><span class="line">:h eval             脚本编写帮助</span><br><span class="line">:h function-list    查看 VimScript 的函数列表 </span><br><span class="line">:h windows.txt      窗口使用帮助</span><br><span class="line">:h tabpage.txt      标签页使用帮助</span><br><span class="line">:h +timers          显示对 +timers 特性的帮助</span><br><span class="line">:h :!               查看如何运行外部命令</span><br><span class="line">:h tips             查看 Vim 内置的常用技巧文档</span><br><span class="line">:h set-termcap      查看如何设置按键扫描码</span><br><span class="line">:viusage            NORMAL 模式帮助</span><br><span class="line">:exusage            EX 命令帮助</span><br><span class="line">:version            显示当前 Vim 的版本号和特性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 外部命令</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:!ls                运行外部命令 ls，并等待返回</span><br><span class="line">:r !ls              将外部命令 ls 的输出捕获，并插入到光标后</span><br><span class="line">:w !sudo tee %      sudo以后保存当前文件</span><br><span class="line">:call system(&#x27;ls&#x27;)  调用 ls 命令，但是不显示返回内容</span><br><span class="line">:!start notepad     Windows 下启动 notepad，最前面可以加 silent</span><br><span class="line">:sil !start cmd     Windows 下当前目录打开 cmd</span><br><span class="line">:%!prog             运行文字过滤程序，如整理 json格式 :%!python -m json.tool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Quickfix 窗口</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:copen              打开 quickfix 窗口（查看编译，grep等信息）</span><br><span class="line">:copen 10           打开 quickfix 窗口，并且设置高度为 10</span><br><span class="line">:cclose             关闭 quickfix 窗口</span><br><span class="line">:cfirst             跳到 quickfix 中第一个错误信息</span><br><span class="line">:clast              跳到 quickfix 中最后一条错误信息</span><br><span class="line">:cc [nr]            查看错误 [nr]</span><br><span class="line">:cnext              跳到 quickfix 中下一个错误信息</span><br><span class="line">:cprev              跳到 quickfix 中上一个错误信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 拼写检查</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:set spell          打开拼写检查</span><br><span class="line">:set nospell        关闭拼写检查</span><br><span class="line">]s                  下一处错误拼写的单词</span><br><span class="line">[s                  上一处错误拼写的单词</span><br><span class="line">zg                  加入单词到拼写词表中</span><br><span class="line">zug                 撤销上一次加入的单词</span><br><span class="line">z=                  拼写建议</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 代码折叠</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">za                  切换折叠</span><br><span class="line">zA                  递归切换折叠</span><br><span class="line">zc                  折叠光标下代码</span><br><span class="line">zC                  折叠光标下所有代码</span><br><span class="line">zd                  删除光标下折叠</span><br><span class="line">zD                  递归删除所有折叠</span><br><span class="line">zE                  删除所有折叠</span><br><span class="line">zf                  创建代码折叠</span><br><span class="line">zF                  指定行数创建折叠</span><br><span class="line">zi                  切换折叠</span><br><span class="line">zm                  所有代码折叠一层</span><br><span class="line">zr                  所有代码打开一层</span><br><span class="line">zM                  折叠所有代码，设置 foldlevel=0，设置 foldenable</span><br><span class="line">zR                  打开所有代码，设置 foldlevel 为最大值</span><br><span class="line">zn                  折叠 none，重置 foldenable 并打开所有代码</span><br><span class="line">zN                  折叠 normal，重置 foldenable 并恢复所有折叠</span><br><span class="line">zo                  打开一层代码</span><br><span class="line">zO                  打开光标下所有代码折叠</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 宏录制</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">qa                  开始录制名字为 a 的宏</span><br><span class="line">q                   结束录制宏</span><br><span class="line">@a                  播放名字为 a 的宏</span><br><span class="line">@@                  播放上一个宏</span><br><span class="line">@:                  重复上一个ex命令（即冒号命令）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 其他命令</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">CTRL-X CTRL-F       插入模式下文件路径补全</span><br><span class="line">CTRL-X CTRL-O       插入下 Omnifunc 补全</span><br><span class="line">CTRL-X CTRL-N       插入模式下关键字补全</span><br><span class="line">CTRL-X CTRL-E       插入模式下向上滚屏</span><br><span class="line">CTRL-X CTRL-Y       插入模式下向下滚屏</span><br><span class="line">CTRL-E              向上滚屏</span><br><span class="line">CTRL-Y              向下滚屏</span><br><span class="line">CTRL-G              显示正在编辑的文件名，以及大小和位置信息</span><br><span class="line">g CTRL-G            显示文件的：大小，字符数，单词数和行数，可视模式下也可用</span><br><span class="line">zz                  调整光标所在行到屏幕中央</span><br><span class="line">zt                  调整光标所在行到屏幕上部</span><br><span class="line">zb                  调整光标所在行到屏幕下部</span><br><span class="line">ga                  显示光标下字符的 ascii 码或者 unicode 编码</span><br><span class="line">g8                  显示光标下字符的 utf-8 编码字节序</span><br><span class="line">gi                  回到上次进入插入的地方，并切换到插入模式</span><br><span class="line">K                   查询光标下单词的帮助</span><br><span class="line">ZZ                  保存文件（如果有改动的话），并关闭窗口</span><br><span class="line">ZQ                  不保存文件关闭窗口</span><br><span class="line">CTRL-PgUp           上个标签页，GVim OK，部分终端软件需设置对应键盘码</span><br><span class="line">CTRL-PgDown         下个标签页，GVim OK，部分终端软件需设置对应键盘码</span><br><span class="line">CTRL-R CTRL-W       命令模式下插入光标下单词</span><br><span class="line">CTRL-INSERT         复制到系统剪贴板（GVIM）</span><br><span class="line">SHIFT-INSERT        粘贴系统剪贴板的内容（GVIM）</span><br><span class="line">:set ff=unix        设置换行为 unix</span><br><span class="line">:set ff=dos         设置换行为 dos</span><br><span class="line">:set ff?            查看换行设置</span><br><span class="line">:set nohl           清除搜索高亮</span><br><span class="line">:set termcap        查看会从终端接收什么以及会发送给终端什么命令</span><br><span class="line">:set guicursor=     解决 SecureCRT/PenguiNet 中 NeoVim 局部奇怪字符问题</span><br><span class="line">:set t_RS= t_SH=    解决 SecureCRT/PenguiNet 中 Vim8.0 终端功能奇怪字符</span><br><span class="line">:set fo+=a          开启文本段的实时自动格式化</span><br><span class="line">:earlier 15m        回退到15分钟前的文件内容</span><br><span class="line">:.!date             在当前窗口插入时间</span><br><span class="line">:%!xxd              开始二进制编辑</span><br><span class="line">:%!xxd -r           保存二进制编辑</span><br><span class="line">:r !curl -sL &#123;URL&#125;  读取 url 内容添加到光标后</span><br><span class="line">:g/^\s*$/d          删除空行</span><br><span class="line">:g/green/d          删除所有包含 green 的行</span><br><span class="line">:v/green/d          删除所有不包含 green 的行</span><br><span class="line">:g/gladiolli/#      搜索单词打印结果，并在结果前加上行号</span><br><span class="line">:g/ab.*cd.*efg/#    搜索包含 ab,cd 和 efg 的行，打印结果以及行号</span><br><span class="line">:v/./,/./-j         压缩空行</span><br><span class="line">:Man bash           在 Vim 中查看 man，先调用 :runtime! ftplugin/man.vim 激活</span><br><span class="line">/fred\|joe          搜索 fred 或者 joe</span><br><span class="line">/\&lt;\d\d\d\d\&gt;       精确搜索四个数字</span><br><span class="line">/^\n\&#123;3&#125;            搜索连续三个空行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Plugin - https://github.com/tpope/vim-commentary</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">gcc                 注释当前行</span><br><span class="line">gc&#123;motion&#125;          注释 &#123;motion&#125; 所标注的区域，比如 gcap 注释整段</span><br><span class="line">gci&#123;                注释大括号内的内容</span><br><span class="line">gc                  在 Visual Mode 下面按 gc 注释选中区域</span><br><span class="line">:7,17Commentary     注释 7 到 17 行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Plugin - https://github.com/junegunn/vim-easy-align</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:EasyAlign =        以第一个匹配的=为中心对齐</span><br><span class="line">:EasyAlign *=       匹配并且对齐所有=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Plugin - https://github.com/tpope/vim-unimpaired</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">[space              向上插入空行</span><br><span class="line">]space              向下插入空行</span><br><span class="line">[e                  替换当前行和上一行</span><br><span class="line">]e                  替换当前行和下一行</span><br><span class="line">[x                  XML 编码</span><br><span class="line">]x                  XML 解码</span><br><span class="line">[u                  URL 编码</span><br><span class="line">]u                  URL 解码</span><br><span class="line">[y                  C 字符串编码</span><br><span class="line">]y                  C 字符串解码</span><br><span class="line">[q                  上一个 quickfix 错误</span><br><span class="line">]q                  下一个 quickfix 错误</span><br><span class="line">[Q                  第一个 quickfix 错误</span><br><span class="line">]Q                  最后一个 quickfix 错误</span><br><span class="line">[f                  切换同目录里上一个文件</span><br><span class="line">]f                  切换同目录里下一个文件</span><br><span class="line">[os                 设置 :set spell</span><br><span class="line">]os                 设置 :set nospell</span><br><span class="line">=os                 设置 :set invspell</span><br><span class="line">[on                 显示行号</span><br><span class="line">]on                 关闭行号</span><br><span class="line">[ol                 显示回车和制表符 :set list</span><br><span class="line">]ol                 不显示回车和制表符 :set nolist</span><br><span class="line">[b                  缓存切换到上一个文件，即 :bp</span><br><span class="line">]b                  缓存切换到下一个文件，即 :bn</span><br><span class="line">[B                  缓存切换到第一个文件，即 :bfirst</span><br><span class="line">]B                  缓存切换到最后一个文件，即 :blast</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Plugin - https://github.com/skywind3000/asyncrun.vim</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">:AsyncRun ls        异步运行命令 ls 结果输出到 quickfix 使用 :copen 查看</span><br><span class="line">:AsyncRun -raw ls   异步运行命令 ls 结果不匹配 errorformat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Plugin - https://github.com/gaving/vim-textobj-argument</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">cia                 改写函数参数</span><br><span class="line">caa                 改写函数参数（包括逗号分隔）</span><br><span class="line">dia                 删除函数参数</span><br><span class="line">daa                 删除函数参数（包括逗号分隔）</span><br><span class="line">via                 选取函数参数</span><br><span class="line">vaa                 选取函数参数（包括逗号分隔）</span><br><span class="line">yia                 复制函数参数</span><br><span class="line">yaa                 复制函数参数（包括逗号分隔）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># 网络资源</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">最新版本            https://github.com/vim/vim   </span><br><span class="line">Windows 最新版      https://github.com/vim/vim-win32-installer/releases</span><br><span class="line">插件浏览            http://vimawesome.com</span><br><span class="line">reddit              https://www.reddit.com/r/vim/</span><br><span class="line">正确设置 ALT/BS 键  http://www.skywind.me/blog/archives/2021</span><br><span class="line">视频教程            http://vimcasts.org/</span><br><span class="line">中文帮助            http://vimcdoc.sourceforge.net/doc/help.html</span><br><span class="line">中文版入门到精通    https://github.com/wsdjeg/vim-galore-zh_cn</span><br><span class="line">五分钟脚本入门      http://www.skywind.me/blog/archives/2193</span><br><span class="line">脚本精通            http://learnvimscriptthehardway.stevelosh.com/</span><br><span class="line">中文脚本帮助        vimcdoc.sourceforge.net/doc/eval.html</span><br><span class="line">十六年使用经验      http://zzapper.co.uk/vimtips.html</span><br><span class="line">配色方案            http://vimcolors.com/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># TIPS</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">- 永远不要用 CTRL-C 代替 &lt;ESC&gt; 完全不同的含义，容易错误中断运行的后台脚本</span><br><span class="line">- 很多人使用 CTRL-[ 代替 &lt;ESC&gt;，左手小指 CTRL，右手小指 [ 熟练后很方便</span><br><span class="line">- 某些终端中使用 Vim 8 内嵌终端如看到奇怪字符，使用 :set t_RS= t_SH= 解决</span><br><span class="line">- 某些终端中使用 Vim 8.2+ 会看到一些奇怪字符，使用 :set t_TI= t_TE= 解决</span><br><span class="line">- 某些终端中使用 NeoVim 如看到奇怪字符，使用 :set guicursor= 解决</span><br><span class="line">- 使用 MS-Terminal 如果进入 Vim/NVim 会默认替换模式设置 :set t_u7= 解决</span><br><span class="line">- 多使用 ciw, ci[, ci&quot;, ci( 以及 diw, di[, di&quot;, di( 命令来快速改写/删除文本</span><br><span class="line">- 在行内左右移动光标时，多使用w b e或W B E，而不是h l或方向键，这样会快很多</span><br><span class="line">- SHIFT 相当于移动加速键， w b e 移动光标很慢，但是 W B E 走的很快</span><br><span class="line">- 自己要善于总结新技巧，比如移动到行首非空字符时用 0w 命令比 ^ 命令更容易输入</span><br><span class="line">- 在空白行使用 dip 命令可以删除所有临近的空白行，viw 可以选择连续空白</span><br><span class="line">- 缩进时使用 &gt;8j  &gt;&#125;  &lt;ap  &gt;ap  =i&#125;  == 会方便很多</span><br><span class="line">- 插入模式下，当你发现一个单词写错了，应该多用 CTRL-W 这比 &lt;BackSpace&gt; 快</span><br><span class="line">- y d c 命令可以很好结合 f t 和 /X 比如 dt) 和 y/end&lt;cr&gt;</span><br><span class="line">- c d x 命令会自动填充寄存器 &quot;1 到 &quot;9 , y 命令会自动填充 &quot;0 寄存器</span><br><span class="line">- 用 v 命令选择文本时，可以用 o 掉头选择，有时很有用</span><br><span class="line">- 写文章时，可以写一段代码块，然后选中后执行 :!python 代码块就会被替换成结果</span><br><span class="line">- 搜索后经常使用 :nohl 来消除高亮，使用很频繁，可以 map 到 &lt;BackSpace&gt; 上</span><br><span class="line">- 搜索时可以用 CTRL-R CTRL-W 插入光标下的单词，命令模式也能这么用</span><br><span class="line">- 映射按键时，应该默认使用 noremap ，只有特别需要的时候使用 map</span><br><span class="line">- 当你觉得做某事很低效时，你应该停下来，u u u u 然后思考正确的高效方式来完成</span><br><span class="line">- 用 y复制文本后，命令模式中 CTRL-R 然后按双引号 0 可以插入之前复制内容</span><br><span class="line">- 某些情况下 Vim 绘制高亮慢，滚屏刷新慢可以试试 set re=1 使用老的正则引擎</span><br><span class="line">- Windows 下的 GVim 可以设置 set rop=type:directx,renmode:5 增强显示</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># References</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">https://github.com/groenewege/vimrc/blob/master/vim_cheat_sheet.txt</span><br><span class="line">http://blog.g-design.net/post/4789778607/vim-cheat-sheet</span><br><span class="line">http://www.keyxl.com/aaa8263/290/VIM-keyboard-shortcuts.htm</span><br><span class="line">http://jmcpherson.org/editing.html</span><br><span class="line">http://www.fprintf.net/vimCheatSheet.html</span><br><span class="line">http://www.ouyaoxiazai.com/article/24/654.html</span><br><span class="line">http://bbs.it-home.org/thread-80794-1-1.html</span><br><span class="line">http://www.lpfrx.com/wp-content/uploads/2008/09/vi.jpg</span><br><span class="line">http://michael.peopleofhonoronly.com/vim/</span><br><span class="line">https://github.com/hobbestigrou/vimtips-fortune/blob/master/fortunes/vimtips</span><br><span class="line">https://github.com/glts/vim-cottidie/blob/master/autoload/cottidie/tips</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># vim: set ts=4 sw=4 tw=0 noet noautoindent fdm=manual :</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;#&quot;&gt;&lt;/a&gt;#&lt;/h6&gt;&lt;h1 id=&quot;VIM-CHEATSHEET-中文速查表-by-skywind-created-on-2017-10-12&quot;&gt;&lt;a href=&quot;#VIM-CHEAT</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>统计学习方法</title>
    <link href="http://example.com/2021/04/19/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2021/04/19/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</id>
    <published>2021-04-19T14:17:39.000Z</published>
    <updated>2021-04-23T07:28:38.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="朴素贝叶斯"><a href="#朴素贝叶斯" class="headerlink" title="朴素贝叶斯"></a>朴素贝叶斯</h2><script type="math/tex; mode=display">\begin{aligned}P (Y \mid X) &= \frac{P (X \mid Y)P (Y)}{P (X)}\\&= \frac{P (X \mid Y)P (Y)}{\sum_{i=1}^{ \N}  P (X \mid Y_{i})P (Y_{i})} \\&= \frac{ \prod_{j=1}^{ \mathbb{D}}P (x_{j} \mid Y)  P (Y)}{\sum_{i=1}^{ \N}  P (X \mid Y_{i})P (Y_{i})} \\\end{aligned}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;朴素贝叶斯&quot;&gt;&lt;a href=&quot;#朴素贝叶斯&quot; class=&quot;headerlink&quot; title=&quot;朴素贝叶斯&quot;&gt;&lt;/a&gt;朴素贝叶斯&lt;/h2&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\begin{aligned}
P (Y \</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vim基本操作</title>
    <link href="http://example.com/2021/04/17/vim/"/>
    <id>http://example.com/2021/04/17/vim/</id>
    <published>2021-04-17T12:35:26.000Z</published>
    <updated>2021-04-25T07:30:29.835Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vim基本操作学习指南"><a href="#Vim基本操作学习指南" class="headerlink" title="Vim基本操作学习指南"></a>Vim基本操作学习指南</h1><p>===============================================</p><p>===============================================</p><p>===============================================</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br></pre></td><td class="code"><pre><span class="line">===============================================================================</span><br><span class="line">=      欢     迎     阅     读   《 V I M  教  程 》   ——      版本 1.7       =</span><br><span class="line">===============================================================================</span><br><span class="line"></span><br><span class="line">     Vim 是一个具有很多命令的功能非常强大的编辑器。限于篇幅，在本教程当中</span><br><span class="line">     就不详细介绍了。本教程的设计目标是讲述一些必要的基本命令，而掌握好这</span><br><span class="line">     些命令，您就能够很容易地将 Vim 当作一个通用编辑器来使用了。</span><br><span class="line"></span><br><span class="line">     完成本教程的内容大约需要25-30分钟，取决于您训练的时间。</span><br><span class="line"></span><br><span class="line">     注意：</span><br><span class="line">     每一节的命令操作将会更改本文。推荐您复制本文的一个副本，然后在副本上</span><br><span class="line">     进行训练(如果您是通过&quot;vimtutor&quot;来启动教程的，那么本文就已经是副本了)。</span><br><span class="line"></span><br><span class="line">     切记一点：本教程的设计思路是在使用中进行学习的。也就是说，您需要通过</span><br><span class="line">     执行命令来学习它们本身的正确用法。如果您只是阅读而不操作，那么您可能</span><br><span class="line">     会很快遗忘这些命令的！</span><br><span class="line"></span><br><span class="line">     好了，现在请确定您的Shift-Lock(大小写锁定键)还没有按下，然后按键盘上</span><br><span class="line">     的字母键 j 足够多次来移动光标，直到第一节的内容能够完全充满屏幕。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第一讲第一节：移动光标</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         ** 要移动光标，请依照说明分别按下 h、j、k、l 键。 **</span><br><span class="line"></span><br><span class="line">         ^</span><br><span class="line">         k            提示： h 的键位于左边，每次按下就会向左移动。</span><br><span class="line">       &lt; h     l &gt;           l 的键位于右边，每次按下就会向右移动。</span><br><span class="line">         j               j 键看起来很象一支尖端方向朝下的箭头。</span><br><span class="line">         v</span><br><span class="line"></span><br><span class="line">  1. 请随意在屏幕内移动光标，直至您觉得舒服为止。</span><br><span class="line"></span><br><span class="line">  2. 按下下行键(j)，直到出现光标重复下行。</span><br><span class="line"></span><br><span class="line">---&gt; 现在您应该已经学会如何移动到下一讲吧。</span><br><span class="line"></span><br><span class="line">  3. 现在请使用下行键，将光标移动到第一讲第二节。</span><br><span class="line"></span><br><span class="line">提示：如果您不敢确定您所按下的字母，请按下&lt;ESC&gt;键回到正常(Normal)模式。</span><br><span class="line">      然后再次从键盘输入您想要的命令。</span><br><span class="line"></span><br><span class="line">提示：光标键应当也能正常工作的。但是使用hjkl键，在习惯之后您就能够更快</span><br><span class="line">      地在屏幕内四处移动光标。真的是这样！</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第一讲第二节：VIM的进入和退出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  !! 特别提示：敬请阅读本一节的完整内容，然后再执行以下所讲解的命令。</span><br><span class="line"></span><br><span class="line">  1. 按&lt;ESC&gt;键(这是为了确保您处在正常模式)。</span><br><span class="line"></span><br><span class="line">  2. 然后输入：            :q! &lt;回车&gt;</span><br><span class="line">     这种方式的退出编辑器会丢弃您进入编辑器以来所做的改动。</span><br><span class="line"></span><br><span class="line">  3. 如果您看到了命令行提示符，请输入能够带您回到本教程的命令，那就是：</span><br><span class="line">     vimtutor &lt;回车&gt;</span><br><span class="line"></span><br><span class="line">  4. 如果您自信已经牢牢记住了这些步骤的话，请从步骤1执行到步骤3退出，然</span><br><span class="line">     后再次进入编辑器。</span><br><span class="line"></span><br><span class="line">提示： :q! &lt;回车&gt; 会丢弃您所做的任何改动。几讲之后您将学会如何保存改动到文件。</span><br><span class="line"></span><br><span class="line">  5. 将光标下移到第一讲第三节。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第一讲第三节：文本编辑之删除</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   ** 在正常(Normal)模式下，可以按下 x 键来删除光标所在位置的字符。**</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的那一行。</span><br><span class="line"></span><br><span class="line">  2. 为了修正输入错误，请将光标移至准备删除的字符的位置处。</span><br><span class="line"></span><br><span class="line">  3. 然后按下 x 键将错误字符删除掉。</span><br><span class="line"></span><br><span class="line">  4. 重复步骤2到步骤4，直到句子修正为止。</span><br><span class="line"></span><br><span class="line">---&gt; The ccow jumpedd ovverr thhe mooon.</span><br><span class="line"></span><br><span class="line">  5. 好了，该行已经修正了，下面是第一讲第四节。</span><br><span class="line"></span><br><span class="line">特别提示：在浏览本教程时，不要强行记忆。记住一点：在使用中学习。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第一讲第四节：文本编辑之插入</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     ** 在正常模式下，可以按下 i 键来插入文本。**</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的第一行。</span><br><span class="line"></span><br><span class="line">  2. 为了使得第一行内容雷同于第二行，请将光标移至文本第一个准备插入字符</span><br><span class="line">     的位置。</span><br><span class="line"></span><br><span class="line">  3. 然后按下 i 键，接着输入必要的文本字符。</span><br><span class="line"></span><br><span class="line">  4. 每个错误修正完毕后，请按下 &lt;ESC&gt; 键返回正常模式。</span><br><span class="line">     重复步骤2至步骤4以便修正句子。</span><br><span class="line"></span><br><span class="line">---&gt; There is text misng this .</span><br><span class="line">---&gt; There is some text missing from this line.</span><br><span class="line"></span><br><span class="line">  5. 如果您对文本插入操作已经很满意，请接着阅读下面的第一讲第五节。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第一讲第五节：文本编辑之添加</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ** 按 A 键以添加文本。 **</span><br><span class="line"></span><br><span class="line">  1. 移动光标到下面第一个标记有 ---&gt; 的一行。</span><br><span class="line">     光标放在那一行的哪个字符上并不重要。</span><br><span class="line"></span><br><span class="line">  2. 按 A 键输入必要的添加内容。</span><br><span class="line"></span><br><span class="line">  3. 文本添加完毕后，按 &lt;ESC&gt; 键回到正常模式。</span><br><span class="line"></span><br><span class="line">  4. 移动光标到下面第二个标记有 ---&gt; 的一行。重复步骤2和步骤3以改正这个句子。</span><br><span class="line"></span><br><span class="line">---&gt; There is some text missing from th</span><br><span class="line">     There is some text missing from this line.</span><br><span class="line">---&gt; There is also some text miss</span><br><span class="line">     There is also some text missing here.</span><br><span class="line"></span><br><span class="line">  5. 当您对添加文本操作感到满意时，请继续学习第一讲第六节。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第一讲第六节：编辑文件</span><br><span class="line"></span><br><span class="line">            ** 使用 :wq 以保存文件并退出。 **</span><br><span class="line"></span><br><span class="line">  特别提示：在执行以下步骤之前，请先读完整个小节！</span><br><span class="line"></span><br><span class="line">  1. 如您在第一讲第二节中所做的那样退出本教程： :q!</span><br><span class="line">     或者，如果您可以访问另一个终端，请在那里执行以下操作。</span><br><span class="line"></span><br><span class="line">  2. 在 shell 的提示符下输入命令： vim tutor &lt;回车&gt;</span><br><span class="line">     &#x27;vim&#x27;是启动 Vim 编辑器的命令，&#x27;tutor&#x27;是您希望编辑的文件的名字。</span><br><span class="line">     请使用一个可以改动的文件。</span><br><span class="line"></span><br><span class="line">  3. 使用您在前面的教程中学到的命令插入删除文本。</span><br><span class="line"></span><br><span class="line">  4. 保存改动过的文件并退出 Vim，按这些键： :wq  &lt;回车&gt;</span><br><span class="line"></span><br><span class="line">  5. 如果您在步骤1中已经退出 vimtutor，请重启 vimtutor 移动到下面的小结一节。</span><br><span class="line"></span><br><span class="line">  6. 阅读完以上步骤，弄懂它们的意义，然后在实践中进行练习。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                   第一讲小结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1. 光标在屏幕文本中的移动既可以用箭头键，也可以使用 hjkl 字母键。</span><br><span class="line">     h (左移)    j (下行)       k (上行)        l (右移)</span><br><span class="line"></span><br><span class="line">  2. 欲进入 Vim 编辑器(从命令行提示符)，请输入：vim 文件名 &lt;回车&gt;</span><br><span class="line"></span><br><span class="line">  3. 欲退出 Vim 编辑器，请输入 &lt;ESC&gt;   :q!   &lt;回车&gt; 放弃所有改动。</span><br><span class="line">                      或者输入 &lt;ESC&gt;   :wq   &lt;回车&gt; 保存改动。</span><br><span class="line"></span><br><span class="line">  4. 在正常模式下删除光标所在位置的字符，请按： x</span><br><span class="line"></span><br><span class="line">  5. 欲插入或添加文本，请输入：</span><br><span class="line"></span><br><span class="line">     i   输入欲插入文本   &lt;ESC&gt;        在光标前插入文本</span><br><span class="line">     A   输入欲添加文本   &lt;ESC&gt;             在一行后添加文本</span><br><span class="line"></span><br><span class="line">特别提示：按下 &lt;ESC&gt; 键会带您回到正常模式或者撤消一个不想输入或部分完整</span><br><span class="line">的命令。</span><br><span class="line"></span><br><span class="line">好了，第一讲到此结束。下面接下来继续第二讲的内容。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第二讲第一节：删除类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ** 输入 dw 可以从光标处删除至一个单词的末尾。**</span><br><span class="line"></span><br><span class="line">  1. 请按下 &lt;ESC&gt; 键确保您处于正常模式。</span><br><span class="line"></span><br><span class="line">  2. 请将光标移动到本节中下面标记有 ---&gt; 的那一行。</span><br><span class="line"></span><br><span class="line">  3. 请将光标移至准备要删除的单词的起始处。</span><br><span class="line"></span><br><span class="line">  4. 接着输入 dw 删除掉该单词。</span><br><span class="line"></span><br><span class="line">  特别提示：当您输入时，字母 d 会同时出现在屏幕的最后一行。Vim 在等待您输入</span><br><span class="line">  字母 w。如果您看到的是除 d 外的其他字符，那表明您按错了；请按下 &lt;ESC&gt; 键，</span><br><span class="line">  然后重新再来。</span><br><span class="line"></span><br><span class="line">---&gt; There are a some words fun that don&#x27;t belong paper in this sentence.</span><br><span class="line"></span><br><span class="line">  5. 重复步骤3和步骤4，直至句子修正完毕。接着继续第二讲第二节内容。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">              第二讲第二节：更多删除类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           ** 输入 d$ 从当前光标删除到行末。**</span><br><span class="line"></span><br><span class="line">  1. 请按下 &lt;ESC&gt; 键确保您处于正常模式。</span><br><span class="line"></span><br><span class="line">  2. 请将光标移动到本节中下面标记有 ---&gt; 的那一行。</span><br><span class="line"></span><br><span class="line">  3. 请将光标移动到该行的尾部(也就是在第一个点号‘.’后面)。</span><br><span class="line"></span><br><span class="line">  4. 然后输入 d$ 从光标处删至当前行尾部。</span><br><span class="line"></span><br><span class="line">---&gt; Somebody typed the end of this line twice. end of this line twice.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  5. 请继续学习第二讲第三节就知道是怎么回事了。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第二讲第三节：关于命令和对象</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  许多改变文本的命令都由一个操作符和一个动作构成。</span><br><span class="line">  使用删除操作符 d 的删除命令的格式如下：</span><br><span class="line"></span><br><span class="line">    d   motion</span><br><span class="line"></span><br><span class="line">  其中：</span><br><span class="line">    d      - 删除操作符。</span><br><span class="line">    motion - 操作符的操作对象(在下面列出)。</span><br><span class="line"></span><br><span class="line">  一个简短的动作列表：</span><br><span class="line">    w - 从当前光标当前位置直到下一个单词起始处，不包括它的第一个字符。</span><br><span class="line">    e - 从当前光标当前位置直到单词末尾，包括最后一个字符。</span><br><span class="line">    $ - 从当前光标当前位置直到当前行末。</span><br><span class="line"></span><br><span class="line">  因此输入 de 会从当前光标位置删除到单词末尾。</span><br><span class="line"></span><br><span class="line">特别提示：</span><br><span class="line">    对于勇于探索者，请在正常模式下面仅按代表相应动作的键而不使用操作符，您</span><br><span class="line">    将看到光标的移动正如上面的对象列表所代表的一样。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第二讲第四节：使用计数指定动作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">             ** 在动作前输入数字会使它重复那么多次。 **</span><br><span class="line"></span><br><span class="line">  1. 移动光标到下面标记有 ---&gt; 的一行的开始。</span><br><span class="line"></span><br><span class="line">  2. 输入 2w 使光标向前移动两个单词。</span><br><span class="line"></span><br><span class="line">  3. 输入 3e 使光标向前移动到第三个单词的末尾。</span><br><span class="line"></span><br><span class="line">  4. 输入 0 (数字零) 移动光标到行首。</span><br><span class="line"></span><br><span class="line">  5. 重复步骤2和步骤3，尝试不同的数字。</span><br><span class="line"></span><br><span class="line">---&gt; This is just a line with words you can move around in.</span><br><span class="line"></span><br><span class="line">  6. 请继续学习第二讲第五节。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">               第二讲第五节：使用计数以删除更多</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           ** 使用操作符时输入数字可以使它重复那么多次。 **</span><br><span class="line"></span><br><span class="line">  上面已经提到过删除操作符和动作的组合，您可以在组合中动作之前插入一个数字以</span><br><span class="line">  删除更多：</span><br><span class="line">     d   number(数字)   motion</span><br><span class="line"></span><br><span class="line">  1. 移动光标到下面标记有 ---&gt; 的一行中第一个大写字母单词上。</span><br><span class="line"></span><br><span class="line">  2. 输入 d2w 以删除两个大写字母单词。</span><br><span class="line"></span><br><span class="line">  3. 重复步骤1和步骤2，使用不同的数字使得用一个命令就能删除全部相邻的大写字母</span><br><span class="line">     单词</span><br><span class="line"></span><br><span class="line">---&gt;  this ABC DE line FGHI JK LMN OP of words is Q RS TUV cleaned up.</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                第二讲第六节：操作整行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">             ** 输入 dd 可以删除整一个当前行。 **</span><br><span class="line"></span><br><span class="line">  鉴于整行删除的高频度，Vi 的设计者决定要简化整行删除操作，您仅需要在同一行上</span><br><span class="line">  击打两次 d 就可以删除掉光标所在的整行了。</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面的短句段落中的第二行。</span><br><span class="line">  2. 输入 dd 删除该行。</span><br><span class="line">  3. 然后移动到第四行。</span><br><span class="line">  4. 接着输入 2dd 删除两行。</span><br><span class="line"></span><br><span class="line">---&gt;  1)  Roses are red,</span><br><span class="line">---&gt;  2)  Mud is fun,</span><br><span class="line">---&gt;  3)  Violets are blue,</span><br><span class="line">---&gt;  4)  I have a car,</span><br><span class="line">---&gt;  5)  Clocks tell time,</span><br><span class="line">---&gt;  6)  Sugar is sweet</span><br><span class="line">---&gt;  7)  And so are you.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">               第二讲第七节：撤消类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ** 输入 u 来撤消最后执行的命令，输入 U 来撤消对整行的修改。 **</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的那一行，并将其置于第一个错误</span><br><span class="line">     处。</span><br><span class="line">  2. 输入 x 删除第一个不想保留的字母。</span><br><span class="line">  3. 然后输入 u 撤消最后执行的(一次)命令。</span><br><span class="line">  4. 这次要使用 x 修正本行的所有错误。</span><br><span class="line">  5. 现在输入一个大写的 U ，恢复到该行的原始状态。</span><br><span class="line">  6. 接着多次输入 u 以撤消 U 以及更前的命令。</span><br><span class="line">  7. 然后多次输入 CTRL-R (先按下 CTRL 键不放开，接着按 R 键)，这样就</span><br><span class="line">     可以重做被撤消的命令，也就是撤消掉撤消命令。</span><br><span class="line"></span><br><span class="line">---&gt; Fiix the errors oon thhis line and reeplace them witth undo.</span><br><span class="line"></span><br><span class="line">  8. 这些都是非常有用的命令。下面是第二讲的小结了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                   第二讲小结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1. 欲从当前光标删除至下一个单词，请输入：dw</span><br><span class="line">  2. 欲从当前光标删除至当前行末尾，请输入：d$</span><br><span class="line">  3. 欲删除整行，请输入：dd</span><br><span class="line"></span><br><span class="line">  4. 欲重复一个动作，请在它前面加上一个数字：2w</span><br><span class="line">  5. 在正常模式下修改命令的格式是：</span><br><span class="line">               operator   [number]   motion</span><br><span class="line">     其中：</span><br><span class="line">       operator - 操作符，代表要做的事情，比如 d 代表删除</span><br><span class="line">       [number] - 可以附加的数字，代表动作重复的次数</span><br><span class="line">       motion   - 动作，代表在所操作的文本上的移动，例如 w 代表单词(word)，</span><br><span class="line">          $ 代表行末等等。</span><br><span class="line"></span><br><span class="line">  6. 欲移动光标到行首，请按数字0键：0</span><br><span class="line"></span><br><span class="line">  7. 欲撤消以前的操作，请输入：u (小写的u)</span><br><span class="line">     欲撤消在一行中所做的改动，请输入：U (大写的U)</span><br><span class="line">     欲撤消以前的撤消命令，恢复以前的操作结果，请输入：CTRL-R</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">               第三讲第一节：置入类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ** 输入 p 将最后一次删除的内容置入光标之后。 **</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面第一个标记有 ---&gt; 的一行。</span><br><span class="line"></span><br><span class="line">  2. 输入 dd 将该行删除，这样会将该行保存到 Vim 的一个寄存器中。</span><br><span class="line"></span><br><span class="line">  3. 接着将光标移动到 c) 一行，即准备置入的位置的上方。记住：是上方哦。</span><br><span class="line"></span><br><span class="line">  4. 然后在正常模式下(&lt;ESC&gt;键进入)输入 p 将该行粘贴置入。</span><br><span class="line"></span><br><span class="line">  5. 重复步骤2至步骤4，将所有的行依序放置到正确的位置上。</span><br><span class="line"></span><br><span class="line">---&gt; d) Can you learn too?</span><br><span class="line">---&gt; b) Violets are blue,</span><br><span class="line">---&gt; c) Intelligence is learned,</span><br><span class="line">---&gt; a) Roses are red,</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">               第三讲第二节：替换类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      ** 输入 r 和一个字符替换光标所在位置的字符。**</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的第一行。</span><br><span class="line"></span><br><span class="line">  2. 请移动光标到第一个出错的位置。</span><br><span class="line"></span><br><span class="line">  3. 接着输入 r 和要替换成的字符，这样就能将错误替换掉了。</span><br><span class="line"></span><br><span class="line">  4. 重复步骤2和步骤3，直到第一行已经修改完毕。</span><br><span class="line"></span><br><span class="line">---&gt;  Whan this lime was tuoed in, someone presswd some wrojg keys!</span><br><span class="line">---&gt;  When this line was typed in, someone pressed some wrong keys!</span><br><span class="line"></span><br><span class="line">  5. 然后我们继续学习第三讲第三节。</span><br><span class="line"></span><br><span class="line">特别提示：切记您要在使用中学习，而不是在记忆中学习。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第三讲第三节：更改类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         ** 要改变文本直到一个单词的末尾，请输入 ce **</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的第一行。</span><br><span class="line"></span><br><span class="line">  2. 接着把光标放在单词 lubw 的字母 u 的位置那里。</span><br><span class="line"></span><br><span class="line">  3. 然后输入 cw 以及正确的单词(在本例中是输入 ine )。</span><br><span class="line"></span><br><span class="line">  4. 最后按 &lt;ESC&gt; 键，然后光标定位到下一个错误第一个准备更改的字母处。</span><br><span class="line"></span><br><span class="line">  5. 重复步骤3和步骤4，直到第一个句子完全雷同第二个句子。</span><br><span class="line"></span><br><span class="line">---&gt; This lubw has a few wptfd that mrrf changing usf the change operator.</span><br><span class="line">---&gt; This line has a few words that need changing using the change operator.</span><br><span class="line"></span><br><span class="line">提示：请注意 ce 命令不仅仅是删除了一个单词，它也让您进入插入模式了。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">               第三讲第四节：使用c更改更多</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       ** 更改类操作符可以与删除中使用的同样的动作配合使用。 **</span><br><span class="line"></span><br><span class="line">  1. 更改类操作符的工作方式跟删除类是一致的。操作格式是：</span><br><span class="line"></span><br><span class="line">         c    [number]   motion</span><br><span class="line"></span><br><span class="line">  2. 动作参数(motion)也是一样的，比如 w 代表单词，$代表行末等等。</span><br><span class="line"></span><br><span class="line">  3. 请将光标移动到本节中下面标记有 ---&gt; 的第一行。</span><br><span class="line"></span><br><span class="line">  4. 接着将光标移动到第一个错误处。</span><br><span class="line"></span><br><span class="line">  5. 然后输入 c$ 使得该行剩下的部分更正得同第二行一样。最后按 &lt;ESC&gt; 键。</span><br><span class="line"></span><br><span class="line">---&gt; The end of this line needs some help to make it like the second.</span><br><span class="line">---&gt; The end of this line needs to be corrected using the  c$  command.</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                  第三讲小结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1. 要重新置入已经删除的文本内容，请按小写字母 p 键。该操作可以将已删除</span><br><span class="line">     的文本内容置于光标之后。如果最后一次删除的是一个整行，那么该行将置</span><br><span class="line">     于当前光标所在行的下一行。</span><br><span class="line"></span><br><span class="line">  2. 要替换光标所在位置的字符，请输入小写的 r 和要替换掉原位置字符的新字</span><br><span class="line">     符即可。</span><br><span class="line"></span><br><span class="line">  3. 更改类命令允许您改变从当前光标所在位置直到动作指示的位置中间的文本。</span><br><span class="line">     比如输入 ce 可以替换当前光标到单词的末尾的内容；输入 c$ 可以替换当</span><br><span class="line">     前光标到行末的内容。</span><br><span class="line"></span><br><span class="line">  4. 更改类命令的格式是：</span><br><span class="line"></span><br><span class="line">     c   [number]   motion</span><br><span class="line"></span><br><span class="line">现在我们继续学习下一讲。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第四讲第一节：定位及文件状态</span><br><span class="line"></span><br><span class="line">  ** 输入 CTRL-G 显示当前编辑文件中当前光标所在行位置以及文件状态信息。</span><br><span class="line">     输入大写 G 则直接跳转到文件中的某一指定行。**</span><br><span class="line"></span><br><span class="line">  提示：切记要先通读本节内容，之后才可以执行以下步骤!!!</span><br><span class="line"></span><br><span class="line">  1. 按下 CTRL 键不放开然后按 g 键。我们称这个键组合为 CTRL-G。</span><br><span class="line">     您会看到页面最底部出现一个状态信息行，显示的内容是当前编辑的文件名</span><br><span class="line">     和文件中光标位置。请记住行号，它会在步骤3中用到。</span><br><span class="line"></span><br><span class="line">提示：您也许会在屏幕的右下角看到光标位置，这会在 &#x27;ruler&#x27; 选项设置时发生</span><br><span class="line">      (参见 :help &#x27;ruler&#x27;)</span><br><span class="line"></span><br><span class="line">  2. 输入大写 G 可以使得当前光标直接跳转到文件最后一行。</span><br><span class="line">     输入 gg 可以使得当前光标直接跳转到文件第一行。</span><br><span class="line"></span><br><span class="line">  3. 输入您曾停留的行号，然后输入大写 G。这样就可以返回到您第一次按下</span><br><span class="line">     CTRL-G 时所在的行了。</span><br><span class="line"></span><br><span class="line">  4. 如果您觉得没问题的话，请执行步骤1至步骤3的操作进行练习。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第四讲第二节：搜索类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     ** 输入 / 加上一个字符串可以用以在当前文件中查找该字符串。**</span><br><span class="line"></span><br><span class="line">  1. 在正常模式下输入 / 字符。您此时会注意到该字符和光标都会出现在屏幕底</span><br><span class="line">     部，这跟 : 命令是一样的。</span><br><span class="line"></span><br><span class="line">  2. 接着输入 errroor &lt;回车&gt;。那个errroor就是您要查找的字符串。</span><br><span class="line"></span><br><span class="line">  3. 要查找同上一次的字符串，只需要按 n 键。要向相反方向查找同上一次的字</span><br><span class="line">     符串，请输入大写 N 即可。</span><br><span class="line"></span><br><span class="line">  4. 如果您想逆向查找字符串，请使用 ? 代替 / 进行。</span><br><span class="line"></span><br><span class="line">  5. 要回到您之前的位置按 CTRL-O (按住 Ctrl 键不放同时按下字母 o)。重复按可以</span><br><span class="line">     回退更多步。CTRL-I 会跳转到较新的位置。</span><br><span class="line"></span><br><span class="line">---&gt;  &quot;errroor&quot; is not the way to spell error;  errroor is an error.</span><br><span class="line">提示：如果查找已经到达文件末尾，查找会自动从文件头部继续查找，除非</span><br><span class="line">      &#x27;wrapscan&#x27; 选项被复位。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">           第四讲第三节：配对括号的查找</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          ** 输入 % 可以查找配对的括号 )、]、&#125;。**</span><br><span class="line"></span><br><span class="line">  1. 把光标放在本节下面标记有 --&gt; 那一行中的任何一个 (、[ 或 &#123; 处。</span><br><span class="line"></span><br><span class="line">  2. 接着按 % 字符。</span><br><span class="line"></span><br><span class="line">  3. 此时光标的位置应当是在配对的括号处。</span><br><span class="line"></span><br><span class="line">  4. 再次按 % 就可以跳回配对的第一个括号处。</span><br><span class="line"></span><br><span class="line">  5. 移动光标到另一个 (、)、[、]、&#123; 或 &#125; 处，按 % 查看其所作所为。</span><br><span class="line"></span><br><span class="line">---&gt; This ( is a test line with (&#x27;s, [&#x27;s ] and &#123;&#x27;s &#125; in it. ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">提示：在程序调试时，这个功能用来查找不配对的括号是很有用的。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">              第四讲第四节：替换命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ** 输入 :s/old/new/g 可以替换 old 为 new。**</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的那一行。</span><br><span class="line"></span><br><span class="line">  2. 输入 :s/thee/the &lt;回车&gt; 。请注意该命令只改变光标所在行的第一个匹配</span><br><span class="line">     串。</span><br><span class="line"></span><br><span class="line">  3. 输入 :s/thee/the/g    则是替换全行的匹配串，该行中所有的 &quot;thee&quot; 都会被</span><br><span class="line">     改变。</span><br><span class="line"></span><br><span class="line">---&gt; thee best time to see thee flowers is in thee spring.</span><br><span class="line"></span><br><span class="line">  4. 要替换两行之间出现的每个匹配串，请</span><br><span class="line">     输入   :#,#s/old/new/g   其中 #,# 代表的是替换操作的若干行中</span><br><span class="line">                              首尾两行的行号。</span><br><span class="line">     输入   :%s/old/new/g     则是替换整个文件中的每个匹配串。</span><br><span class="line">     输入   :%s/old/new/gc    会找到整个文件中的每个匹配串，并且对每个匹配串</span><br><span class="line">                              提示是否进行替换。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                   第四讲小结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1. CTRL-G 用于显示当前光标所在位置和文件状态信息。</span><br><span class="line">     G 用于将光标跳转至文件最后一行。</span><br><span class="line">     先敲入一个行号然后输入大写 G 则是将光标移动至该行号代表的行。</span><br><span class="line">     gg 用于将光标跳转至文件第一行。</span><br><span class="line"></span><br><span class="line">  2. 输入 / 然后紧随一个字符串是在当前所编辑的文档中正向查找该字符串。</span><br><span class="line">     输入 ? 然后紧随一个字符串则是在当前所编辑的文档中反向查找该字符串。</span><br><span class="line">     完成一次查找之后按 n 键是重复上一次的命令，可在同一方向上查</span><br><span class="line">     找下一个匹配字符串所在；或者按大写 N 向相反方向查找下一匹配字符串所在。</span><br><span class="line">     CTRL-O 带您跳转回较旧的位置，CTRL-I 则带您到较新的位置。</span><br><span class="line"></span><br><span class="line">  3. 如果光标当前位置是括号(、)、[、]、&#123;、&#125;，按 % 会将光标移动到配对的括号上。</span><br><span class="line"></span><br><span class="line">  4. 在一行内替换头一个字符串 old 为新的字符串 new，请输入  :s/old/new</span><br><span class="line">     在一行内替换所有的字符串 old 为新的字符串 new，请输入  :s/old/new/g</span><br><span class="line">     在两行内替换所有的字符串 old 为新的字符串 new，请输入  :#,#s/old/new/g</span><br><span class="line">     在文件内替换所有的字符串 old 为新的字符串 new，请输入  :%s/old/new/g</span><br><span class="line">     进行全文替换时询问用户确认每个替换需添加 c 标志        :%s/old/new/gc</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">        第五讲第一节：在 VIM 内执行外部命令的方法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       ** 输入 :! 然后紧接着输入一个外部命令可以执行该外部命令。**</span><br><span class="line"></span><br><span class="line">  1. 按下我们所熟悉的 : 命令使光标移动到屏幕底部。这样您就可以输入一行命令了。</span><br><span class="line"></span><br><span class="line">  2. 接着输入感叹号 ! 这个字符，这样就允许您执行外部的 shell 命令了。</span><br><span class="line"></span><br><span class="line">  3. 我们以 ls 命令为例。输入 !ls &lt;回车&gt; 。该命令就会列举出您当前目录的</span><br><span class="line">     内容，就如同您在命令行提示符下输入 ls 命令的结果一样。如果 !ls 没起</span><br><span class="line">     作用，您可以试试 :!dir 看看。</span><br><span class="line"></span><br><span class="line">提示：所有的外部命令都可以以这种方式执行，包括带命令行参数的那些。</span><br><span class="line"></span><br><span class="line">提示：所有的 : 命令都必须以敲 &lt;回车&gt; 键结束。从今以后我们就不会总是提到这一点</span><br><span class="line">      了。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">              第五讲第二节：关于保存文件的更多信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         ** 要将对文件的改动保存到文件中，请输入 :w FILENAME 。**</span><br><span class="line"></span><br><span class="line">  1. 输入 :!dir 或者 :!ls 获知当前目录的内容。您应当已知道最后还得敲</span><br><span class="line">     &lt;回车&gt; 吧。</span><br><span class="line"></span><br><span class="line">  2. 选择一个未被用到的文件名，比如 TEST。</span><br><span class="line"></span><br><span class="line">  3. 接着输入 :w TEST  (此处 TEST 是您所选择的文件名。)</span><br><span class="line"></span><br><span class="line">  4. 该命令会以 TEST 为文件名保存整个文件 (Vim 教程)。为了验证这一点，</span><br><span class="line">     请再次输入 :!dir 或 :!ls 查看您的目录列表内容。</span><br><span class="line"></span><br><span class="line">请注意：如果您退出 Vim 然后在以命令 vim TEST 再次启动 Vim，那么该文件内</span><br><span class="line">     容应该同您保存时的文件内容是完全一样的。</span><br><span class="line"></span><br><span class="line">  5. 现在您可以删除 TEST 文件了。在 MS-DOS 下，请输入：   :!del TEST</span><br><span class="line">                                 在 Unix 下，请输入：     :!rm TEST</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第五讲第三节：一个具有选择性的保存命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ** 要保存文件的部分内容，请输入 v motion :w FILENAME **</span><br><span class="line"></span><br><span class="line">  1. 移动光标到本行。</span><br><span class="line"></span><br><span class="line">  2. 接着按 v 键，将光标移动至下面第五个条目上。您会注意到之间的文本被高亮了。</span><br><span class="line"></span><br><span class="line">  3. 然后按 : 字符。您将看到屏幕底部会出现 :&#x27;&lt;,&#x27;&gt; 。</span><br><span class="line"></span><br><span class="line">  4. 现在请输入 w TEST，其中 TEST 是一个未被使用的文件名。确认您看到了</span><br><span class="line">     :&#x27;&lt;,&#x27;&gt;w TEST 之后按 &lt;回车&gt; 键。</span><br><span class="line"></span><br><span class="line">  5. 这时 Vim 会把选中的行写入到以 TEST 命名的文件中去。使用 :!dir 或 :!ls</span><br><span class="line">     确认文件被正确保存。这次先别删除它！我们在下一讲中会用到它。</span><br><span class="line"></span><br><span class="line">提示：按 v 键使 Vim 进入可视模式进行选取。您可以四处移动光标使选取区域变大或</span><br><span class="line">      变小。接着您可以使用一个操作符对选中文本进行操作。例如，按 d 键会删除</span><br><span class="line">      选中的文本内容。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">           第五讲第四节：提取和合并文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       ** 要向当前文件中插入另外的文件的内容，请输入 :r FILENAME **</span><br><span class="line"></span><br><span class="line">  1. 请把光标移动到本行上面一行。</span><br><span class="line"></span><br><span class="line">特别提示：执行步骤2之后您将看到第五讲第三节的文字，请届时往下移动</span><br><span class="line">          以再次看到本讲内容。</span><br><span class="line"></span><br><span class="line">  2. 接着通过命令 :r TEST 将前面创建的名为 TEST 的文件提取进来。</span><br><span class="line">     您所提取进来的文件将从光标所在位置处开始置入。</span><br><span class="line"></span><br><span class="line">  3. 为了确认文件已经提取成功，移动光标回到原来的位置就可以注意有两份第</span><br><span class="line">     五讲第三节的内容，一份是原始内容，另外一份是来自文件的副本。</span><br><span class="line"></span><br><span class="line">提示：您还可以读取外部命令的输出。例如， :r !ls 可以读取 ls 命令的输出，并</span><br><span class="line">      把它放置在光标下面。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                   第五讲小结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1. :!command 用于执行一个外部命令 command。</span><br><span class="line"></span><br><span class="line">     请看一些实际例子：</span><br><span class="line">     (MS-DOS)      (Unix)</span><br><span class="line">      :!dir           :!ls           -  用于显示当前目录的内容。</span><br><span class="line">      :!del FILENAME   :!rm FILENAME   -  用于删除名为 FILENAME 的文件。</span><br><span class="line"></span><br><span class="line">  2. :w FILENAME  可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文</span><br><span class="line">     件中。</span><br><span class="line"></span><br><span class="line">  3. v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件</span><br><span class="line">     FILENAME 中。</span><br><span class="line"></span><br><span class="line">  4. :r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置</span><br><span class="line">     后面。</span><br><span class="line"></span><br><span class="line">  5. :r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">             第六讲第一节：打开类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     ** 输入 o 将在光标的下方打开新的一行并进入插入模式。**</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的那一行。</span><br><span class="line"></span><br><span class="line">  2. 接着输入小写的 o 在光标 *下方* 打开新的一行，这个命令会使您</span><br><span class="line">     进入插入模式。</span><br><span class="line"></span><br><span class="line">  3. 然后输入一些文字，之后按 &lt;ESC&gt; 键退出插入模式而进入正常模式。</span><br><span class="line"></span><br><span class="line">---&gt; After typing  o  the cursor is placed on the open line in Insert mode.</span><br><span class="line"></span><br><span class="line">  4. 为了在光标 *上方* 打开新的一行，只需要输入大写的 O 而不是小写的 o</span><br><span class="line">     就可以了。请在下行测试一下吧。</span><br><span class="line"></span><br><span class="line">---&gt; Open up a line above this by typing O while the cursor is on this line.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第六讲第二节：附加类命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">             ** 输入 a 将可在光标之后插入文本。 **</span><br><span class="line"></span><br><span class="line">  1. 请在正常模式下将光标移动到本节中下面标记有 ---&gt; 的第一行的行首。</span><br><span class="line"></span><br><span class="line">  2. 接着输入 e 直到光标位于 li 的末尾。</span><br><span class="line"></span><br><span class="line">  3. 输入小写的 a 则可在光标之后插入文本了。</span><br><span class="line"></span><br><span class="line">  4. 将单词补充完整，就像下一行中的那样。之后按 &lt;ESC&gt; 键退出插入模式回到</span><br><span class="line">     正常模式。</span><br><span class="line"></span><br><span class="line">  5. 使用 e 移动光标到下一步不完整的单词，重复步骤3和步骤4。</span><br><span class="line"></span><br><span class="line">---&gt; This li will allow you to pract appendi text to a line.</span><br><span class="line">---&gt; This line will allow you to practice appending text to a line.</span><br><span class="line"></span><br><span class="line">提示：a、i 和 A 都会带您进入插入模式，惟一的区别在于字符插入的位置。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">            第六讲第三节：另外一个置换类命令的版本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              ** 输入大写的 R 可连续替换多个字符。**</span><br><span class="line"></span><br><span class="line">  1. 请将光标移动到本节中下面标记有 ---&gt; 的第一行。移动光标到第一个 xxx 的</span><br><span class="line">     起始位置。</span><br><span class="line"></span><br><span class="line">  2. 然后输入大写的 R 开始把第一行中的不同于第二行的剩余字符逐一输入，就</span><br><span class="line">     可以全部替换掉原有的字符而使得第一行完全雷同第二行了。</span><br><span class="line"></span><br><span class="line">  3. 接着按 &lt;ESC&gt; 键退出替换模式回到正常模式。您可以注意到尚未替换的文本</span><br><span class="line">     仍然保持原状。</span><br><span class="line"></span><br><span class="line">  4. 重复以上步骤，将剩余的 xxx 也替换掉。</span><br><span class="line"></span><br><span class="line">---&gt; Adding 123 to xxx gives you xxx.</span><br><span class="line">---&gt; Adding 123 to 456 gives you 579.</span><br><span class="line"></span><br><span class="line">提示：替换模式与插入模式相似，不过每个输入的字符都会删除一个已有的字符。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">              第六讲第四节：复制粘贴文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         ** 使用操作符 y 复制文本，使用 p 粘贴文本 **</span><br><span class="line"></span><br><span class="line">  1. 定位到下面标记有 ---&gt; 的一行，将光标移动到 &quot;a)&quot; 之后。</span><br><span class="line"></span><br><span class="line">  2. 接着使用 v 进入可视模式，移动光标到 &quot;first&quot; 的前面。</span><br><span class="line"></span><br><span class="line">  3. 现在输入 y 以抽出(复制)高亮的文本。</span><br><span class="line"></span><br><span class="line">  4. 然后移动光标到下一行的末尾：j$</span><br><span class="line"></span><br><span class="line">  5. 接着输入 p 以放置(粘贴)复制了的文本。然后输入：a second &lt;ESC&gt;。</span><br><span class="line"></span><br><span class="line">  6. 使用可视模式选中 &quot; item.&quot;，用 y 复制，再用 j$ 将光标移动到下一行末尾，</span><br><span class="line">     用 p 将文本粘贴到那里。</span><br><span class="line"></span><br><span class="line">---&gt;  a) this is the first item.</span><br><span class="line">      b)</span><br><span class="line"></span><br><span class="line">  提示：您还可以把 y 当作操作符来使用；例如 yw 可以用来复制一个单词。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                第六讲第五节：设置类命令的选项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          ** 设置可使查找或者替换可忽略大小写的选项 **</span><br><span class="line"></span><br><span class="line">  1. 要查找单词 ignore 可在正常模式下输入 /ignore &lt;回车&gt;。</span><br><span class="line">     要重复查找该词，可以重复按 n 键。</span><br><span class="line"></span><br><span class="line">  2. 然后设置 ic 选项(Ignore Case，忽略大小写)，请输入： :set ic</span><br><span class="line"></span><br><span class="line">  3. 现在可以通过键入 n 键再次查找单词 ignore。注意到 Ignore 和 IGNORE 现在</span><br><span class="line">     也被找到了。</span><br><span class="line"></span><br><span class="line">  4. 然后设置 hlsearch 和 incsearch 这两个选项，请输入： :set hls is</span><br><span class="line"></span><br><span class="line">  5. 现在可以再次输入查找命令，看看会有什么效果： /ignore &lt;回车&gt;</span><br><span class="line"></span><br><span class="line">  6. 要禁用忽略大小写，请输入： :set noic</span><br><span class="line"></span><br><span class="line">提示：要移除匹配项的高亮显示，请输入：  :nohlsearch</span><br><span class="line">提示：如果您想要仅在一次查找时忽略字母大小写，您可以使用 \c：</span><br><span class="line">      /ignore\c &lt;回车&gt;</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                   第六讲小结</span><br><span class="line"></span><br><span class="line">  1. 输入小写的 o 可以在光标下方打开新的一行并进入插入模式。</span><br><span class="line">     输入大写的 O 可以在光标上方打开新的一行。</span><br><span class="line"></span><br><span class="line">  2. 输入小写的 a 可以在光标所在位置之后插入文本。</span><br><span class="line">     输入大写的 A 可以在光标所在行的行末之后插入文本。</span><br><span class="line"></span><br><span class="line">  3. e 命令可以使光标移动到单词末尾。</span><br><span class="line"></span><br><span class="line">  4. 操作符 y 复制文本，p 粘贴先前复制的文本。</span><br><span class="line"></span><br><span class="line">  5. 输入大写的 R 将进入替换模式，直至按 &lt;ESC&gt; 键回到正常模式。</span><br><span class="line"></span><br><span class="line">  6. 输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下：</span><br><span class="line">      &#x27;ic&#x27; &#x27;ignorecase&#x27;    查找时忽略字母大小写</span><br><span class="line">    &#x27;is&#x27; &#x27;incsearch&#x27;    查找短语时显示部分匹配</span><br><span class="line">    &#x27;hls&#x27; &#x27;hlsearch&#x27;    高亮显示所有的匹配短语</span><br><span class="line">     选项名可以用完整版本，也可以用缩略版本。</span><br><span class="line"></span><br><span class="line">  7. 在选项前加上 no 可以关闭选项：  :set noic</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">              第七讲第一节：获取帮助信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              ** 使用在线帮助系统 **</span><br><span class="line"></span><br><span class="line">  Vim 拥有一个细致全面的在线帮助系统。要启动该帮助系统，请选择如下三种方</span><br><span class="line">  法之一：</span><br><span class="line">    - 按下 &lt;HELP&gt; 键 (如果键盘上有的话)</span><br><span class="line">    - 按下 &lt;F1&gt; 键 (如果键盘上有的话)</span><br><span class="line">    - 输入    :help &lt;回车&gt;</span><br><span class="line"></span><br><span class="line">  请阅读帮助窗口中的文字以了解帮助是如何工作的。</span><br><span class="line">  输入 CTRL-W CTRL-W   可以使您在窗口之间跳转。</span><br><span class="line">  输入 :q &lt;回车&gt; 可以关闭帮助窗口。</span><br><span class="line"></span><br><span class="line">  提供一个正确的参数给&quot;:help&quot;命令，您可以找到关于该主题的帮助。请试验以</span><br><span class="line">  下参数(可别忘了按回车键哦)：</span><br><span class="line"></span><br><span class="line">    :help w</span><br><span class="line">    :help c_CTRL-D</span><br><span class="line">    :help insert-index</span><br><span class="line">    :help user-manual</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">              第七讲第二节：创建启动脚本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              ** 启用 Vim 的特性 **</span><br><span class="line"></span><br><span class="line">  Vim 的功能特性要比 Vi 多得多，但其中大部分都没有缺省启用。为了使用更多的</span><br><span class="line">  特性，您得创建一个 vimrc 文件。</span><br><span class="line"></span><br><span class="line">  1. 开始编辑 vimrc 文件，具体命令取决于您所使用的操作系统：</span><br><span class="line">        :edit ~/.vimrc        这是 Unix 系统所使用的命令</span><br><span class="line">        :edit $VIM/_vimrc    这是 MS-Windows 系统所使用的命令</span><br><span class="line"></span><br><span class="line">  2. 接着读取 vimrc 示例文件的内容：</span><br><span class="line">        :r $VIMRUNTIME/vimrc_example.vim</span><br><span class="line"></span><br><span class="line">  3. 保存文件，命令为：</span><br><span class="line">        :write</span><br><span class="line"></span><br><span class="line">  下次您启动 Vim 时，编辑器就会有了语法高亮的功能。</span><br><span class="line">  您可以把您喜欢的各种设置添加到这个 vimrc 文件中。</span><br><span class="line">  要了解更多信息请输入 :help vimrc-intro</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                第七讲第三节：补全功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          ** 使用 CTRL-D 和 &lt;TAB&gt; 可以进行命令行补全 **</span><br><span class="line"></span><br><span class="line">  1. 请确保 Vim 不是在以兼容模式运行： :set nocp</span><br><span class="line"></span><br><span class="line">  2. 查看一下当前目录下已经存在哪些文件，输入： :!ls   或者  :!dir</span><br><span class="line"></span><br><span class="line">  3. 现在输入一个目录的起始部分，例如输入： :e</span><br><span class="line"></span><br><span class="line">  4. 接着按 CTRL-D 键，Vim 会显示以 e 开始的命令的列表。</span><br><span class="line"></span><br><span class="line">  5. 然后按 &lt;TAB&gt; 键，Vim 会补全命令为 :edit 。</span><br><span class="line"></span><br><span class="line">  6. 现在添加一个空格，以及一个已有文件的文件名的起始部分，例如： :edit FIL</span><br><span class="line"></span><br><span class="line">  7. 接着按 &lt;TAB&gt; 键，Vim 会补全文件名(如果它是惟一匹配的)。</span><br><span class="line"></span><br><span class="line">提示：补全对于许多命令都有效。您只需尝试按 CTRL-D 和 &lt;TAB&gt;。</span><br><span class="line">      它对于 :help 命令非常有用。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                  第七讲小结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1. 输入 :help 或者按 &lt;F1&gt; 键或 &lt;Help&gt; 键可以打开帮助窗口。</span><br><span class="line"></span><br><span class="line">  2. 输入 :help cmd 可以找到关于 cmd 命令的帮助。</span><br><span class="line"></span><br><span class="line">  3. 输入 CTRL-W CTRL-W  可以使您在窗口之间跳转。</span><br><span class="line"></span><br><span class="line">  4. 输入 :q 以关闭帮助窗口</span><br><span class="line"></span><br><span class="line">  5. 您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。</span><br><span class="line"></span><br><span class="line">  6. 当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。</span><br><span class="line">     按 &lt;TAB&gt; 可以使用一个补全。</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vim基本操作学习指南&quot;&gt;&lt;a href=&quot;#Vim基本操作学习指南&quot; class=&quot;headerlink&quot; title=&quot;Vim基本操作学习指南&quot;&gt;&lt;/a&gt;Vim基本操作学习指南&lt;/h1&gt;&lt;p&gt;==================================</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CRF（条件随机场）</title>
    <link href="http://example.com/2021/04/17/CRF%EF%BC%88%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA%EF%BC%89/"/>
    <id>http://example.com/2021/04/17/CRF%EF%BC%88%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA%EF%BC%89/</id>
    <published>2021-04-17T07:35:23.000Z</published>
    <updated>2021-04-17T07:39:38.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CRF-条件随机场"><a href="#CRF-条件随机场" class="headerlink" title="CRF(条件随机场)"></a>CRF(条件随机场)</h1><h5 id="参考视频：https-www-bilibili-com-video-BV19t411R7QU"><a href="#参考视频：https-www-bilibili-com-video-BV19t411R7QU" class="headerlink" title="参考视频：https://www.bilibili.com/video/BV19t411R7QU"></a>参考视频：<a href="https://www.bilibili.com/video/BV19t411R7QU">https://www.bilibili.com/video/BV19t411R7QU</a></h5><h5 id="PDF笔记来源：https-github-com-ws13685555932-machine-learning-derivation"><a href="#PDF笔记来源：https-github-com-ws13685555932-machine-learning-derivation" class="headerlink" title="PDF笔记来源：https://github.com/ws13685555932/machine_learning_derivation"></a>PDF笔记来源：<a href="https://github.com/ws13685555932/machine_learning_derivation">https://github.com/ws13685555932/machine_learning_derivation</a></h5><p><div class="row">    <embed src="../../../../file/17条件随机场.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CRF-条件随机场&quot;&gt;&lt;a href=&quot;#CRF-条件随机场&quot; class=&quot;headerlink&quot; title=&quot;CRF(条件随机场)&quot;&gt;&lt;/a&gt;CRF(条件随机场)&lt;/h1&gt;&lt;h5 id=&quot;参考视频：https-www-bilibili-com-video-B</summary>
      
    
    
    
    <category term="机器学习" scheme="http://example.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/04/16/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/04/16/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-04-16T14:04:16.000Z</published>
    <updated>2021-04-16T14:44:52.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原文链接：https-gitee-com-thinkyoung-learn-regex"><a href="#原文链接：https-gitee-com-thinkyoung-learn-regex" class="headerlink" title="原文链接：https://gitee.com/thinkyoung/learn_regex"></a>原文链接：<a href="https://gitee.com/thinkyoung/learn_regex">https://gitee.com/thinkyoung/learn_regex</a></h2><h2 id="网址推荐：https-regex101-com"><a href="#网址推荐：https-regex101-com" class="headerlink" title="网址推荐：https://regex101.com/"></a>网址推荐：<a href="https://regex101.com/">https://regex101.com/</a></h2><h1 id="正则表达式学习手册中文版"><a href="#正则表达式学习手册中文版" class="headerlink" title="正则表达式学习手册中文版"></a>正则表达式学习手册中文版</h1><h2 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式?"></a>什么是正则表达式?</h2><blockquote><p>正则表达式是一组由字母和符号组成的特殊文本, 它可以用来从文本中找出满足你想要的格式的句子.</p></blockquote><p>一个正则表达式是在一个主体字符串中从左到右匹配字符串时的一种样式.<br>例如”Regular expression”是一个完整的句子, 但我们常使用缩写的术语”regex”或”regexp”.<br>正则表达式可以用来替换文本中的字符串,验证形式,提取字符串等等.</p><p>想象你正在写一个应用, 然后你想设定一个用户命名的规则, 让用户名包含字符,数字,下划线和连字符,以及限制字符的个数,好让名字看起来没那么丑.<br>我们使用以下正则表达式来验证一个用户名:</p><p><img src="/2021/04/16/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/regexp-cn.png" width="80%"></p><center style="font-size:14px;color:#C0C0C0;text-decoration:underline">正则表达式</center><p>以上的正则表达式可以接受 <code>john_doe</code>, <code>jo-hn_doe</code>, <code>john12_as</code>.<br>但不匹配<code>Jo</code>, 因为它包含了大写的字母而且太短了.</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#1-基本匹配">1. 基本匹配</a></li><li><a href="#2-元字符">2. 元字符</a><ul><li><a href="#21-点运算符-">2.1 点运算符 .</a></li><li><a href="#22-字符集">2.2 字符集</a><ul><li><a href="#221-否定字符集">2.2.1 否定字符集</a><ul><li><a href="#23-重复次数">2.3 重复次数</a></li></ul></li><li><a href="#231--号">2.3.1 * 号</a></li><li><a href="#232--号">2.3.2   号</a></li><li><a href="#233--号">2.3.3 ? 号</a><ul><li><a href="#24--号">2.4 {} 号</a></li><li><a href="#25--特征标群">2.5 (…) 特征标群</a></li><li><a href="#26--或运算符">2.6 | 或运算符</a></li><li><a href="#27-转码特殊字符">2.7 转码特殊字符</a></li><li><a href="#28-锚点">2.8 锚点</a></li></ul></li><li><a href="#281--号">2.8.1 ^ 号</a></li><li><a href="#282--号">2.8.2 $ 号</a><ul><li><a href="#正则表达式学习手册中文版">正则表达式学习手册中文版</a></li><li><a href="#什么是正则表达式">什么是正则表达式?</a></li><li><a href="#目录">目录</a></li><li><a href="#1-基本匹配">1. 基本匹配</a></li><li><a href="#2-元字符">2. 元字符</a></li><li><a href="#21-点运算符-">2.1 点运算符 <code>.</code></a></li><li><a href="#22-字符集">2.2 字符集</a></li><li><a href="#221-否定字符集">2.2.1 否定字符集</a></li><li><a href="#23-重复次数">2.3 重复次数</a></li><li><a href="#231--号">2.3.1 <code>*</code> 号</a></li><li><a href="#232--号">2.3.2 <code>+</code> 号</a></li><li><a href="#233--号">2.3.3 <code>?</code> 号</a></li><li><a href="#24--号">2.4 <code>&#123;&#125;</code> 号</a></li><li><a href="#25--特征标群">2.5 <code>(...)</code> 特征标群</a></li><li><a href="#26--或运算符">2.6 <code>|</code> 或运算符</a></li><li><a href="#27-转码特殊字符">2.7 转码特殊字符</a></li><li><a href="#28-锚点">2.8 锚点</a></li><li><a href="#281--号">2.8.1 <code>^</code> 号</a></li><li><a href="#282--号">2.8.2 <code>$</code> 号</a></li><li><a href="#3-简写字符集">3. 简写字符集</a></li><li><a href="#4-前后关联约束前后预查">4. 前后关联约束(前后预查)</a></li><li><a href="#41--前置约束存在">4.1 <code>?=...</code> 前置约束(存在)</a></li><li><a href="#42--前置约束-排除">4.2 <code>?!...</code> 前置约束-排除</a></li><li><a href="#43---后置约束-存在">4.3 <code>?&lt;= ...</code> 后置约束-存在</a></li><li><a href="#44--后置约束-排除">4.4 <code>?&lt;!...</code> 后置约束-排除</a></li><li><a href="#5-标志">5. 标志</a></li><li><a href="#51-忽略大小写-case-insensitive">5.1 忽略大小写 (Case Insensitive)</a></li><li><a href="#52-全局搜索-global-search">5.2 全局搜索 (Global search)</a></li><li><a href="#53-多行修饰符-multiline">5.3 多行修饰符 (Multiline)</a></li><li><a href="#额外补充">额外补充</a></li></ul></li></ul></li></ul></li></ul><h2 id="1-基本匹配"><a href="#1-基本匹配" class="headerlink" title="1. 基本匹配"></a>1. 基本匹配</h2><p>正则表达式其实就是在执行搜索时的格式, 它由一些字母和数字组合而成.<br>例如: 一个正则表达式 <code>the</code>, 它表示一个规则: 由字母<code>t</code>开始,接着是<code>h</code>,再接着是<code>e</code>.</p><pre>"the" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat. </pre><p>正则表达式<code>123</code>匹配字符串<code>123</code>. 它逐个字符的与输入的正则表达式做比较.</p><p>正则表达式是大小写敏感的, 所以<code>The</code>不会匹配<code>the</code>.</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><h2 id="2-元字符"><a href="#2-元字符" class="headerlink" title="2. 元字符"></a>2. 元字符</h2><p>正则表达式主要依赖于元字符.<br>元字符不代表他们本身的字面意思, 他们都有特殊的含义. 一些元字符写在方括号中的时候有一些特殊的意思. 以下是一些元字符的介绍:</p><div class="table-container"><table><thead><tr><th style="text-align:center">元字符</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td>句号匹配任意单个字符除了换行符.</td></tr><tr><td style="text-align:center">[ ]</td><td>字符种类. 匹配方括号内的任意字符.</td></tr><tr><td style="text-align:center"><sup><a href="#fn_ " id="reffn_ "> </a></sup></td><td>否定的字符种类. 匹配除了方括号里的任意字符</td></tr><tr><td style="text-align:center">*</td><td>匹配&gt;=0个重复的在*号之前的字符.</td></tr><tr><td style="text-align:center">+</td><td>匹配&gt;1个重复的+号前的字符.</td></tr><tr><td style="text-align:center">?</td><td>标记?之前的字符为可选.</td></tr><tr><td style="text-align:center">{n,m}</td><td>匹配num个中括号之前的字符 (n &lt;= num &lt;= m).</td></tr><tr><td style="text-align:center">(xyz)</td><td>字符集, 匹配与 xyz 完全相等的字符串.</td></tr><tr><td style="text-align:center">&#124;</td><td>或运算符,匹配符号前或后的字符.</td></tr><tr><td style="text-align:center">&#92;</td><td>转义字符,用于匹配一些保留的字符 <code>[ ] ( ) &#123; &#125; . * + ? ^ $ \ &#124;</code></td></tr><tr><td style="text-align:center">^</td><td>从开始行开始匹配.</td></tr><tr><td style="text-align:center">$</td><td>从末端开始匹配.</td></tr></tbody></table></div><h2 id="2-1-点运算符"><a href="#2-1-点运算符" class="headerlink" title="2.1 点运算符 ."></a>2.1 点运算符 <code>.</code></h2><p><code>.</code>是元字符中最简单的例子.<br><code>.</code>匹配任意单个字符, 但不匹配换行符.<br>例如, 表达式<code>.ar</code>匹配一个任意字符后面跟着是<code>a</code>和<code>r</code>的字符串.</p><pre>".ar" => The <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><h2 id="2-2-字符集"><a href="#2-2-字符集" class="headerlink" title="2.2 字符集"></a>2.2 字符集</h2><p>字符集也叫做字符类.<br>方括号用来指定一个字符集.<br>在方括号中使用连字符来指定字符集的范围.<br>在方括号中的字符集不关心顺序.<br>例如, 表达式<code>[Tt]he</code> 匹配 <code>the</code> 和 <code>The</code>.</p><pre>"[Tt]he" => <a href="#learn-regex"><strong>The</strong></a> car parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p>方括号的句号就表示句号.<br>表达式 <code>ar[.]</code> 匹配 <code>ar.</code>字符串</p><pre>"ar[.]" => A garage is a good place to park a c<a href="#learn-regex"><strong>ar.</strong></a></pre><h3 id="2-2-1-否定字符集"><a href="#2-2-1-否定字符集" class="headerlink" title="2.2.1 否定字符集"></a>2.2.1 否定字符集</h3><p>一般来说 <code>^</code> 表示一个字符串的开头, 但它用在一个方括号的开头的时候, 它表示这个字符集是否定的.<br>例如, 表达式<code>[^c]ar</code> 匹配一个后面跟着<code>ar</code>的除了<code>c</code>的任意字符.</p><pre>"[^c]ar" => The car <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><h2 id="2-3-重复次数"><a href="#2-3-重复次数" class="headerlink" title="2.3 重复次数"></a>2.3 重复次数</h2><p>后面跟着元字符 <code>+</code>, <code>*</code> or <code>?</code> 的, 用来指定匹配子模式的次数.<br>这些元字符在不同的情况下有着不同的意思.</p><h3 id="2-3-1-号"><a href="#2-3-1-号" class="headerlink" title="2.3.1 * 号"></a>2.3.1 <code>*</code> 号</h3><p><code>*</code>号匹配 在<code>*</code>之前的字符出现<code>大于等于0</code>次.<br>例如, 表达式 <code>a*</code> 匹配以0或更多个a开头的字符, 因为有0个这个条件, 其实也就匹配了所有的字符. 表达式<code>[a-z]*</code> 匹配一个行中所有以小写字母开头的字符串.</p><pre>"[a-z]*" => T<a href="#learn-regex"><strong>he</strong></a> <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>parked</strong></a> <a href="#learn-regex"><strong>in</strong></a> <a href="#learn-regex"><strong>the</strong></a> <a href="#learn-regex"><strong>garage</strong></a> #21.</pre><p><code>*</code>字符和<code>.</code>字符搭配可以匹配所有的字符<code>.*</code>.<br><code>*</code>和表示匹配空格的符号<code>\s</code>连起来用, 如表达式<code>\s*cat\s*</code>匹配0或更多个空格开头和0或更多个空格结尾的cat字符串.</p><pre>"\s*cat\s*" => The fat<a href="#learn-regex"><strong> cat </strong></a>sat on the <a href="#learn-regex">con<strong>cat</strong>enation</a>.</pre><h3 id="2-3-2-号"><a href="#2-3-2-号" class="headerlink" title="2.3.2 + 号"></a>2.3.2 <code>+</code> 号</h3><p><code>+</code>号匹配<code>+</code>号之前的字符出现 &gt;=1 次个字符.<br>例如表达式<code>c.+t</code> 匹配以首字母<code>c</code>开头以<code>t</code>结尾,中间跟着任意个字符的字符串.</p><pre>"c.+t" => The fat <a href="#learn-regex"><strong>cat sat on the mat</strong></a>.</pre><h3 id="2-3-3-号"><a href="#2-3-3-号" class="headerlink" title="2.3.3 ? 号"></a>2.3.3 <code>?</code> 号</h3><p>在正则表达式中元字符 <code>?</code> 标记在符号前面的字符为可选, 即出现 0 或 1 次.<br>例如, 表达式 <code>[T]?he</code> 匹配字符串 <code>he</code> 和 <code>The</code>.</p><pre>"[T]he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><pre>"[T]?he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in t<a href="#learn-regex"><strong>he</strong></a> garage.</pre><h2 id="2-4-号"><a href="#2-4-号" class="headerlink" title="2.4 {} 号"></a>2.4 <code>&#123;&#125;</code> 号</h2><p>在正则表达式中 <code>&#123;&#125;</code> 是一个量词, 常用来一个或一组字符可以重复出现的次数.<br>例如,  表达式 <code>[0-9]&#123;2,3&#125;</code> 匹配 2~3 位 0~9 的数字.</p><pre>"[0-9]{2,3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p>我们可以省略第二个参数.<br>例如, <code>[0-9]&#123;2,&#125;</code> 匹配至少两位 0~9 的数字.</p><p>如果逗号也省略掉则表示重复固定的次数.<br>例如, <code>[0-9]&#123;3&#125;</code> 匹配3位数字</p><pre>"[0-9]{2,}" => The number was 9.<a href="#learn-regex"><strong>9997</strong></a> but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><pre>"[0-9]{3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to 10.0.</pre><h2 id="2-5-特征标群"><a href="#2-5-特征标群" class="headerlink" title="2.5 (...) 特征标群"></a>2.5 <code>(...)</code> 特征标群</h2><p>特征标群是一组写在 <code>(...)</code> 中的子模式. 例如之前说的 <code>&#123;&#125;</code> 是用来表示前面一个字符出现指定次数. 但如果在 <code>&#123;&#125;</code> 前加入特征标群则表示整个标群内的字符重复 N 次. 例如, 表达式 <code>(ab)*</code> 匹配连续出现 0 或更多个 <code>ab</code>.</p><p>我们还可以在 <code>()</code> 中用或字符 <code>|</code> 表示或. 例如, <code>(c|g|p)ar</code> 匹配 <code>car</code> 或 <code>gar</code> 或 <code>par</code>.</p><pre>"(c|g|p)ar" => The <a href="#learn-regex"><strong>car</strong></a> is <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><h2 id="2-6-或运算符"><a href="#2-6-或运算符" class="headerlink" title="2.6 | 或运算符"></a>2.6 <code>|</code> 或运算符</h2><p>或运算符就表示或, 用作判断条件.</p><p>例如 <code>(T|t)he|car</code> 匹配 <code>(T|t)he</code> 或 <code>car</code>.</p><pre>"(T|t)he|car" => <a href="#learn-regex"><strong>The</strong></a> <a href="#learn-regex"><strong>car</strong></a> is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><h2 id="2-7-转码特殊字符"><a href="#2-7-转码特殊字符" class="headerlink" title="2.7 转码特殊字符"></a>2.7 转码特殊字符</h2><p>反斜线 <code>\</code> 在表达式中用于转码紧跟其后的字符. 用于指定 <code>&#123; &#125; [ ] / \ + * . $ ^ | ?</code> 这些特殊字符. 如果想要匹配这些特殊字符则要在其前面加上反斜线 <code>\</code>.</p><p>例如 <code>.</code> 是用来匹配除换行符外的所有字符的. 如果想要匹配句子中的 <code>.</code> 则要写成 <code>\.</code>.</p><pre>"(f|c|m)at\.?" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> sat on the <a href="#learn-regex"><strong>mat.</strong></a></pre><h2 id="2-8-锚点"><a href="#2-8-锚点" class="headerlink" title="2.8 锚点"></a>2.8 锚点</h2><p>在正则表达式中, 想要匹配指定开头或结尾的字符串就要使用到锚点. <code>^</code> 指定开头, <code>$</code> 指定结尾.</p><h3 id="2-8-1-号"><a href="#2-8-1-号" class="headerlink" title="2.8.1 ^ 号"></a>2.8.1 <code>^</code> 号</h3><p><code>^</code> 用来检查匹配的字符串是否在所匹配字符串的开头.</p><p>例如, 在 <code>abc</code> 中使用表达式 <code>^a</code> 会得到结果 <code>a</code>. 但如果使用 <code>^b</code> 将匹配不到任何结果. 应为在字符串 <code>abc</code> 中并不是以 <code>b</code> 开头.</p><p>例如, <code>^(T|t)he</code> 匹配以 <code>The</code> 或 <code>the</code> 开头的字符串.</p><pre>"(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><pre>"^(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><h3 id="2-8-2-号"><a href="#2-8-2-号" class="headerlink" title="2.8.2 $ 号"></a>2.8.2 <code>$</code> 号</h3><p>同理于 <code>^</code> 号, <code>$</code> 号用来匹配字符是否是最后一个.</p><p>例如, <code>(at\.)$</code> 匹配以 <code>at.</code> 结尾的字符串.</p><pre>"(at\.)" => The fat c<a href="#learn-regex"><strong>at.</strong></a> s<a href="#learn-regex"><strong>at.</strong></a> on the m<a href="#learn-regex"><strong>at.</strong></a></pre><pre>"(at\.)$" => The fat cat. sat. on the m<a href="#learn-regex"><strong>at.</strong></a></pre><h2 id="3-简写字符集"><a href="#3-简写字符集" class="headerlink" title="3. 简写字符集"></a>3. 简写字符集</h2><p>正则表达式提供一些常用的字符集简写. 如下:</p><div class="table-container"><table><thead><tr><th style="text-align:center">简写</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td>除换行符外的所有字符</td></tr><tr><td style="text-align:center">\w</td><td>匹配所有字母数字, 等同于 <code>[a-zA-Z0-9_]</code></td></tr><tr><td style="text-align:center">\W</td><td>匹配所有非字母数字, 即符号, 等同于: <code>[^\w]</code></td></tr><tr><td style="text-align:center">\d</td><td>匹配数字: <code>[0-9]</code></td></tr><tr><td style="text-align:center">\D</td><td>匹配非数字: <code>[^\d]</code></td></tr><tr><td style="text-align:center">\s</td><td>匹配所有空格字符, 等同于: <code>[\t\n\f\r\p&#123;Z&#125;]</code></td></tr><tr><td style="text-align:center">\S</td><td>匹配所有非空格字符: <code>[^\s]</code></td></tr></tbody></table></div><h2 id="4-前后关联约束-前后预查"><a href="#4-前后关联约束-前后预查" class="headerlink" title="4. 前后关联约束(前后预查)"></a>4. 前后关联约束(前后预查)</h2><p>前置约束和后置约束都属于<strong>非捕获簇</strong>(用于匹配不在匹配列表中的格式).<br>前置约束用于判断所匹配的格式是否在另一个确定的格式之后.</p><p>例如, 我们想要获得所有跟在 <code>$</code> 符号后的数字, 我们可以使用正向向后约束 <code>(?&lt;=\$)[0-9\.]*</code>.<br>这个表达式匹配 <code>$</code> 开头, 之后跟着 <code>0,1,2,3,4,5,6,7,8,9,.</code> 这些字符可以出现大于等于 0 次.</p><p>前后关联约束如下:</p><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">?=</td><td>前置约束-存在</td></tr><tr><td style="text-align:center">?!</td><td>前置约束-排除</td></tr><tr><td style="text-align:center">?&lt;=</td><td>后置约束-存在</td></tr><tr><td style="text-align:center">?&lt;!</td><td>后置约束-排除</td></tr></tbody></table></div><h3 id="4-1-前置约束-存在"><a href="#4-1-前置约束-存在" class="headerlink" title="4.1 ?=... 前置约束(存在)"></a>4.1 <code>?=...</code> 前置约束(存在)</h3><p><code>?=...</code> 前置约束(存在), 表示第一部分表达式必须跟在 <code>?=...</code>定义的表达式之后.</p><p>返回结果只瞒住第一部分表达式.<br>定义一个前置约束(存在)要使用 <code>()</code>. 在括号内部使用一个问号和等号: <code>(?=...)</code>. </p><p>前置约束的内容写在括号中的等号后面.<br>例如, 表达式 <code>[T|t]he(?=\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>, 在括号中我们又定义了前置约束(存在) <code>(?=\sfat)</code> ,即 <code>The</code> 和 <code>the</code> 后面紧跟着 <code>(空格)fat</code>.</p><pre>"[T|t]he(?=\sfat)" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><h3 id="4-2-前置约束-排除"><a href="#4-2-前置约束-排除" class="headerlink" title="4.2 ?!... 前置约束-排除"></a>4.2 <code>?!...</code> 前置约束-排除</h3><p>前置约束-排除 <code>?!</code> 用于筛选所有匹配结果, 筛选条件为 其后不跟随着定义的格式<br><code>前置约束-排除</code>  定义和 <code>前置约束(存在)</code> 一样, 区别就是 <code>=</code> 替换成 <code>!</code> 也就是 <code>(?!...)</code>. </p><p>表达式 <code>[T|t]he(?!\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>, 且其后不跟着 <code>(空格)fat</code>.</p><pre>"[T|t]he(?!\sfat)" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><h3 id="4-3-lt-后置约束-存在"><a href="#4-3-lt-后置约束-存在" class="headerlink" title="4.3 ?&lt;= ... 后置约束-存在"></a>4.3 <code>?&lt;= ...</code> 后置约束-存在</h3><p>后置约束-存在 记作<code>(?&lt;=...)</code> 用于筛选所有匹配结果, 筛选条件为 其前跟随着定义的格式.<br>例如, 表达式 <code>(?&lt;=[T|t]he\s)(fat|mat)</code> 匹配 <code>fat</code> 和 <code>mat</code>, 且其前跟着 <code>The</code> 或 <code>the</code>.</p><pre>"(?<=[T|t]he\s)(fat|mat)" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the <a href="#learn-regex"><strong>mat</strong></a>.</=[T|t]he\s)(fat|mat)"></pre><h3 id="4-4-lt-后置约束-排除"><a href="#4-4-lt-后置约束-排除" class="headerlink" title="4.4 ?&lt;!... 后置约束-排除"></a>4.4 <code>?&lt;!...</code> 后置约束-排除</h3><p>后置约束-排除 记作 <code>(?&lt;!...)</code> 用于筛选所有匹配结果, 筛选条件为 其前不跟着定义的格式.<br>例如, 表达式 <code>(?&lt;!(T|t)he\s)(cat)</code> 匹配 <code>cat</code>, 且其前不跟着 <code>The</code> 或 <code>the</code>.</p><pre>"(?&lt;![T|t]he\s)(cat)" => The cat sat on <a href="#learn-regex"><strong>cat</strong></a>.</pre><h2 id="5-标志"><a href="#5-标志" class="headerlink" title="5. 标志"></a>5. 标志</h2><p>标志也叫修饰语, 因为它可以用来修改表达式的搜索结果.<br>这些标志可以任意的组合使用, 它也是整个正则表达式的一部分.</p><div class="table-container"><table><thead><tr><th style="text-align:center">标志</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">i</td><td>忽略大小写.</td></tr><tr><td style="text-align:center">g</td><td>全局搜索.</td></tr><tr><td style="text-align:center">m</td><td>多行的: 锚点元字符 <code>^</code> <code>$</code> 工作范围在每行的起始.</td></tr></tbody></table></div><h3 id="5-1-忽略大小写-Case-Insensitive"><a href="#5-1-忽略大小写-Case-Insensitive" class="headerlink" title="5.1 忽略大小写 (Case Insensitive)"></a>5.1 忽略大小写 (Case Insensitive)</h3><p>修饰语 <code>i</code> 用于忽略大小写.<br>例如, 表达式 <code>/The/gi</code> 表示在全局搜索 <code>The</code>, 在后面的 <code>i</code> 将其条件修改为忽略大小写, 则变成搜索 <code>the</code> 和 <code>The</code>, <code>g</code> 表示全局搜索.</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><pre>"/The/gi" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><h3 id="5-2-全局搜索-Global-search"><a href="#5-2-全局搜索-Global-search" class="headerlink" title="5.2 全局搜索 (Global search)"></a>5.2 全局搜索 (Global search)</h3><p>修饰符 <code>g</code> 常用于执行一个全局搜索匹配, 即(不仅仅返回第一个匹配的, 而是返回全部).<br>例如, 表达式 <code>/.(at)/g</code> 表示搜索 任意字符(除了换行) + <code>at</code>, 并返回全部结果.</p><pre>"/.(at)/" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the mat.</pre><pre>"/.(at)/g" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> <a href="#learn-regex"><strong>sat</strong></a> on the <a href="#learn-regex"><strong>mat</strong></a>.</pre><h3 id="5-3-多行修饰符-Multiline"><a href="#5-3-多行修饰符-Multiline" class="headerlink" title="5.3 多行修饰符 (Multiline)"></a>5.3 多行修饰符 (Multiline)</h3><p>多行修饰符 <code>m</code> 常用于执行一个多行匹配.</p><p>像之前介绍的 <code>(^,$)</code> 用于检查格式是否是在待检测字符串的开头或结尾. 但我们如果想要它在每行的开头和结尾生效, 我们需要用到多行修饰符 <code>m</code>.</p><p>例如, 表达式 <code>/at(.)?$/gm</code> 表示在待检测字符串每行的末尾搜索 <code>at</code>后跟一个或多个 <code>.</code> 的字符串, 并返回全部结果.</p><pre>"/.at(.)?$/" => The fat                cat sat                on the <a href="#learn-regex"><strong>mat.</strong></a></pre><pre>"/.at(.)?$/gm" => The <a href="#learn-regex"><strong>fat</strong></a>                  cat <a href="#learn-regex"><strong>sat</strong></a>                  on the <a href="#learn-regex"><strong>mat.</strong></a></pre><h2 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h2><ul><li><em>正整数</em>: <code>^\d+$</code></li><li><em>负整数</em>: <code>^-\d+$</code></li><li><em>手机国家号</em>: <code>^+?[\d\s]&#123;3,&#125;$</code></li><li><em>手机号</em>: <code>^+?[\d\s]+(?[\d\s]&#123;10,&#125;$</code></li><li><em>整数</em>: <code>^-?\d+$</code></li><li><em>用户名</em>: <code>^[\w\d_.]&#123;4,16&#125;$</code></li><li><em>数字和英文字母</em>: <code>^[a-zA-Z0-9]*$</code></li><li><em>数字和应为字母和空格</em>: <code>^[a-zA-Z0-9 ]*$</code></li><li><em>密码</em>: <code>^(?=^.&#123;6,&#125;$)((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.*$</code></li><li><em>邮箱</em>: <code>^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]&#123;2,4&#125;)*$</code></li><li><em>IP4 地址</em>: <code>^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$</code></li><li><em>纯小写字母</em>: <code>^([a-z])*$</code></li><li><em>纯大写字母</em>: <code>^([A-Z])*$</code></li><li><em>URL</em>: <code>^(((http|https|ftp):\/\/)?([[a-zA-Z0-9]\-\.])+(\.)([[a-zA-Z0-9]])&#123;2,4&#125;([[a-zA-Z0-9]\/+=%&amp;_\.~?\-]*))*$</code></li><li><em>VISA 信用卡号</em>: <code>^(4[0-9]&#123;12&#125;(?:[0-9]&#123;3&#125;)?)*$</code></li><li><em>日期 (MM/DD/YYYY)</em>: <code>^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)?[0-9]&#123;2&#125;$</code></li><li><em>日期 (YYYY/MM/DD)</em>: <code>^(19|20)?[0-9]&#123;2&#125;[- /.](0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])$</code></li><li><em>MasterCard 信用卡号</em>: <code>^(5[1-5][0-9]&#123;14&#125;)*$</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;原文链接：https-gitee-com-thinkyoung-learn-regex&quot;&gt;&lt;a href=&quot;#原文链接：https-gitee-com-thinkyoung-learn-regex&quot; class=&quot;headerlink&quot; title=&quot;原文链接：h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Code-Word2Vec</title>
    <link href="http://example.com/2021/04/15/Code-Word2Vec/"/>
    <id>http://example.com/2021/04/15/Code-Word2Vec/</id>
    <published>2021-04-15T02:31:14.000Z</published>
    <updated>2021-04-15T02:36:43.749Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/04/15/Code-Word2Vec/img1.png" width="80%"></p><center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 1</center><h1 id="Word2Vec"><a href="#Word2Vec" class="headerlink" title="Word2Vec"></a>Word2Vec</h1><h2 id="来源：https-github-com-graykode-nlp-tutorial"><a href="#来源：https-github-com-graykode-nlp-tutorial" class="headerlink" title="来源：https://github.com/graykode/nlp-tutorial"></a>来源：<a href="https://github.com/graykode/nlp-tutorial">https://github.com/graykode/nlp-tutorial</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># code by Tae Hwan Jung @graykode</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_batch</span>():</span><br><span class="line">    random_inputs = []</span><br><span class="line">    random_labels = []</span><br><span class="line">    random_index = np.random.choice(<span class="built_in">range</span>(<span class="built_in">len</span>(skip_grams)), batch_size, replace=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> random_index:</span><br><span class="line">        random_inputs.append(np.eye(voc_size)[skip_grams[i][<span class="number">0</span>]])  <span class="comment"># target</span></span><br><span class="line">        random_labels.append(skip_grams[i][<span class="number">1</span>])  <span class="comment"># context word</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> random_inputs, random_labels</span><br><span class="line"></span><br><span class="line"><span class="comment"># Model</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Word2Vec</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Word2Vec, self).__init__()</span><br><span class="line">        <span class="comment"># W and WT is not Traspose relationship</span></span><br><span class="line">        self.W = nn.Linear(voc_size, embedding_size, bias=<span class="literal">False</span>) <span class="comment"># voc_size &gt; embedding_size Weight</span></span><br><span class="line">        self.WT = nn.Linear(embedding_size, voc_size, bias=<span class="literal">False</span>) <span class="comment"># embedding_size &gt; voc_size Weight</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, X</span>):</span><br><span class="line">        <span class="comment"># X : [batch_size, voc_size]</span></span><br><span class="line">        hidden_layer = self.W(X) <span class="comment"># hidden_layer : [batch_size, embedding_size]</span></span><br><span class="line">        output_layer = self.WT(hidden_layer) <span class="comment"># output_layer : [batch_size, voc_size]</span></span><br><span class="line">        <span class="keyword">return</span> output_layer</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    batch_size = <span class="number">2</span> <span class="comment"># mini-batch size</span></span><br><span class="line">    embedding_size = <span class="number">2</span> <span class="comment"># embedding size</span></span><br><span class="line"></span><br><span class="line">    sentences = [<span class="string">&quot;apple banana fruit&quot;</span>, <span class="string">&quot;banana orange fruit&quot;</span>, <span class="string">&quot;orange banana fruit&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;dog cat animal&quot;</span>, <span class="string">&quot;cat monkey animal&quot;</span>, <span class="string">&quot;monkey dog animal&quot;</span>]</span><br><span class="line"></span><br><span class="line">    word_sequence = <span class="string">&quot; &quot;</span>.join(sentences).split()</span><br><span class="line">    word_list = <span class="string">&quot; &quot;</span>.join(sentences).split()</span><br><span class="line">    word_list = <span class="built_in">list</span>(<span class="built_in">set</span>(word_list))</span><br><span class="line">    word_dict = &#123;w: i <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(word_list)&#125;</span><br><span class="line">    voc_size = <span class="built_in">len</span>(word_list)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Make skip gram of one size window</span></span><br><span class="line">    skip_grams = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(word_sequence) - <span class="number">1</span>):</span><br><span class="line">        target = word_dict[word_sequence[i]]</span><br><span class="line">        context = [word_dict[word_sequence[i - <span class="number">1</span>]], word_dict[word_sequence[i + <span class="number">1</span>]]]</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> context:</span><br><span class="line">            skip_grams.append([target, w])</span><br><span class="line"></span><br><span class="line">    model = Word2Vec()</span><br><span class="line"></span><br><span class="line">    criterion = nn.CrossEntropyLoss()</span><br><span class="line">    optimizer = optim.Adam(model.parameters(), lr=<span class="number">0.001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Training</span></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5000</span>):</span><br><span class="line">        input_batch, target_batch = random_batch()</span><br><span class="line">        input_batch = torch.Tensor(input_batch)</span><br><span class="line">        target_batch = torch.LongTensor(target_batch)</span><br><span class="line"></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        output = model(input_batch)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># output : [batch_size, voc_size], target_batch : [batch_size] (LongTensor, not one-hot)</span></span><br><span class="line">        loss = criterion(output, target_batch)</span><br><span class="line">        <span class="keyword">if</span> (epoch + <span class="number">1</span>) % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Epoch:&#x27;</span>, <span class="string">&#x27;%04d&#x27;</span> % (epoch + <span class="number">1</span>), <span class="string">&#x27;cost =&#x27;</span>, <span class="string">&#x27;&#123;:.6f&#125;&#x27;</span>.<span class="built_in">format</span>(loss))</span><br><span class="line"></span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, label <span class="keyword">in</span> <span class="built_in">enumerate</span>(word_list):</span><br><span class="line">        W, WT = model.parameters()</span><br><span class="line">        x, y = W[<span class="number">0</span>][i].item(), W[<span class="number">1</span>][i].item()</span><br><span class="line">        plt.scatter(x, y)</span><br><span class="line">        plt.annotate(label, xy=(x, y), xytext=(<span class="number">5</span>, <span class="number">2</span>), textcoords=<span class="string">&#x27;offset points&#x27;</span>, ha=<span class="string">&#x27;right&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/04/15/Code-Word2Vec/img1.png&quot; width=&quot;80%&quot;&gt;&lt;/p&gt;
&lt;center style=&quot;font-size:14px;color:#C0C0C0;text-decoration:underline&quot;&gt;图 1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Code-NNLM</title>
    <link href="http://example.com/2021/04/15/Code-NNLM/"/>
    <id>http://example.com/2021/04/15/Code-NNLM/</id>
    <published>2021-04-15T02:22:43.000Z</published>
    <updated>2021-04-15T02:36:52.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NNLM"><a href="#NNLM" class="headerlink" title="NNLM"></a>NNLM</h1><h2 id="来源：https-github-com-graykode-nlp-tutorial"><a href="#来源：https-github-com-graykode-nlp-tutorial" class="headerlink" title="来源：https://github.com/graykode/nlp-tutorial"></a>来源：<a href="https://github.com/graykode/nlp-tutorial">https://github.com/graykode/nlp-tutorial</a></h2><p><img src="/2021/04/15/Code-NNLM/img1.png" width="80%"></p><center style="font-size:14px;color:#C0C0C0;text-decoration:underline">NNLM 网络结构图</center><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %%</span></span><br><span class="line"><span class="comment"># code by Tae Hwan Jung @graykode</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_batch</span>():</span><br><span class="line">    input_batch = []</span><br><span class="line">    target_batch = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sen <span class="keyword">in</span> sentences:</span><br><span class="line">        word = sen.split() <span class="comment"># space tokenizer</span></span><br><span class="line">        <span class="built_in">input</span> = [word_dict[n] <span class="keyword">for</span> n <span class="keyword">in</span> word[:-<span class="number">1</span>]] <span class="comment"># create (1~n-1) as input</span></span><br><span class="line">        target = word_dict[word[-<span class="number">1</span>]] <span class="comment"># create (n) as target, We usually call this &#x27;casual language model&#x27;</span></span><br><span class="line"></span><br><span class="line">        input_batch.append(<span class="built_in">input</span>)</span><br><span class="line">        target_batch.append(target)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> input_batch, target_batch</span><br><span class="line"></span><br><span class="line"><span class="comment"># Model</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NNLM</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(NNLM, self).__init__()</span><br><span class="line">        self.C = nn.Embedding(n_class, m)</span><br><span class="line">        self.H = nn.Linear(n_step * m, n_hidden, bias=<span class="literal">False</span>)</span><br><span class="line">        self.d = nn.Parameter(torch.ones(n_hidden))</span><br><span class="line">        self.U = nn.Linear(n_hidden, n_class, bias=<span class="literal">False</span>)</span><br><span class="line">        self.W = nn.Linear(n_step * m, n_class, bias=<span class="literal">False</span>)</span><br><span class="line">        self.b = nn.Parameter(torch.ones(n_class))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, X</span>):</span><br><span class="line">        X = self.C(X) <span class="comment"># X : [batch_size, n_step, n_class]</span></span><br><span class="line">        X = X.view(-<span class="number">1</span>, n_step * m) <span class="comment"># [batch_size, n_step * n_class]</span></span><br><span class="line">        tanh = torch.tanh(self.d + self.H(X)) <span class="comment"># [batch_size, n_hidden]</span></span><br><span class="line">        output = self.b + self.W(X) + self.U(tanh) <span class="comment"># [batch_size, n_class]</span></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    n_step = <span class="number">2</span> <span class="comment"># number of steps, n-1 in paper</span></span><br><span class="line">    n_hidden = <span class="number">2</span> <span class="comment"># number of hidden size, h in paper</span></span><br><span class="line">    m = <span class="number">2</span> <span class="comment"># embedding size, m in paper</span></span><br><span class="line"></span><br><span class="line">    sentences = [<span class="string">&quot;i like dog&quot;</span>, <span class="string">&quot;i love coffee&quot;</span>, <span class="string">&quot;i hate milk&quot;</span>]</span><br><span class="line"></span><br><span class="line">    word_list = <span class="string">&quot; &quot;</span>.join(sentences).split()</span><br><span class="line">    word_list = <span class="built_in">list</span>(<span class="built_in">set</span>(word_list))</span><br><span class="line">    word_dict = &#123;w: i <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(word_list)&#125;</span><br><span class="line">    number_dict = &#123;i: w <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(word_list)&#125;</span><br><span class="line">    n_class = <span class="built_in">len</span>(word_dict)  <span class="comment"># number of Vocabulary</span></span><br><span class="line"></span><br><span class="line">    model = NNLM()</span><br><span class="line"></span><br><span class="line">    criterion = nn.CrossEntropyLoss()</span><br><span class="line">    optimizer = optim.Adam(model.parameters(), lr=<span class="number">0.001</span>)</span><br><span class="line"></span><br><span class="line">    input_batch, target_batch = make_batch()</span><br><span class="line">    input_batch = torch.LongTensor(input_batch)</span><br><span class="line">    target_batch = torch.LongTensor(target_batch)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Training</span></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5000</span>):</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        output = model(input_batch)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># output : [batch_size, n_class], target_batch : [batch_size]</span></span><br><span class="line">        loss = criterion(output, target_batch)</span><br><span class="line">        <span class="keyword">if</span> (epoch + <span class="number">1</span>) % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Epoch:&#x27;</span>, <span class="string">&#x27;%04d&#x27;</span> % (epoch + <span class="number">1</span>), <span class="string">&#x27;cost =&#x27;</span>, <span class="string">&#x27;&#123;:.6f&#125;&#x27;</span>.<span class="built_in">format</span>(loss))</span><br><span class="line"></span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Predict</span></span><br><span class="line">    predict = model(input_batch).data.<span class="built_in">max</span>(<span class="number">1</span>, keepdim=<span class="literal">True</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Test</span></span><br><span class="line">    <span class="built_in">print</span>([sen.split()[:<span class="number">2</span>] <span class="keyword">for</span> sen <span class="keyword">in</span> sentences], <span class="string">&#x27;-&gt;&#x27;</span>, [number_dict[n.item()] <span class="keyword">for</span> n <span class="keyword">in</span> predict.squeeze()])</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NNLM&quot;&gt;&lt;a href=&quot;#NNLM&quot; class=&quot;headerlink&quot; title=&quot;NNLM&quot;&gt;&lt;/a&gt;NNLM&lt;/h1&gt;&lt;h2 id=&quot;来源：https-github-com-graykode-nlp-tutorial&quot;&gt;&lt;a href=&quot;#来源：h</summary>
      
    
    
    
    <category term="模型代码" scheme="http://example.com/categories/%E6%A8%A1%E5%9E%8B%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="NNLM" scheme="http://example.com/tags/NNLM/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习链接</title>
    <link href="http://example.com/2021/04/13/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E9%93%BE%E6%8E%A5/"/>
    <id>http://example.com/2021/04/13/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E9%93%BE%E6%8E%A5/</id>
    <published>2021-04-13T03:58:01.000Z</published>
    <updated>2021-04-13T05:21:08.862Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nmap常用指令和教程："><a href="#Nmap常用指令和教程：" class="headerlink" title="Nmap常用指令和教程："></a>Nmap常用指令和教程：</h3><p><a href="https://www.sqlsec.com/2017/07/nmap.html">https://www.sqlsec.com/2017/07/nmap.html</a></p><h3 id="dsniff-和-Ettercap-和-bettercap-详解-网络嗅探工具包："><a href="#dsniff-和-Ettercap-和-bettercap-详解-网络嗅探工具包：" class="headerlink" title="dsniff 和 Ettercap 和 bettercap 详解 - 网络嗅探工具包："></a>dsniff 和 Ettercap 和 bettercap 详解 - 网络嗅探工具包：</h3><p><a href="https://blog.csdn.net/freeking101/article/details/73105561">https://blog.csdn.net/freeking101/article/details/73105561</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Nmap常用指令和教程：&quot;&gt;&lt;a href=&quot;#Nmap常用指令和教程：&quot; class=&quot;headerlink&quot; title=&quot;Nmap常用指令和教程：&quot;&gt;&lt;/a&gt;Nmap常用指令和教程：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.sqlsec.co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VQA相关方法的简单综述</title>
    <link href="http://example.com/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/"/>
    <id>http://example.com/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/</id>
    <published>2021-04-11T09:40:04.000Z</published>
    <updated>2021-04-11T10:24:33.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VQA相关方法的简单综述"><a href="#VQA相关方法的简单综述" class="headerlink" title="VQA相关方法的简单综述"></a>VQA相关方法的简单综述</h1><h5 id="原文链接："><a href="#原文链接：" class="headerlink" title="原文链接："></a>原文链接：</h5><p><a href="https://zhuanlan.zhihu.com/p/59530688">https://zhuanlan.zhihu.com/p/59530688</a></p><p><a href="https://www.cnblogs.com/limitlessun/p/13532857.html">https://www.cnblogs.com/limitlessun/p/13532857.html</a></p><hr><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>VQA指的是，给定一张图片和一个与该图片相关的自然语言问题，计算机能产生一个正确的回答。 显然，这是一个典型的多模态问题，融合了CV与NLP的技术，计算机需要同时学会理解图像和文字。正因如此，直到相关技术取得突破式发展的2015年，VQA的概念才被正式提出。</p><p>可见，VQA仍然是一个非常新颖的研究方向，但它很容易让人联想到其他两个已经被研究较久的领域：文本QA和Image Captioning。</p><p>文本QA即纯文本的回答，计算机根据文本形式的材料回答问题。与之相比，VQA把材料换成了图片形式，从而引入了一系列新的问题：</p><ul><li>图像是更高维度的数据，比纯文本具有更多的噪声。</li><li>文本是结构化的，也具备一定的语法规则，而图像则不然。</li><li>文本本身即是对真实世界的高度抽象，而图像的抽象程度较低，可以展现更丰富的信息，同时也更难被计算机“理解”。</li></ul><p>与Image Captioning这种看图说话的任务相比，VQA的难度也显得更大。因为Image Captioning更像是把图像“翻译”成文本，只需把图像内容映射成文本再加以结构化整理即可，而VQA需要更好地理解图像内容并进行一定的推理，有时甚至还需要借助外部的知识库。 然而，VQA的评估方法更为简单，因为答案往往是客观并简短的，很容易与ground truth对比判断是否准确，不像Image Captioning需要对长句子做评估。</p><p>总之，VQA是一个非常具有挑战性的问题，正处于方兴未艾的阶段，有许多“坑”正等着未来的研究者去填。</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><p>吴琦等人的综述发表于2016年，所以仅能对2015至2016年的相关工作进行总结。即便如此，我们还是能看到，短短两年的时间，VQA领域就涌现了不少的成果。 吴琦等人把这些方法分为四大类，分别是Joint embedding approaches、Attention mechanisms、Compositional Models和Models using external knowledge base 。</p><h3 id="Joint-embedding-approaches"><a href="#Joint-embedding-approaches" class="headerlink" title="Joint embedding approaches"></a>Joint embedding approaches</h3><p>Joint embedding是处理多模态问题时的经典思路，在这里指对图像和问题进行联合编码。该方法的示意图为：<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img1.png" alt></p><p>首先，图像和问题分别由CNN和RNN进行第一次编码得到各自的特征，随后共同输入到另一个编码器中得到joint embedding，最后通过解码器输出答案。 值得注意的是，有的工作把VQA视为序列生成问题，而有的则把VQA简化为一个答案范围可预知的分类问题。在前者的设定下，解码器是一个RNN，输出长度不等的序列；后者的解码器则是一个分类器，从预定义的词汇表中选择答案。</p><h3 id="Attention-mechanisms"><a href="#Attention-mechanisms" class="headerlink" title="Attention mechanisms"></a>Attention mechanisms</h3><p>attention机制起源于机器翻译问题，目的是让模型动态地调整对输入项各部分的关注度，从而提升模型的“专注力”。而自从Xu等人将attention机制成功运用到Image Captioning中，attention机制在视觉任务中受到越来越多的关注，应用到VQA中也是再自然不过。下面就是将attention机制应用到上个方法中的示意图。<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img2.png" alt></p><p>相关的工作表明，加入attention机制能获得明显的提升，从直观上也比较容易理解：在attention机制的作用下，模型在根据图像和问题进行推断时不得不强制判断“该往哪看”，比起原本盲目地全局搜索，模型能够更有效地捕捉关键图像部位。</p><h3 id="Compositional-Models"><a href="#Compositional-Models" class="headerlink" title="Compositional Models"></a>Compositional Models</h3><p>Compositional Models的核心思想是将设计一种模块化的模型。</p><p>这方面的一个典型代表是Andreas等人的Neural Module Networks。其最大的特点是根据问题的类型动态组装模块来产生答案。<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img3.png" alt></p><p>比如，在上面的例子中，当面对 What color is his tie? 这个问题时，模型首先利用parser对问题进行语法解析，接着判断出需要用到attend和classify这两个模块，然后判断出这两个模块的连接方式。最终，模型的推理过程是，先把注意力集中到tie上，然后对其color进行分类，得出答案。<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img4.png" alt></p><p>而在另一个例子中，当面对 Is there a red shape above a circle? 这种更为复杂的问题时，模型选择的模块也自动变得复杂了许多。</p><p>吴琦等人列举的另一个典型代表是Xiong等人的Dynamic Memory Networks。该网络由四个主要的模块构成，分别是表征图像的input module、表征问题的question module、作为内存的episodic memory module和产生答案的answer module。 模型运作过程如下图。<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img5.jpg" alt></p><h3 id="Models-using-external-knowledge-base"><a href="#Models-using-external-knowledge-base" class="headerlink" title="Models using external knowledge base"></a>Models using external knowledge base</h3><p>虽然VQA要解决的是看图回答问题的任务，但实际上，很多问题往往需要具备一定的先验知识才能回答。例如，为了回答“图上有多少只哺乳动物”这样的问题，模型必须得知道“哺乳动物”的定义，而不是单纯理解图像内容。因此，把知识库加入VQA模型中就成了一个很有前景的研究方向。 这方面做得比较好的工作是吴琦作为一作发表的另一篇论文Ask Me Anything: Free-form Visual Question Answering Based on Knowledge from External Sources。 该工作的模型框架如下。</p><p><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img6.jpg" alt></p><p>模型虽然看似复杂，但理解起来不外乎以下几个要点：</p><ul><li>红色部分表示，对图像进行多标签分类，得到图像标签（attribute）。</li><li>蓝色部分表示，把上述图像标签中最明显的5个标签输入知识库DBpedia中检索出相关内容，然后利用Doc2Vec进行编码。</li><li>绿色部分表示，利用上述图像标签生成多个图像描述（caption），将这一组图像描述编码。</li><li>以上三项同时输入到一个Seq2Seq模型中作为其初始状态，然后该Seq2Seq模型将问题进行编码，解码出最终答案，并用MLE的方法进行训练。</li></ul><h3 id="Datasets-and-evaluation"><a href="#Datasets-and-evaluation" class="headerlink" title="Datasets and evaluation"></a>Datasets and evaluation</h3><p>VQA的data至少为一个image、question、answer的三元组。</p><h4 id="DAQUAR："><a href="#DAQUAR：" class="headerlink" title="DAQUAR："></a>DAQUAR：</h4><p>First VQA dataset designed as benchmark，DAtaset for QUestion Answering on Real-world images。1449 RGBD images，795 training，654 testing。有2种问答pairs，一种是使用8种模板合成的，一种是人工标注的。共有12468个问题，6794 training，5674 testing。</p><p><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img7.png" alt></p><h4 id="COCO-QA："><a href="#COCO-QA：" class="headerlink" title="COCO-QA："></a>COCO-QA：</h4><p>123287 images，72783 training，38948 testing。每个image有一个问答pair，由COCO dataset中的image descriptions转换而来<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img8.png" alt></p><h4 id="VQA："><a href="#VQA：" class="headerlink" title="VQA："></a>VQA：</h4><p>使用最广泛的数据集之一，2017年更新为VQA v2.0，包含使用真实图片的VQA-real和卡通图片的VQA-abstract。VQA-real包含123287 training和81424 test images from COCO，由真人提供开放型和是非型问题和多种候选答案，共614163个questions。VQA-abstract包括50000scenes，每个scene对应3个questions<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img9.png" alt></p><h4 id="Visual-Genome："><a href="#Visual-Genome：" class="headerlink" title="Visual Genome："></a>Visual Genome：</h4><p>1.7 million questions/answer pairs，问题包括free-form和region-based两种形式，比VQA-real更具多样性。<br><img src="/2021/04/11/VQA%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%BC%E8%BF%B0/img10.png" alt></p><h4 id="Visual7W："><a href="#Visual7W：" class="headerlink" title="Visual7W："></a>Visual7W：</h4><p>Visual Genome的一个子集。</p><h4 id="Other-datasets："><a href="#Other-datasets：" class="headerlink" title="Other datasets："></a>Other datasets：</h4><p>使用外部知识库的KB-VQA、FVQA，较简单的Diagrams、Shapes。</p><h3 id="Evaluation-Measures"><a href="#Evaluation-Measures" class="headerlink" title="Evaluation Measures"></a>Evaluation Measures</h3><p>为了对answer进行评估，句法和语义的正确性都需要考虑，因此大多数VQA datasets的answer被限制为3个words以下。</p><p><strong>WUPS：</strong> Wu-Palmer Similarity，在taxonomy tree中比较两者的common subsequence，当similarity超过某一阈值就认为是正确答案，一般使用0.9和0.0两种阈值。</p><p>在VQA数据集中，只有当3个以上的人（共10个）提供了该答案，才认为给出的答案是正确的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VQA相关方法的简单综述&quot;&gt;&lt;a href=&quot;#VQA相关方法的简单综述&quot; class=&quot;headerlink&quot; title=&quot;VQA相关方法的简单综述&quot;&gt;&lt;/a&gt;VQA相关方法的简单综述&lt;/h1&gt;&lt;h5 id=&quot;原文链接：&quot;&gt;&lt;a href=&quot;#原文链接：&quot; c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Graph-R-CNN-for-Scene-Graph-Generation</title>
    <link href="http://example.com/2021/04/09/Graph-R-CNN-for-Scene-Graph-Generation/"/>
    <id>http://example.com/2021/04/09/Graph-R-CNN-for-Scene-Graph-Generation/</id>
    <published>2021-04-08T16:04:35.000Z</published>
    <updated>2021-04-08T16:32:22.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Graph-R-CNN-for-Scene-Graph-Generation"><a href="#Graph-R-CNN-for-Scene-Graph-Generation" class="headerlink" title="Graph R-CNN for Scene Graph Generation"></a>Graph R-CNN for Scene Graph Generation</h1><h5 id="论文来源：ECCV-2018"><a href="#论文来源：ECCV-2018" class="headerlink" title="论文来源：ECCV 2018"></a>论文来源：ECCV 2018</h5><h5 id="论文链接：https-openaccess-thecvf-com-content-ECCV-2018-papers-Jianwei-Yang-Graph-R-CNN-for-ECCV-2018-paper-pdf"><a href="#论文链接：https-openaccess-thecvf-com-content-ECCV-2018-papers-Jianwei-Yang-Graph-R-CNN-for-ECCV-2018-paper-pdf" class="headerlink" title="论文链接：https://openaccess.thecvf.com/content_ECCV_2018/papers/Jianwei_Yang_Graph_R-CNN_for_ECCV_2018_paper.pdf"></a>论文链接：<a href="https://openaccess.thecvf.com/content_ECCV_2018/papers/Jianwei_Yang_Graph_R-CNN_for_ECCV_2018_paper.pdf">https://openaccess.thecvf.com/content_ECCV_2018/papers/Jianwei_Yang_Graph_R-CNN_for_ECCV_2018_paper.pdf</a></h5><h5 id="代码链接：https-github-com-jwyang-graph-rcnn-pytorch"><a href="#代码链接：https-github-com-jwyang-graph-rcnn-pytorch" class="headerlink" title="代码链接：https://github.com/jwyang/graph-rcnn.pytorch"></a>代码链接：<a href="https://github.com/jwyang/graph-rcnn.pytorch">https://github.com/jwyang/graph-rcnn.pytorch</a></h5><hr><p>本文提出的三个主要的创新点就是：</p><p>1． Relation Proposal Network（RePN）用来做关系过滤</p><p>2． Attentional Graph Convolutional Network 用来做信息融合</p><p>3． 提出了一个新指标SGGen+，比原来的SGGen更科学</p><p>然后集合这些东西，本文的方法是目前最佳</p><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><script type="math/tex; mode=display">P(\mathcal{S} | \boldsymbol{I})=\overbrace{P(\boldsymbol{V} | \boldsymbol{I})}^{\text {Object Region }} \underbrace{P(\boldsymbol{E} | \boldsymbol{V}, \boldsymbol{I})}_{\text {Pelationship }} \overbrace{P(\boldsymbol{R}, \boldsymbol{O} | \boldsymbol{V}, \boldsymbol{E}, \boldsymbol{I})}^{\text {Graph Labeling }}</script><p>本文的大致研究结构和主流操作一致，如下：</p><p>基本的想法还是按照先找点，再找边，再找点和边的label。找点采用常见的faster-rcnn，这也是大多数工作的做法。</p><h3 id="Relation-Proposal-Network"><a href="#Relation-Proposal-Network" class="headerlink" title="Relation Proposal Network"></a>Relation Proposal Network</h3><p>这里的关系配对，作者采用物体分类概率作为主要的计算依据。一个直观的感觉就是person会和clothes产生关系，而elephant肯定不会和clothes产生关系，本文想利用这种先验知识，首先淘汰掉一批不可能的关系。</p><p>具体的做法肯定是构建一种由object分类概率和subject分类概率决定的函数关系</p><script type="math/tex; mode=display">s_{ij} = f (p^o_i, p^o_j)</script><p>这个分数的高低决定了相关程度。最直观的想法肯定是用一个全连接去做，但是作者认为这样计算量太大。</p><p>所以作者换用如下的方法：</p><script type="math/tex; mode=display">f\left(\boldsymbol{p}_{i}^{o}, \boldsymbol{p}_{j}^{o}\right)=\left\langle\Phi\left(\boldsymbol{p}_{i}^{o}\right), \Psi\left(\boldsymbol{p}_{j}^{o}\right)\right\rangle, i \neq j</script><p>$\Phi(\cdot)$ 和 $\Psi(\cdot)$分别代表在关系中主语和宾语对映射函数。这个分解使得，仅使用$X^o$的两个投影过程，然后执行一次矩阵乘法就能获得分数矩阵$S=\left\{s_{i j}\right\}^{n \times n}$。</p><p>这样只需要两个 MLP，加一个矩阵乘法，这样的计算复杂度非常的小。</p><p>在获得分数矩阵后，我们将其降序排序，然后选择前K对。然后，我们使用非最大抑制(NMS)来过滤出与其他对象有明显重叠的对象对。每个关系都有一对边界框，组合顺序很重要。我们计算两个对象对$\{u, v\}$和$\{p, q\}$ 之间对重叠：</p><script type="math/tex; mode=display">\operatorname{IoU}(\{u, v\},\{p, q\})=\frac{I\left(r_{u}^{o}, r_{p}^{o}\right)+I\left(r_{v}^{o}, r_{q}^{o}\right)}{U\left(r_{u}^{o}, r_{p}^{o}\right)+U\left(r_{v}^{o}, r_{q}^{o}\right)}</script><p>$I$计算两个box交集的区域，$U$计算并集区域。剩余的$m$个对象对被认为是具有意义关系$E$的候选对象。利用$E$，我们得到了一个图$G = (V,E)$，它比原来的全连通图稀疏得多。</p><h3 id="Attentional-GCN"><a href="#Attentional-GCN" class="headerlink" title="Attentional GCN"></a>Attentional GCN</h3><p>GCN是图卷积网络，其实和传统的卷积网络的思路是一样的，不理解的同学可以看看下图。卷积可以看作九宫格的中心点和其他点都连接在一起，那图卷积的意思就是去掉部分连接，这样就形成了图特有的拓扑结构。图中每一个点都会有其相联的点，这样就可以用相联的点来更新本点。所有点都做一次这样的操作相当于进行了一次图卷积操作。</p><script type="math/tex; mode=display">\boldsymbol{z}_{i}^{(l+1)}=\sigma\left(\boldsymbol{z}_{i}^{(l)}+\sum_{j \in \mathcal{N}(i)} \alpha_{i j} W \boldsymbol{z}_{j}^{(l)}\right)</script><script type="math/tex; mode=display">\boldsymbol{z}_{i}^{(l+1)}=\sigma\left(W Z^{(l)} \boldsymbol{\alpha}_{i}\right)</script><p>这个式子用来计算图卷积的结果：</p><p>这个式子的含义是，将节点信息用W做一个映射，再加权求和并累加到目标节点，经过激活函数就得出了新的节点信息。</p><p>想把这个式子应用到场景图中，存在一个问题。那就是我不知道边与边的权值啊，平均分肯定是不合适，所以本文作者就弄出了一个aGCN，来自动生成边上面的权值。</p><script type="math/tex; mode=display">u_{i j}=w_{h}^{T} \sigma\left(W_{a}\left[\boldsymbol{z}_{i}^{(l)}, \boldsymbol{z}_{j}^{(l)}\right]\right)</script><script type="math/tex; mode=display">\boldsymbol{\alpha}_{i}=\operatorname{softmax}\left(\boldsymbol{u}_{i}\right)</script><p>使用之前经过RePN的图，我们就得到了所有的物体边和点。作者受到《Relation networks for object detection.》这篇文章的启发，在所有的点之间也加入了快速连接，这样图中就存在着（点-点）（点-边）的连接。之后使用之前提出的图卷积的做法，作者指出了点与边更新的式子：</p><script type="math/tex; mode=display">\boldsymbol{z}_{i}^{o}=\sigma(\overbrace{W^{\text {skip }} Z^{o} \boldsymbol{\alpha}^{\mathbf{s k i p}}}^{\text {Message from Other Objects}}+\overbrace{W^{s r} Z^{r} \boldsymbol{\alpha}^{s r}+W^{o r} Z^{r} \boldsymbol{\alpha}^{o r}}^{\text {Messages from Neighboring Relationships}})</script><script type="math/tex; mode=display">\boldsymbol{z}_{i}^{r}=\sigma(\boldsymbol{z}_{i}^{r}+\underbrace{W^{r s} Z^{o} \boldsymbol{\alpha}^{r s}+W^{r o} Z^{o} \boldsymbol{\alpha}^{r o}}_{\text {Messages from Neighboring Objects }})</script><p>这个式子其实也很好理解，点的信息使用点和边信息来更新，边的信息只使用点的信息来更新，因为点之间存在着快速连接，而边之间没有。</p><p>接下来作者再次想到一个问题，如何初始化点与边的信息呢？作者的做法是使用了两种aGCN，一种初始化信息使用分类信息，第二种初始化信息使用视觉信息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Graph-R-CNN-for-Scene-Graph-Generation&quot;&gt;&lt;a href=&quot;#Graph-R-CNN-for-Scene-Graph-Generation&quot; class=&quot;headerlink&quot; title=&quot;Graph R-CNN for </summary>
      
    
    
    
    <category term="paper" scheme="http://example.com/categories/paper/"/>
    
    
    <category term="cv" scheme="http://example.com/tags/cv/"/>
    
    <category term="scene graph generation" scheme="http://example.com/tags/scene-graph-generation/"/>
    
  </entry>
  
  <entry>
    <title>Bert</title>
    <link href="http://example.com/2021/04/08/Bert/"/>
    <id>http://example.com/2021/04/08/Bert/</id>
    <published>2021-04-08T09:01:31.000Z</published>
    <updated>2021-04-08T16:07:39.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语言模型的定义和BERT解读"><a href="#语言模型的定义和BERT解读" class="headerlink" title="语言模型的定义和BERT解读"></a>语言模型的定义和BERT解读</h2><p>什么是语言模型, 其实用一个公式就可以表示$P(c_{1},\ldots ,c_{m})$, 假设我们有一句话, $c_{1}$到$c_{m}$是这句话里的$m$个字, 而语言模型就是求的是这句话出现的概率是多少.   </p><p>比如说在一个语音识别的场景, 机器听到一句话是”wo wang dai san le(我忘带伞了)”, 然后机器解析出两个句子, 一个是”我网袋散了”, 另一个是”我忘带伞了”, 也就是前者的概率大于后者. 然后语言模型就可以判断$P(“我忘带伞了”) &gt; P(“我网袋散了”)$, 从而得出这句语音的正确解析结果是”我忘带伞了”.</p><p>BERT的全称是: Bidirectional Encoder Representations from Transformers, 如果翻译过来也就是<strong>双向transformer编码表达</strong>, 我们在上节课解读了transformer的编码器, 编码器输出的隐藏层就是自然语言序列的数学表达, 那么双向是什么意思呢? 我们来看一下下面这张图.</p><p><img src="/2021/04/08/Bert/bidirectional.png" alt></p><p>上图中$E_i$是指的单个字或词, $T_i$指的是最终计算得出的<strong>隐藏层</strong>, 还记得我们在Transformer(一)中讲到的注意力矩阵和注意力加权, 经过这样的操作之后, 序列里面的每一个字, <strong>都含有这个字前面的信息和后面的信息</strong>, 这就是<strong>双向</strong>的理解, 在这里, 一句话中每一个字, 经过注意力机制和加权之后, <strong>当前这个字等于用这句话中其他所有字重新表达了一遍</strong>, 每个字含有了这句话中所有成分的信息.</p><h3 id="在BERT中-主要是以两种预训练的方式来建立语言模型"><a href="#在BERT中-主要是以两种预训练的方式来建立语言模型" class="headerlink" title="在BERT中, 主要是以两种预训练的方式来建立语言模型:"></a>在BERT中, 主要是以两种预训练的方式来建立语言模型:</h3><h4 id="BERT语言模型任务一-MASKED-LM"><a href="#BERT语言模型任务一-MASKED-LM" class="headerlink" title="BERT语言模型任务一: MASKED LM"></a>BERT语言模型任务一: MASKED LM</h4><p>在BERT中, Masked LM(Masked language Model)构建了语言模型, 这也是BERT的预训练中任务之一, 简单来说, 就是<strong>随机遮盖或替换</strong>一句话里面任意字或词, 然后让模型通过上下文的理解预测那一个被遮盖或替换的部分, 之后<strong>做$Loss$的时候只计算被遮盖部分的$Loss$</strong>, 其实是一个很容易理解的任务, 实际操作方式如下:   </p><ol><li>随机把一句话中$15\%$的$token$替换成以下内容:<br>1) 这些$token$有$80\%$的几率被替换成$[mask]$;<br>2) 有$10 \%$的几率被替换成任意一个其他的$token$;<br>3) 有$10 \%$的几率原封不动.</li><li>之后让模型<strong>预测和还原</strong>被遮盖掉或替换掉的部分, 模型最终输出的隐藏层的计算结果的维度是:   </li></ol><p>$X_{hidden}: [batch_size, \ seq_len, \  embedding_dim]$   </p><p>我们初始化一个映射层的权重$W_{vocab}$:   </p><p>$W_{vocab}: [embedding_dim, \ vocab_size]$   </p><p>我们用$W_{vocab}$完成隐藏维度到字向量数量的映射, 只要求$X_{hidden}$和$W_{vocab}$的矩阵乘(点积):   </p><p>$X_{hidden}W_{vocab}: [batch_size, \ seq_len, \ vocab_size]$</p><p>之后把上面的计算结果在$vocab_size$(最后一个)维度做$softmax$归一化, 是每个字对应的$vocab_size$的和为$1$, 我们就可以通过$vocab_size$里概率最大的字来得到模型的预测结果, 就可以和我们准备好的$Label$做损失($Loss$)并反传梯度了.<br>注意做损失的时候, 只计算在第1步里当句中<strong>随机遮盖或替换</strong>的部分, 其余部分不做损失, 对于其他部分, 模型输出什么东西, 我们不在意.</p><h4 id="BERT语言模型任务二-Next-Sentence-Prediction"><a href="#BERT语言模型任务二-Next-Sentence-Prediction" class="headerlink" title="BERT语言模型任务二: Next Sentence Prediction"></a>BERT语言模型任务二: Next Sentence Prediction</h4><ol><li>首先我们拿到属于上下文的一对句子, 也就是两个句子, 之后我们要在这两段连续的句子里面加一些特殊$token$:<br>$[cls]$上一句话,$[sep]$下一句话.$[sep]$<br>也就是在句子开头加一个$[cls]$, 在两句话之中和句末加$[sep]$, 具体地就像下图一样:   </li></ol><p><img src="/2021/04/08/Bert/embeddings.png" alt></p><ol><li>我们看到上图中两句话是$[cls]$ my dog is cute $[sep]$ he likes playing $[sep]$, $[cls]$我的狗很可爱$[sep]$他喜欢玩耍$[sep]$, 除此之外, 我们还要准备同样格式的两句话, 但他们不属于上下文关系的情况;<br>$[cls]$我的狗很可爱$[sep]$企鹅不擅长飞行$[sep]$, 可见这属于上下句不属于上下文关系的情况;<br>在实际的训练中, 我们让上面两种情况出现的比例为$1:1$, 也就是一半的时间输出的文本属于上下文关系, 一半时间不是.</li><li>我们进行完上述步骤之后, 还要随机初始化一个可训练的$segment \ embeddings$, 见上图中, 作用就是用$embeddings$的信息让模型分开上下句, 我们一把给上句全$0$的$token$, 下句啊全$1$的$token$, 让模型得以判断上下句的起止位置, 例如:<br>$[cls]$我的狗很可爱$[sep]$企鹅不擅长飞行$[sep]$<br>$0 \quad  \  0 \ \ 0 \ \  0 \ \ 0 \ \ 0 \ \ 0 \ \  0 \ \ \ 1 \ \  1 \ \ 1 \ \ 1 \ \ 1 \ \ 1 \ \ 1 \ \ 1$<br>上面$0$和$1$就是$segment \ embeddings$.</li><li>还记得我们上节课说过的, 注意力机制就是, 让每句话中的每一个字对应的那一条向量里, 都融入这句话所有字的信息, 那么我们在最终隐藏层的计算结果里, 只要取出$[cls]token$所对应的一条向量, 里面就含有整个句子的信息, 因为我们期望这个句子里面所有信息都会往$[cls]token$所对应的一条向量里汇总:<br>模型最终输出的隐藏层的计算结果的维度是:   </li></ol><p>我们$X_{hidden}: [batch_size, \ seq_len, \  embedding_dim]$   </p><p>我们要取出$[cls]token$所对应的一条向量, $[cls]$对应着$\ seq_len$维度的第$0$条:   </p><p>$cls_vector = X_{hidden}[:, \ 0, \ :]$   </p><p>$cls_vector \in \mathbb{R}^{batch_size, \  embedding_dim}$   </p><p>之后我们再初始化一个权重, 完成从$embedding_dim$维度到$1$的映射, 也就是逻辑回归, 之后用$sigmoid$函数激活, 就得到了而分类问题的推断.<br>我们用$\hat{y}$来表示模型的输出的推断, 他的值介于$(0, \ 1)$之间:   </p><p>$\hat{y} = sigmoid(Linear(cls_vector)) \quad \hat{y} \in (0, \ 1)$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;语言模型的定义和BERT解读&quot;&gt;&lt;a href=&quot;#语言模型的定义和BERT解读&quot; class=&quot;headerlink&quot; title=&quot;语言模型的定义和BERT解读&quot;&gt;&lt;/a&gt;语言模型的定义和BERT解读&lt;/h2&gt;&lt;p&gt;什么是语言模型, 其实用一个公式就可以表示$</summary>
      
    
    
    
    <category term="模型" scheme="http://example.com/categories/%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="nlp" scheme="http://example.com/tags/nlp/"/>
    
    <category term="预训练" scheme="http://example.com/tags/%E9%A2%84%E8%AE%AD%E7%BB%83/"/>
    
    <category term="词向量" scheme="http://example.com/tags/%E8%AF%8D%E5%90%91%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>SceneGraphGeneration</title>
    <link href="http://example.com/2021/04/07/SceneGraphGeneration/"/>
    <id>http://example.com/2021/04/07/SceneGraphGeneration/</id>
    <published>2021-04-07T06:56:21.000Z</published>
    <updated>2021-04-11T09:25:15.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习链接"><a href="#学习链接" class="headerlink" title="学习链接"></a>学习链接</h2><p><a href="https://blog.csdn.net/qq_39388410/article/details/105877505">https://blog.csdn.net/qq_39388410/article/details/105877505</a></p><p><a href="https://cloud.tencent.com/developer/article/1598413">https://cloud.tencent.com/developer/article/1598413</a></p><h2 id="问题-amp-任务"><a href="#问题-amp-任务" class="headerlink" title="问题 &amp; 任务"></a>问题 &amp; 任务</h2><p>图片场景图生成任务（Image scene graph generation）目标是让计算机自动生成一种语义化的图结构（称为 scene graph，场景图），作为图像的表示。图像中的目标对应 graph node，目标间的关系对应 graph edge（目标的各种属性，如颜色，有时会在图中表示）。</p><p>这种结构化表示方法相对于向量表示更加直观，可以看做是小型知识图谱，因此可以广泛应用于知识管理、推理、检索、推荐等。此外，该表示方法是模态无关的，自然语言、视频、语音等数据同样可以表示成类似结构，因此对于融合多模态信息很有潜力。</p><p>Scene graph 刚开始提出时[1]，被应用到图片检索任务，利用 scene graph 去图片库搜索内容相近的图片。当时使用到的 scene graph 是基于目标检测数据集人工标注的，耗时耗力。随着 Visual Genome 大型数据集的公开，其对超过十万的图片进行了 scene graph 的人工标注，如何自动生成 scene graph 成为了热门的研究任务。</p><p><img src="/2021/04/07/SceneGraphGeneration/img1.jpg"></p><center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 1</center><p>形式化地，记关系集合为R，目标集为O, 目标位置为B （一般是 Bounding box），图像为 I，则图片场景图为G={ B, O, R}。根据给定条件多少，场景图生成任务可以由简单到复杂细分为以下几种：</p><p>关系分类(Predicate classification): 给定图中目标位置及类别，对关系进行归类，记为 P(R | O, B, I)。<br>场景图分类(Scene graph classification): 给定图中目标位置，对关系及目标关系进行归类，记为 P(R, O | B, I)。<br>场景图生成(Scene graph generation): 只给定图片，要求生成 scene graph，记为 P( G={R, O, B} | I)。<br>前一个任务可认为是后一个任务简化版。在评测模型能力时，一般需要考察模型在此三个任务的表现，以评价模型中关系分类模块、目标分类模块及目标定位模块的作用。</p><h2 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h2><p>Visual Genome 于2016年提出[1]，是这个领域最常用的数据集，包含对超过 10W 张图片的目标、属性、关系、自然语言描述、视觉问答等的标注。与此任务相关的数据总结如下：</p><p>目标 or 图节点：用 bounding box 标注位置，并且有对应的类别名称。Visual Genome 包含约 17,000 种目标。<br>关系 or 图的边：可以动作 (jumping over)，空间关系（on），从属关系(belong-to, has)，动词(wear)等。Visual Genome 包含一共 13K 种关系。<br>属性（在图中附着在是节点上）：可以实验颜色(yellow)，状态(standing)等。Visual Genome 包含约 155000 种属性。<br>对于目标、关系、属性对应的字词，使用了 WordNet 进行规范化，目的是为了归并同义词。不过常用的只是 Visual Genome 的一个子集（[3,4,5] 文献都用到这个子集，简称为 VG150），选取了150 种常见目标，50 种常见关系，统计详见下表[2], [3]。</p><p><img src="/2021/04/07/SceneGraphGeneration/img2.jpg" width="80%"></p><center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 2</center><h2 id="方法分类"><a href="#方法分类" class="headerlink" title="方法分类"></a>方法分类</h2><p>目前的大多数场景图生成模型，根据任务的分解大致分为如下两种：</p><ol><li>P(O,B,R | I) = P(O,B | I) * P(R| I,O,B)，即先目标检测，再进行关系预测（有一个专门研究该子任务的领域，称为研究视觉关系识别，visual relationship detection）。最简单的方法是下文中基于统计频率的 baseline 方法，另外做视觉关系检测任务的大多数工作都可以应用到这里。</li><li>P(O,B,R | I) = P(B | I) * P(R,O| I,O,B)，即先定位目标，然后将一张图片中所有的目标和关系看做一个未标记的图结构，再分别对节点和边进行类别预测。这种做法考虑到了一张图片中的各元素互为上下文，为彼此分类提供辅助信息。接下来的 IMP、GRCNN 及 Neural Motif 中基于 RNN 的方法属于这一类。事实上，自此类方法提出之后 [2]，才正式有了 scene graph generation 这个新任务名称（之前基本都称为 visual relationship detection）。</li></ol><h2 id="当前的挑战"><a href="#当前的挑战" class="headerlink" title="当前的挑战"></a>当前的挑战</h2><p>最近从数据角度，发现该任务的几个棘手的问题。</p><ol><li>关系简单。从表1看出，空间关系和从属关系占了所有标注的90%以上，语义关系只占很少部分。</li><li>关系类别不互斥。比如 on, sitting on。这使得同一对目标可能存在多个关系标注。视觉关系分类建模成“多选一”的分类问题是否合理，也需要深思。</li><li>关系整体分布长尾效应严重。一般而言，可以将视觉关系分为空间关系、从属关系和语义关系等几种。对每一种关系的画柱状图，可以看出长尾分布非常严重。</li><li>关系的条件分布 bias 问题严重。比如已知主语宾语是 person 和 head，基本就可以猜测关系是 person has head 或是无关系。这也导致用复杂模型来预测并不比盲猜好多少的现象。</li><li>标注稀疏。VG 数据集每个图片大致有10个标注目标，但只有不到5组关系标注。很多目标之间存在关系，但却没有标注。</li></ol><p>这些问题不能完全归咎于数据集，很大程度上由任务本身决定，换数据集问题照样存在。还有毕竟重建数据集工作量巨大，也不能保证重新标注得多好。更聪明的做法或许是接受现实，从解决问题的方法上努力，比如引入半监督学习处理标注稀疏的问题 [10]，或者引入因果推理处理 bias 问题 [5]。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p>[1] J. Johnson et al., “Image retrieval using scene graphs,” in 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Boston, MA, USA, Jun. 2015, pp. 3668–3678, doi: 10.1109/CVPR.2015.7298990.</p><p>[2] D. Xu, Y. Zhu, C. B. Choy, and L. Fei-Fei, “Scene Graph Generation by Iterative Message Passing,” p. 10, 2017.</p><p>[3] R. Zellers, M. Yatskar, S. Thomson, and Y. Choi, “Neural Motifs: Scene Graph Parsing with Global Context,” in 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, Jun. 2018, pp. 5831–5840, doi: 10.1109/CVPR.2018.00611.</p><p>[4] S. Ren, K. He, R. Girshick, and J. Sun, “Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks,” IEEE Trans. Pattern Anal. Mach. Intell., vol. 39, no. 6, pp. 1137–1149, 2017, doi: 10.1109/TPAMI.2016.2577031.</p><p>[5] K. Tang, Y. Niu, J. Huang, J. Shi, and H. Zhang, “Unbiased Scene Graph Generation from Biased Training,” ArXiv200211949 Cs, Mar. 2020, Accessed: Mar. 10, 2020. [Online]. Available: <a href="http://arxiv.org/abs/2002.11949">http://arxiv.org/abs/2002.11949</a>.</p><p>[6] C. Lu, R. Krishna, M. Bernstein, and L. Fei-Fei, “Visual Relationship Detection with Language Priors,” ArXiv160800187 Cs, Jul. 2016, Accessed: Mar. 04, 2020. [Online]. Available: <a href="http://arxiv.org/abs/1608.00187">http://arxiv.org/abs/1608.00187</a>.</p><p>[7] J. Yang, J. Lu, S. Lee, D. Batra, and D. Parikh, “Graph R-CNN for Scene Graph Generation,” ArXiv180800191 Cs, Aug. 2018, Accessed: Feb. 21, 2020. [Online]. Available: <a href="http://arxiv.org/abs/1808.00191">http://arxiv.org/abs/1808.00191</a>.</p><p>[8] R. Krishna et al., “Visual Genome: Connecting Language and Vision Using Crowdsourced Dense Image Annotations,” ArXiv160207332 Cs, Feb. 2016, Accessed: Feb. 22, 2020. [Online]. Available: <a href="http://arxiv.org/abs/1602.07332">http://arxiv.org/abs/1602.07332</a>.</p><p>[9] A. Zareian, S. Karaman, and S.-F. Chang, “Bridging Knowledge Graphs to Generate Scene Graphs,” ArXiv200102314 Cs, Jan. 2020, Accessed: Feb. 22, 2020. [Online]. Available: <a href="http://arxiv.org/abs/2001.02314">http://arxiv.org/abs/2001.02314</a>.</p><p>[10] V. S. Chen, P. Varma, R. Krishna, M. Bernstein, C. Re, and L. Fei-Fei, “Scene graph prediction with limited labels,” in Proceedings of the IEEE International Conference on Computer Vision, 2019, pp. 2580–2590.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;学习链接&quot;&gt;&lt;a href=&quot;#学习链接&quot; class=&quot;headerlink&quot; title=&quot;学习链接&quot;&gt;&lt;/a&gt;学习链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_39388410/article/details/105</summary>
      
    
    
    
    <category term="任务讲解" scheme="http://example.com/categories/%E4%BB%BB%E5%8A%A1%E8%AE%B2%E8%A7%A3/"/>
    
    
    <category term="nlp" scheme="http://example.com/tags/nlp/"/>
    
    <category term="cv" scheme="http://example.com/tags/cv/"/>
    
  </entry>
  
  <entry>
    <title>常用数据集</title>
    <link href="http://example.com/2021/04/04/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    <id>http://example.com/2021/04/04/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E9%9B%86/</id>
    <published>2021-04-04T15:09:47.000Z</published>
    <updated>2021-04-04T15:53:44.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自然语言处理领域"><a href="#自然语言处理领域" class="headerlink" title="自然语言处理领域"></a>自然语言处理领域</h2><h3 id="1）IMDb-Large-Movie-Review-Dataset"><a href="#1）IMDb-Large-Movie-Review-Dataset" class="headerlink" title="1）IMDb Large Movie Review Dataset"></a>1）IMDb Large Movie Review Dataset</h3><p>用于情感二元分类的数据集，其中包含 25,000 条用于训练的电影评论和 25,000 条用于测试的电影评论，这些电影评论的特点是两极分化特别明显。另外数据集里也包含未标记的数据可供使用。</p><p>引文：<a href="http://ai.stanford.edu/~amaas/papers/wvSent_acl2011.pdf">http://ai.stanford.edu/~amaas/papers/wvSent_acl2011.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/imdb.tgz">https://s3.amazonaws.com/fast-ai-nlp/imdb.tgz</a></p><h3 id="2）Wikitext-103"><a href="#2）Wikitext-103" class="headerlink" title="2）Wikitext-103"></a>2）Wikitext-103</h3><p>超过 1 亿个语句的数据合集，全部从维基百科的 Good 与 Featured 文章中提炼出来。广泛用于语言建模，当中包括 fastai 库和 ULMFiT 算法中经常用到的预训练模型。</p><p>引文：<a href="https://arxiv.org/abs/1609.07843">https://arxiv.org/abs/1609.07843</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/wikitext-103.tgz">https://s3.amazonaws.com/fast-ai-nlp/wikitext-103.tgz</a></p><h3 id="3）Wikitext-2"><a href="#3）Wikitext-2" class="headerlink" title="3）Wikitext-2"></a>3）Wikitext-2</h3><p>Wikitext-103 的子集，主要用于测试小型数据集的语言模型训练效果。</p><p>引文：<a href="https://arxiv.org/abs/1609.07843">https://arxiv.org/abs/1609.07843</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/wikitext-2.tgz">https://s3.amazonaws.com/fast-ai-nlp/wikitext-2.tgz</a></p><h3 id="4）WMT-2015-French-English-parallel-texts"><a href="#4）WMT-2015-French-English-parallel-texts" class="headerlink" title="4）WMT 2015 French/English parallel texts"></a>4）WMT 2015 French/English parallel texts</h3><p>用于训练翻译模型的法语/英语平行文本，拥有超过 2000 万句法语与英语句子。本数据集由 Chris Callison-Burch 创建，他抓取了上百万个网页，然后通过一组简单的启发式算法将法语网址转换为英文网址，并默认这些文档之间互为译文。</p><p>引文：<a href="https://www.cis.upenn.edu/~ccb/publications/findings-of-the-wmt09-shared-tasks.pdf">https://www.cis.upenn.edu/~ccb/publications/findings-of-the-wmt09-shared-tasks.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/giga-fren.tgz">https://s3.amazonaws.com/fast-ai-nlp/giga-fren.tgz</a></p><h3 id="5）AG-News"><a href="#5）AG-News" class="headerlink" title="5）AG News"></a>5）AG News</h3><p>496,835 条来自 AG 新闻语料库 4 大类别超过 2000 个新闻源的新闻文章，数据集仅仅援用了标题和描述字段。每个类别分别拥有 30,000 个训练样本及 1900 个测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/ag_news_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/ag_news_csv.tgz</a></p><h3 id="6）Amazon-reviews-Full"><a href="#6）Amazon-reviews-Full" class="headerlink" title="6）Amazon reviews - Full"></a>6）Amazon reviews - Full</h3><p>34,686,770 条来自 6,643,669 名亚马逊用户针对 2,441,053 款产品的评论，数据集主要来源于斯坦福网络分析项目（SNAP）。数据集的每个类别分别包含 600,000 个训练样本和 130,000 个测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/amazon_review_full_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/amazon_review_full_csv.tgz</a></p><h3 id="7）Amazon-reviews-Polarity"><a href="#7）Amazon-reviews-Polarity" class="headerlink" title="7）Amazon reviews - Polarity"></a>7）Amazon reviews - Polarity</h3><p>34,686,770 条来自 6,643,669 名亚马逊用户针对 2,441,053 款产品的评论，数据集主要来源于斯坦福网络分析项目（SNAP）。该子集的每个情绪极性数据集分别包含 1,800,000 个训练样本和 200,000 个测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/amazon_review_polarity_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/amazon_review_polarity_csv.tgz</a></p><h3 id="8）DBPedia-ontology"><a href="#8）DBPedia-ontology" class="headerlink" title="8）DBPedia ontology"></a>8）DBPedia ontology</h3><p>来自 DBpedia 2014 的 14 个不重叠的分类的 40,000 个训练样本和 5,000 个测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/dbpedia_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/dbpedia_csv.tgz</a></p><h3 id="9）Sogou-news"><a href="#9）Sogou-news" class="headerlink" title="9）Sogou news"></a>9）Sogou news</h3><p>2,909,551 篇来自 SogouCA 和 SogouCS 新闻语料库 5 个类别的新闻文章。每个类别分别包含 90,000 个训练样本和 12,000 个测试样本。这些汉字都已经转换成拼音。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/sogou_news_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/sogou_news_csv.tgz</a></p><h3 id="10）Yahoo-Answers"><a href="#10）Yahoo-Answers" class="headerlink" title="10）Yahoo! Answers"></a>10）Yahoo! Answers</h3><p>来自雅虎 Yahoo! Answers Comprehensive Questions and Answers1.0 数据集的 10 个主要分类数据。每个类别分别包含 140,000 个训练样本和 5,000 个测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/yahoo_answers_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/yahoo_answers_csv.tgz</a></p><h3 id="11）Yelp-reviews-Full"><a href="#11）Yelp-reviews-Full" class="headerlink" title="11）Yelp reviews - Full"></a>11）Yelp reviews - Full</h3><p>来自 2015 年 Yelp Dataset Challenge 数据集的 1,569,264 个样本。每个评级分别包含 130,000 个训练样本和 10,000 个 测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/yelp_review_full_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/yelp_review_full_csv.tgz</a></p><h3 id="12）Yelp-reviews-Polarity"><a href="#12）Yelp-reviews-Polarity" class="headerlink" title="12）Yelp reviews - Polarity"></a>12）Yelp reviews - Polarity</h3><p>来自 2015 年 Yelp Dataset Challenge 数据集的 1,569,264 个样本。该子集中的不同极性分别包含 280,000 个训练样本和 19,000 个测试样本。</p><p>引文：<a href="https://arxiv.org/abs/1509.01626">https://arxiv.org/abs/1509.01626</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-nlp/yelp_review_polarity_csv.tgz">https://s3.amazonaws.com/fast-ai-nlp/yelp_review_polarity_csv.tgz</a></p><h2 id="图像分类领域"><a href="#图像分类领域" class="headerlink" title="图像分类领域"></a>图像分类领域</h2><h3 id="1）MNIST"><a href="#1）MNIST" class="headerlink" title="1）MNIST"></a>1）MNIST</h3><p>经典的小型（28x28 像素）灰度手写数字数据集，开发于 20 世纪 90 年代，主要用于测试当时最复杂的模型；到了今日，MNIST 数据集更多被视作深度学习的基础教材。fast.ai 版本的数据集舍弃了原始的特殊二进制格式，转而采用标准的 PNG 格式，以便在目前大多数代码库中作为正常的工作流使用；如果您只想使用与原始同样的单输入通道，只需在通道轴中选取单个切片即可。</p><p>引文：<a href="http://yann.lecun.com/exdb/publis/index.html#lecun-98">http://yann.lecun.com/exdb/publis/index.html#lecun-98</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/mnist_png.tgz">https://s3.amazonaws.com/fast-ai-imageclas/mnist_png.tgz</a></p><h3 id="2）CIFAR10"><a href="#2）CIFAR10" class="headerlink" title="2）CIFAR10"></a>2）CIFAR10</h3><p>10 个类别，多达 60000 张的 32x32 像素彩色图像（50000 张训练图像和 10000 张测试图像），平均每种类别拥有 6000 张图像。广泛用于测试新算法的性能。fast.ai 版本的数据集舍弃了原始的特殊二进制格式，转而采用标准的 PNG 格式，以便在目前大多数代码库中作为正常的工作流使用。</p><p>引文：<a href="https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf">https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/cifar10.tgz">https://s3.amazonaws.com/fast-ai-imageclas/cifar10.tgz</a></p><h3 id="3）CIFAR100"><a href="#3）CIFAR100" class="headerlink" title="3）CIFAR100"></a>3）CIFAR100</h3><p>与 CIFAR-10 类似，区别在于 CIFAR-100 拥有 100 种类别，每个类别包含 600 张图像（500 张训练图像和 100 张测试图像），然后这 100 个类别又被划分为 20 个超类。因此，数据集里的每张图像自带一个「精细」标签（所属的类）和一个「粗略」标签（所属的超类）。</p><p>引文：<a href="https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf">https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/cifar100.tgz">https://s3.amazonaws.com/fast-ai-imageclas/cifar100.tgz</a></p><h3 id="4）Caltech-UCSD-Birds-200-2011"><a href="#4）Caltech-UCSD-Birds-200-2011" class="headerlink" title="4）Caltech-UCSD Birds-200-2011"></a>4）Caltech-UCSD Birds-200-2011</h3><p>包含 200 种鸟类（主要为北美洲鸟类）照片的图像数据集，可用于图像识别工作。分类数量：200；图片数量：11,788；平均每张图片含有的标注数量：15 个局部位置，312 个二进制属性，1 个边框框。</p><p>引文：<a href="http://vis-www.cs.umass.edu/bcnn/">http://vis-www.cs.umass.edu/bcnn/</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/CUB_200_2011.tgz">https://s3.amazonaws.com/fast-ai-imageclas/CUB_200_2011.tgz</a></p><h3 id="5）Caltech-101"><a href="#5）Caltech-101" class="headerlink" title="5）Caltech 101"></a>5）Caltech 101</h3><p>包含 101 种物品类别的图像数据集，平均每个类别拥有 40—800 张图像，其中很大一部分类别的图像数量固为 50 张左右。每张图像的大小约为 300 x 200 像素。本数据集也可以用于目标检测定位。</p><p>引文：<a href="http://www.vision.caltech.edu/feifeili/Fei-Fei_GMBV04.pdf">http://www.vision.caltech.edu/feifeili/Fei-Fei_GMBV04.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/caltech_101.tar.gz">https://s3.amazonaws.com/fast-ai-imageclas/caltech_101.tar.gz</a></p><h3 id="6）Oxford-IIIT-Pet"><a href="#6）Oxford-IIIT-Pet" class="headerlink" title="6）Oxford-IIIT Pet"></a>6）Oxford-IIIT Pet</h3><p>包含 37 种宠物类别的图像数据集，每个类别约有 200 张图像。这些图像在比例、姿势以及光照方面有着丰富的变化。本数据集也可以用于目标检测定位。</p><p>引文：<a href="http://www.robots.ox.ac.uk/~vgg/publications/2012/parkhi12a/parkhi12a.pdf">http://www.robots.ox.ac.uk/~vgg/publications/2012/parkhi12a/parkhi12a.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/oxford-iiit-pet.tgz">https://s3.amazonaws.com/fast-ai-imageclas/oxford-iiit-pet.tgz</a></p><h3 id="7）Oxford-102-Flowers"><a href="#7）Oxford-102-Flowers" class="headerlink" title="7）Oxford 102 Flowers"></a>7）Oxford 102 Flowers</h3><p>包含 102 种花类的图像数据集（主要是一些英国常见的花类），每个类别包含 40—258 张图像。这些图像在比例、姿势以及光照方面有着丰富的变化。</p><p>引文：<a href="http://www.robots.ox.ac.uk/~vgg/publications/papers/nilsback08.pdf">http://www.robots.ox.ac.uk/~vgg/publications/papers/nilsback08.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/oxford-102-flowers.tgz">https://s3.amazonaws.com/fast-ai-imageclas/oxford-102-flowers.tgz</a></p><h3 id="8）Food-101"><a href="#8）Food-101" class="headerlink" title="8）Food-101"></a>8）Food-101</h3><p>包含 101 种食品类别的图像数据集，共有 101,000 张图像，平均每个类别拥有 250 张测试图像和 750 张训练图像。训练图像未经过数据清洗。所有图像都已经重新进行了尺寸缩放，最大边长达到了 512 像素。</p><p>引文：<a href="https://pdfs.semanticscholar.org/8e3f/12804882b60ad5f59aad92755c5edb34860e.pdf">https://pdfs.semanticscholar.org/8e3f/12804882b60ad5f59aad92755c5edb34860e.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/food-101.tgz">https://s3.amazonaws.com/fast-ai-imageclas/food-101.tgz</a></p><h3 id="9）Stanford-cars"><a href="#9）Stanford-cars" class="headerlink" title="9）Stanford cars"></a>9）Stanford cars</h3><p>包含 196 种汽车类别的图像数据集，共有 16,185 张图像，分别为 8,144 张训练图像和 8,041 张测试图像，每个类别的图像类型比例基本上都是五五开。本数据集的类别主要基于汽车的牌子、车型以及年份进行划分。</p><p>引文：<a href="https://ai.stanford.edu/~jkrause/papers/3drr13.pdf">https://ai.stanford.edu/~jkrause/papers/3drr13.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imageclas/stanford-cars.tgz">https://s3.amazonaws.com/fast-ai-imageclas/stanford-cars.tgz</a></p><h2 id="目标检测定位"><a href="#目标检测定位" class="headerlink" title="目标检测定位"></a>目标检测定位</h2><h3 id="1）Camvid-Motion-based-Segmentation-and-Recognition-Dataset"><a href="#1）Camvid-Motion-based-Segmentation-and-Recognition-Dataset" class="headerlink" title="1）Camvid: Motion-based Segmentation and Recognition Dataset"></a>1）Camvid: Motion-based Segmentation and Recognition Dataset</h3><p>700 张包含像素级别语义分割的图像分割数据集，每张图像都经过第二个人的检查和确认来确保数据的准确性。</p><p>引文：<a href="https://pdfs.semanticscholar.org/08f6/24f7ee5c3b05b1b604357fb1532241e208db.pdf">https://pdfs.semanticscholar.org/08f6/24f7ee5c3b05b1b604357fb1532241e208db.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imagelocal/camvid.tgz">https://s3.amazonaws.com/fast-ai-imagelocal/camvid.tgz</a></p><h3 id="2）PASCAL-Visual-Object-Classes-VOC"><a href="#2）PASCAL-Visual-Object-Classes-VOC" class="headerlink" title="2）PASCAL Visual Object Classes (VOC)"></a>2）PASCAL Visual Object Classes (VOC)</h3><p>用于类识别的标准图像数据集——这里同时提供了 2007 与 2012 版本。2012 年的版本拥有 20 个类别。训练数据的 11,530 张图像中包含了 27,450 个 ROI 注释对象和 6,929 个目标分割数据。</p><p>引文：<a href="http://host.robots.ox.ac.uk/pascal/VOC/pubs/everingham10.pdf">http://host.robots.ox.ac.uk/pascal/VOC/pubs/everingham10.pdf</a></p><p>下载地址：<a href="https://s3.amazonaws.com/fast-ai-imagelocal/pascal-voc.tgz">https://s3.amazonaws.com/fast-ai-imagelocal/pascal-voc.tgz</a></p><p>COCO 数据集</p><p>目前最常用于图像检测定位的数据集应该要属 COCO 数据集（全称为 Common Objects in Context）。本文提供 2017 版 COCO 数据集的所有文件，另外附带由 fast.ai 创建的子集数据集。我们可以从 COCO 数据集下载页面（<a href="http://cocodataset.org/#download）获取每个">http://cocodataset.org/#download）获取每个</a> COCO 数据集的详情。fast.ai 创建的子集数据集包含五个选定类别的所有图像，这五个选定类别分别为：椅子、沙发、电视遥控、书籍和花瓶。</p><p>fast.ai 创建的子集数据集：<a href="https://s3.amazonaws.com/fast-ai-coco/coco_sample.tgz">https://s3.amazonaws.com/fast-ai-coco/coco_sample.tgz</a></p><p>训练图像数据集：<a href="https://s3.amazonaws.com/fast-ai-coco/train2017.zip">https://s3.amazonaws.com/fast-ai-coco/train2017.zip</a></p><p>验证图像数据集：<a href="https://s3.amazonaws.com/fast-ai-coco/val2017.zip">https://s3.amazonaws.com/fast-ai-coco/val2017.zip</a></p><p>测试图像数据集：<a href="https://s3.amazonaws.com/fast-ai-coco/test2017.zip">https://s3.amazonaws.com/fast-ai-coco/test2017.zip</a></p><p>未经标注的图像数据集：<a href="https://s3.amazonaws.com/fast-ai-coco/unlabeled2017.zip">https://s3.amazonaws.com/fast-ai-coco/unlabeled2017.zip</a></p><p>测试图像数据集详情：<a href="https://s3.amazonaws.com/fast-ai-coco/image_info_test2017.zip">https://s3.amazonaws.com/fast-ai-coco/image_info_test2017.zip</a></p><p>未经标注的图像数据集详情：<a href="https://s3.amazonaws.com/fast-ai-coco/image_info_unlabeled2017.zip">https://s3.amazonaws.com/fast-ai-coco/image_info_unlabeled2017.zip</a></p><p>训练/验证注释集：<a href="https://s3.amazonaws.com/fast-ai-coco/annotations_trainval2017.zip">https://s3.amazonaws.com/fast-ai-coco/annotations_trainval2017.zip</a></p><p>主体训练/验证注释集：<a href="https://s3.amazonaws.com/fast-ai-coco/stuff_annotations_trainval2017.zip">https://s3.amazonaws.com/fast-ai-coco/stuff_annotations_trainval2017.zip</a></p><p>全景训练/验证注释集：<a href="https://s3.amazonaws.com/fast-ai-coco/panoptic_annotations_trainval2017.zip">https://s3.amazonaws.com/fast-ai-coco/panoptic_annotations_trainval2017.zip</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;自然语言处理领域&quot;&gt;&lt;a href=&quot;#自然语言处理领域&quot; class=&quot;headerlink&quot; title=&quot;自然语言处理领域&quot;&gt;&lt;/a&gt;自然语言处理领域&lt;/h2&gt;&lt;h3 id=&quot;1）IMDb-Large-Movie-Review-Dataset&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="数据集" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    
    
    <category term="数据集" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    
  </entry>
  
</feed>
